state 3 contains 2 shift/reduce conflicts
state 51 contains 1 shift/reduce conflicts
state 59 contains 1 shift/reduce conflicts
state 61 contains 1 reduce/reduce conflicts
state 74 contains 2 shift/reduce conflicts
state 95 contains 2 shift/reduce conflicts
state 98 contains 1 shift/reduce conflicts
state 146 contains 1 reduce/reduce conflicts
state 170 contains 1 shift/reduce conflicts
state 174 contains 1 shift/reduce conflicts
state 185 contains 1 shift/reduce conflicts
state 262 contains 1 reduce/reduce conflicts
state 275 contains 1 shift/reduce conflicts
state 282 contains 1 shift/reduce conflicts
state 293 contains 1 shift/reduce conflicts
state 310 contains 14 shift/reduce conflicts
state 344 contains 1 shift/reduce conflicts
state 419 contains 1 shift/reduce conflicts
state 466 contains 1 shift/reduce conflicts

rule 135 (case_allowed_statement) never reduced
rule 136 (case_allowed_statement) never reduced
useless nonterminal case_allowed_statement

-------- Grammar --------

rule 1 program: statements
rule 2 program: 
rule 3 statements: statement terminator
rule 4 statements: statements statement terminator
rule 5 block: NEWLINE statements
rule 6 optional_newline: NEWLINE
rule 7 optional_newline: 
rule 8 statement: comment
rule 9 statement: message
rule 10 statement: definition
rule 11 statement: namespace
rule 12 statement: motion_statement
rule 13 statement: position_assignment
rule 14 statement: label_definition
rule 15 statement: address
rule 16 statement: conditional
rule 17 statement: inline_conditional
rule 18 statement: conditional_block
rule 19 statement: forloop
rule 20 statement: while_loop
rule 21 statement: use_statement
rule 22 statement: set_skip_statement
rule 23 statement: wait_statement
rule 24 statement: case_statement
rule 25 statement: fanuc_eval
rule 26 statement: timer_method
rule 27 statement: position_data
rule 28 statement: raise
rule 29 statement: tp_header_definition
rule 30 statement: lpos_or_jpos
rule 31 statement: empty_stmt
rule 32 statement: warning
rule 33 statement: var_system
rule 34 statement: PAUSE
rule 35 statement: ABORT
rule 36 statement: return_statement
rule 37 statement: collguard_statement
rule 38 statement: function
rule 39 statement: tp_application_definition
rule 40 statement: using_statement
rule 41 statement: import_statement
rule 42 statement: compile_statement
rule 43 lpos_or_jpos: LPOS LPAREN var_or_indirect RPAREN
rule 44 lpos_or_jpos: JPOS LPAREN var_or_indirect RPAREN
rule 45 empty_stmt: NEWLINE
rule 46 tp_header_definition: TP_HEADER EQUAL tp_header_value
rule 47 tp_header_value: STRING
rule 48 tp_header_value: TRUE_FALSE
rule 49 tp_tool_methods: LBRACE sn tp_tool_attributes sn RBRACE
rule 50 tp_tool_methods: LBRACE sn RBRACE
rule 51 tp_tool_attributes: tp_tool_attribute
rule 52 tp_tool_attributes: tp_tool_attributes COMMA sn tp_tool_attribute
rule 53 tp_tool_attribute: WORD COLON hash_value
rule 54 tp_application_definition: TP_APPLICATION_TYPE EQUAL sn tp_tool_methods
rule 55 raise: RAISE var_or_indirect
rule 56 timer_method: TIMER_METHOD var_or_indirect
rule 57 fanuc_eval: EVAL STRING
rule 58 wait_statement: WAIT_FOR LPAREN indirectable COMMA STRING RPAREN
rule 59 wait_statement: WAIT_UNTIL LPAREN expression RPAREN
rule 60 wait_statement: WAIT_UNTIL LPAREN expression RPAREN DOT wait_modifier
rule 61 wait_statement: WAIT_UNTIL LPAREN expression RPAREN DOT wait_modifier DOT wait_modifier
rule 62 wait_modifier: timeout_modifier
rule 63 wait_modifier: after_modifier
rule 64 timeout_modifier: swallow_newlines TIMEOUT LPAREN label RPAREN
rule 65 after_modifier: swallow_newlines AFTER LPAREN indirectable COMMA STRING RPAREN
rule 66 label: LABEL
rule 67 group_statement: GROUP LPAREN integer RPAREN
rule 68 use_statement: FANUC_USE indirectable
rule 69 use_statement: FANUC_USE LPAREN indirectable RPAREN
rule 70 use_statement: FANUC_USE LPAREN indirectable COMMA group_statement RPAREN
rule 71 collguard_statement: COLL_GUARD optional_arg
rule 72 set_skip_statement: SET_SKIP_CONDITION expression
rule 73 function_call: WORD
rule 74 function_call: namespaces WORD
rule 75 program_call: function_call LPAREN args RPAREN
rule 76 program_call: RUN function_call LPAREN args RPAREN
rule 77 program_call: CALL var LPAREN args RPAREN
rule 78 program_call: var_or_indirect EQUAL function_call LPAREN args RPAREN
rule 79 args: arg
rule 80 args: args COMMA arg
rule 81 args: 
rule 82 arg: number
rule 83 arg: signed_number
rule 84 arg: var
rule 85 arg: string
rule 86 arg: address
rule 87 program_vars: program_var
rule 88 program_vars: program_vars COMMA program_var
rule 89 program_vars: 
rule 90 program_var: WORD
rule 91 return_statement: RETURN LPAREN expression RPAREN
rule 92 return_statement: RETURN
rule 93 string: STRING
rule 94 io_method: IO_METHOD var_or_indirect
rule 95 io_method: IO_METHOD LPAREN var_or_indirect RPAREN
rule 96 io_method: IO_METHOD LPAREN var_or_indirect COMMA number COMMA STRING RPAREN
rule 97 var_or_indirect: var
rule 98 var_or_indirect: indirect_thing
rule 99 var_or_indirect: var_system
rule 100 jump: JUMP label
rule 101 conditional: IF expression block elsif_conditions else_block END
rule 102 conditional: UNLESS expression block else_block END
rule 103 conditional_block: IF expression THEN block elsif_block else_block END
rule 104 elsif_conditions: elsif_condition
rule 105 elsif_conditions: elsif_conditions elsif_condition
rule 106 elsif_conditions: 
rule 107 elsif_condition: ELSIF expression block
rule 108 elsif_block: elsif_block_condition
rule 109 elsif_block: elsif_block elsif_block_condition
rule 110 elsif_block: 
rule 111 elsif_block_condition: ELSIF expression THEN block
rule 112 forloop: FOR var IN LPAREN int_or_var TO int_or_var RPAREN block END
rule 113 forloop: FOR var IN LPAREN int_or_var DOWNTO int_or_var RPAREN block END
rule 114 while_loop: WHILE expression block END
rule 115 int_or_var: integer
rule 116 int_or_var: var
rule 117 word_list: word_tuple
rule 118 word_list: word_list word_tuple
rule 119 word_tuple: COMMA WORD
rule 120 word_tuple: WORD
rule 121 using_statement: USING word_list
rule 122 compile_statement: COMPILE IMPORT word_list
rule 123 import_statement: IMPORT word_list
rule 124 namespace: NAMESPACE WORD block END
rule 125 function: FUNCTION WORD LPAREN program_vars RPAREN block END
rule 126 function: FUNCTION WORD LPAREN program_vars RPAREN COLON WORD block END
rule 127 case_statement: CASE var swallow_newlines case_conditions case_else END
rule 128 case_conditions: case_condition
rule 129 case_conditions: case_conditions case_condition
rule 130 case_condition: WHEN case_allowed_condition block
rule 131 case_allowed_condition: number
rule 132 case_allowed_condition: var
rule 133 case_else: ELSE block
rule 134 case_else: 
rule 135 case_allowed_statement: program_call
rule 136 case_allowed_statement: jump
rule 137 inline_conditional: inlineable
rule 138 inline_conditional: inlineable IF expression
rule 139 inline_conditional: inlineable UNLESS expression
rule 140 inlineable: jump
rule 141 inlineable: assignment
rule 142 inlineable: io_method
rule 143 inlineable: program_call
rule 144 else_block: ELSE block
rule 145 else_block: 
rule 146 motion_statement: MOVE DOT swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers
rule 147 motion_statement: MOVE DOT swallow_newlines MID LPAREN var_or_indirect RPAREN DOT swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers
rule 148 motion_modifiers: motion_modifier
rule 149 motion_modifiers: motion_modifiers motion_modifier
rule 150 motion_arguements: valid_terminations
rule 151 motion_arguements: valid_terminations COMMA valid_terminations
rule 152 motion_modifier: DOT swallow_newlines AT LPAREN speed RPAREN
rule 153 motion_modifier: DOT swallow_newlines ACC LPAREN int_or_var RPAREN
rule 154 motion_modifier: DOT swallow_newlines CR LPAREN motion_arguements RPAREN
rule 155 motion_modifier: DOT swallow_newlines TERM LPAREN valid_terminations RPAREN
rule 156 motion_modifier: DOT swallow_newlines OFFSET LPAREN var_or_indirect RPAREN
rule 157 motion_modifier: DOT swallow_newlines TIME_SEGMENT LPAREN time COMMA time_seg_actions RPAREN
rule 158 motion_modifier: DOT swallow_newlines SKIP LPAREN label optional_lpos_arg RPAREN
rule 159 motion_modifier: DOT swallow_newlines valid_motion_statements
rule 160 motion_modifier: DOT swallow_newlines single_argument_motion_modifiers LPAREN int_or_var RPAREN
rule 161 valid_motion_statements: COORD
rule 162 valid_motion_statements: MROT
rule 163 valid_motion_statements: PTH
rule 164 valid_motion_statements: INC
rule 165 valid_motion_statements: WJNT
rule 166 valid_motion_statements: BREAK
rule 167 valid_motion_statements: RTCP
rule 168 valid_motion_statements: FPLIN
rule 169 single_argument_motion_modifiers: CD
rule 170 single_argument_motion_modifiers: EV
rule 171 single_argument_motion_modifiers: INDEV
rule 172 single_argument_motion_modifiers: RT_LD
rule 173 single_argument_motion_modifiers: AP_LD
rule 174 single_argument_motion_modifiers: PSPD
rule 175 single_argument_motion_modifiers: CTV
rule 176 valid_terminations: integer
rule 177 valid_terminations: var
rule 178 valid_terminations: MINUS DIGIT
rule 179 optional_lpos_arg: COMMA var
rule 180 optional_lpos_arg: 
rule 181 indirectable: number
rule 182 indirectable: var
rule 183 optional_arg: number
rule 184 optional_arg: var
rule 185 optional_arg: 
rule 186 time_seg_actions: program_call
rule 187 time_seg_actions: io_method
rule 188 time: var
rule 189 time: number
rule 190 speed: indirectable COMMA STRING
rule 191 speed: STRING
rule 192 label_definition: label
rule 193 definition: WORD ASSIGN definable
rule 194 assignment: var_or_indirect EQUAL expression
rule 195 assignment: var_or_indirect PLUS EQUAL expression
rule 196 assignment: var_or_indirect MINUS EQUAL expression
rule 197 assignment: var_or_indirect STAR EQUAL expression
rule 198 assignment: var_or_indirect SLASH EQUAL expression
rule 199 position_assignment: DEFAULTPOS var_method_modifiers ARROW array
rule 200 position_assignment: var_or_indirect ARROW array
rule 201 position_assignment: LPAREN assignable_range RPAREN var_method_modifiers ARROW array
rule 202 position_assignment: assignable_range EQUAL assignable_range
rule 203 position_assignment: assignable_range EQUAL LPAREN assignable_range RPAREN pose_range_modifiers
rule 204 assignable_range: var RANGE var
rule 205 assignable_range: var
rule 206 var: var_without_namespaces
rule 207 var: var_with_namespaces
rule 208 var_without_namespaces: WORD
rule 209 var_without_namespaces: WORD var_method_modifiers
rule 210 var_with_namespaces: namespaces var_without_namespaces
rule 211 var_method_modifiers: var_method_modifier
rule 212 var_method_modifiers: var_method_modifiers var_method_modifier
rule 213 pose_range_modifiers: pose_range_modifier
rule 214 pose_range_modifiers: pose_range_modifiers pose_range_modifier
rule 215 pose_range_modifier: DOT swallow_newlines POSEREVERSE
rule 216 coord_system: SPHERE
rule 217 coord_system: POLAR
rule 218 coord_system: ORIGIN
rule 219 var_method_modifier: DOT swallow_newlines WORD
rule 220 var_method_modifier: DOT swallow_newlines group_statement
rule 221 var_method_modifier: DOT swallow_newlines POSEATTR
rule 222 var_method_modifier: DOT swallow_newlines OFFSET
rule 223 var_method_modifier: DOT swallow_newlines coord_system
rule 224 var_method_modifier: DOT swallow_newlines FIX
rule 225 var_system: SYSTEM WORD var_system_modifers
rule 226 var_system: SYSTEM WORD LBRACK integer RBRACK var_system_modifers
rule 227 var_system_modifers: var_system_modifer
rule 228 var_system_modifers: var_system_modifers var_system_modifer
rule 229 var_system_modifers: 
rule 230 var_system_modifer: DOT var_system
rule 231 namespaces: ns
rule 232 namespaces: namespaces ns
rule 233 ns: WORD COLON COLON
rule 234 expression: unary_expression
rule 235 expression: binary_expression
rule 236 unary_expression: factor
rule 237 unary_expression: address
rule 238 unary_expression: BANG factor
rule 239 binary_expression: expression operator expression
rule 240 operator: EEQUAL
rule 241 operator: NOTEQUAL
rule 242 operator: LT
rule 243 operator: GT
rule 244 operator: GTE
rule 245 operator: LTE
rule 246 operator: PLUS
rule 247 operator: MINUS
rule 248 operator: OR
rule 249 operator: STAR
rule 250 operator: SLASH
rule 251 operator: DIV
rule 252 operator: MOD
rule 253 operator: AND
rule 254 factor: number
rule 255 factor: signed_number
rule 256 factor: operation
rule 257 factor: var
rule 258 factor: signed_var
rule 259 factor: var_system
rule 260 factor: indirect_thing
rule 261 factor: paren_expr
rule 262 paren_expr: LPAREN expression RPAREN
rule 263 indirect_thing: INDIRECT LPAREN STRING COMMA indirectable RPAREN
rule 264 indirect_thing: INDIRECT LPAREN STRING COMMA indirectable RPAREN var_method_modifiers
rule 265 signed_number: sign DIGIT
rule 266 signed_number: sign REAL
rule 267 signed_var: sign var
rule 268 sign: MINUS
rule 269 number: integer
rule 270 number: REAL
rule 271 integer: DIGIT
rule 272 definable: reg
rule 273 definable: number
rule 274 definable: signed_number
rule 275 definable: string
rule 276 definable: framereg
rule 277 definable_range: DIGIT RANGE DIGIT
rule 278 definable_range: DIGIT
rule 279 reg_types: SREG
rule 280 reg_types: UALM
rule 281 reg_types: TIMER
rule 282 reg_types: ARG
rule 283 reg_types: VREG
rule 284 reg_types: POSITION
rule 285 reg_types: NUMREG
rule 286 reg_types: POSREG
rule 287 reg_types: INPUT
rule 288 reg_types: OUTPUT
rule 289 reg: reg_types LBRACK definable_range RBRACK
rule 290 frametype: TOOLREG
rule 291 frametype: FRAMEREG
rule 292 framereg: frametype LBRACK DIGIT RBRACK
rule 293 operation: OPERATION LBRACK var_or_indirect RBRACK
rule 294 operation: OPERATION LBRACK var_or_indirect COMMA var_or_indirect RBRACK
rule 295 operation: OPERATION LBRACK signed_number RBRACK
rule 296 operation: OPERATION LBRACK number RBRACK
rule 297 address: ADDRESS var
rule 298 comment: COMMENT
rule 299 message: MESSAGE LPAREN STRING RPAREN
rule 300 warning: WARNING LPAREN STRING RPAREN
rule 301 terminator: NEWLINE
rule 302 terminator: comment optional_newline
rule 303 terminator: false
rule 304 terminator: 
rule 305 swallow_newlines: NEWLINE
rule 306 swallow_newlines: 
rule 307 position_data: POSITION_DATA sn hash sn END
rule 308 sn: swallow_newlines
rule 309 hash: LBRACE sn hash_attributes sn RBRACE
rule 310 hash: LBRACE sn RBRACE
rule 311 hash_attributes: hash_attribute
rule 312 hash_attributes: hash_attributes COMMA sn hash_attribute
rule 313 hash_attribute: STRING COLON hash_value
rule 314 hash_value: STRING
rule 315 hash_value: WORD
rule 316 hash_value: hash
rule 317 hash_value: array
rule 318 hash_value: optional_sign DIGIT
rule 319 hash_value: optional_sign REAL
rule 320 hash_value: TRUE_FALSE
rule 321 optional_sign: sign
rule 322 optional_sign: 
rule 323 array: LBRACK sn array_values sn RBRACK
rule 324 array_values: array_value
rule 325 array_values: array_values COMMA sn array_value
rule 326 array_value: hash_value

------- Symbols -------

**Nonterminals, with rules where they appear

  $start (131)
    on right: 
    on left : 
  program (132)
    on right: 
    on left : 1 2
  statements (133)
    on right: 1 4 5
    on left : 3 4
  statement (134)
    on right: 3 4
    on left : 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42
  terminator (135)
    on right: 3 4
    on left : 301 302 303 304
  block (136)
    on right: 101 102 103 107 111 112 113 114 124 125 126 130 133 144
    on left : 5
  optional_newline (137)
    on right: 302
    on left : 6 7
  comment (138)
    on right: 8 302
    on left : 298
  message (139)
    on right: 9
    on left : 299
  definition (140)
    on right: 10
    on left : 193
  namespace (141)
    on right: 11
    on left : 124
  motion_statement (142)
    on right: 12
    on left : 146 147
  position_assignment (143)
    on right: 13
    on left : 199 200 201 202 203
  label_definition (144)
    on right: 14
    on left : 192
  address (145)
    on right: 15 86 237
    on left : 297
  conditional (146)
    on right: 16
    on left : 101 102
  inline_conditional (147)
    on right: 17
    on left : 137 138 139
  conditional_block (148)
    on right: 18
    on left : 103
  forloop (149)
    on right: 19
    on left : 112 113
  while_loop (150)
    on right: 20
    on left : 114
  use_statement (151)
    on right: 21
    on left : 68 69 70
  set_skip_statement (152)
    on right: 22
    on left : 72
  wait_statement (153)
    on right: 23
    on left : 58 59 60 61
  case_statement (154)
    on right: 24
    on left : 127
  fanuc_eval (155)
    on right: 25
    on left : 57
  timer_method (156)
    on right: 26
    on left : 56
  position_data (157)
    on right: 27
    on left : 307
  raise (158)
    on right: 28
    on left : 55
  tp_header_definition (159)
    on right: 29
    on left : 46
  lpos_or_jpos (160)
    on right: 30
    on left : 43 44
  empty_stmt (161)
    on right: 31
    on left : 45
  warning (162)
    on right: 32
    on left : 300
  var_system (163)
    on right: 33 99 230 259
    on left : 225 226
  return_statement (164)
    on right: 36
    on left : 91 92
  collguard_statement (165)
    on right: 37
    on left : 71
  function (166)
    on right: 38
    on left : 125 126
  tp_application_definition (167)
    on right: 39
    on left : 54
  using_statement (168)
    on right: 40
    on left : 121
  import_statement (169)
    on right: 41
    on left : 123
  compile_statement (170)
    on right: 42
    on left : 122
  var_or_indirect (171)
    on right: 43 44 55 56 78 94 95 96 146 147 156 194 195 196 197 198 200 293 294
    on left : 97 98 99
  tp_header_value (172)
    on right: 46
    on left : 47 48
  tp_tool_methods (173)
    on right: 54
    on left : 49 50
  sn (174)
    on right: 49 50 52 54 307 309 310 312 323 325
    on left : 308
  tp_tool_attributes (175)
    on right: 49 52
    on left : 51 52
  tp_tool_attribute (176)
    on right: 51 52
    on left : 53
  hash_value (177)
    on right: 53 313 326
    on left : 314 315 316 317 318 319 320
  indirectable (178)
    on right: 58 65 68 69 70 190 263 264
    on left : 181 182
  expression (179)
    on right: 59 60 61 72 91 101 102 103 107 111 114 138 139 194 195 196 197 198 239 262
    on left : 234 235
  wait_modifier (180)
    on right: 60 61
    on left : 62 63
  timeout_modifier (181)
    on right: 62
    on left : 64
  after_modifier (182)
    on right: 63
    on left : 65
  swallow_newlines (183)
    on right: 64 65 127 146 147 152 153 154 155 156 157 158 159 160 215 219 220 221 222 223 224 308
    on left : 305 306
  label (184)
    on right: 64 100 158 192
    on left : 66
  group_statement (185)
    on right: 70 220
    on left : 67
  integer (186)
    on right: 67 115 176 226 269
    on left : 271
  optional_arg (187)
    on right: 71
    on left : 183 184 185
  function_call (188)
    on right: 75 76 78
    on left : 73 74
  namespaces (189)
    on right: 74 210 232
    on left : 231 232
  program_call (190)
    on right: 135 143 186
    on left : 75 76 77 78
  args (191)
    on right: 75 76 77 78 80
    on left : 79 80 81
  var (192)
    on right: 77 84 97 112 113 116 127 132 177 179 182 184 188 204 205 257 267 297
    on left : 206 207
  arg (193)
    on right: 79 80
    on left : 82 83 84 85 86
  number (194)
    on right: 82 96 131 181 183 189 254 273 296
    on left : 269 270
  signed_number (195)
    on right: 83 255 274 295
    on left : 265 266
  string (196)
    on right: 85 275
    on left : 93
  program_vars (197)
    on right: 88 125 126
    on left : 87 88 89
  program_var (198)
    on right: 87 88
    on left : 90
  io_method (199)
    on right: 142 187
    on left : 94 95 96
  indirect_thing (200)
    on right: 98 260
    on left : 263 264
  jump (201)
    on right: 136 140
    on left : 100
  elsif_conditions (202)
    on right: 101 105
    on left : 104 105 106
  else_block (203)
    on right: 101 102 103
    on left : 144 145
  elsif_block (204)
    on right: 103 109
    on left : 108 109 110
  elsif_condition (205)
    on right: 104 105
    on left : 107
  elsif_block_condition (206)
    on right: 108 109
    on left : 111
  int_or_var (207)
    on right: 112 113 153 160
    on left : 115 116
  word_list (208)
    on right: 118 121 122 123
    on left : 117 118
  word_tuple (209)
    on right: 117 118
    on left : 119 120
  case_conditions (210)
    on right: 127 129
    on left : 128 129
  case_else (211)
    on right: 127
    on left : 133 134
  case_condition (212)
    on right: 128 129
    on left : 130
  case_allowed_condition (213)
    on right: 130
    on left : 131 132
  case_allowed_statement (214)
    on right: 
    on left : 135 136
  inlineable (215)
    on right: 137 138 139
    on left : 140 141 142 143
  assignment (216)
    on right: 141
    on left : 194 195 196 197 198
  motion_modifiers (217)
    on right: 146 147 149
    on left : 148 149
  motion_modifier (218)
    on right: 148 149
    on left : 152 153 154 155 156 157 158 159 160
  motion_arguements (219)
    on right: 154
    on left : 150 151
  valid_terminations (220)
    on right: 150 151 155
    on left : 176 177 178
  speed (221)
    on right: 152
    on left : 190 191
  time (222)
    on right: 157
    on left : 188 189
  time_seg_actions (223)
    on right: 157
    on left : 186 187
  optional_lpos_arg (224)
    on right: 158
    on left : 179 180
  valid_motion_statements (225)
    on right: 159
    on left : 161 162 163 164 165 166 167 168
  single_argument_motion_modifiers (226)
    on right: 160
    on left : 169 170 171 172 173 174 175
  definable (227)
    on right: 193
    on left : 272 273 274 275 276
  var_method_modifiers (228)
    on right: 199 201 209 212 264
    on left : 211 212
  array (229)
    on right: 199 200 201 317
    on left : 323
  assignable_range (230)
    on right: 201 202 203
    on left : 204 205
  pose_range_modifiers (231)
    on right: 203 214
    on left : 213 214
  var_without_namespaces (232)
    on right: 206 210
    on left : 208 209
  var_with_namespaces (233)
    on right: 207
    on left : 210
  var_method_modifier (234)
    on right: 211 212
    on left : 219 220 221 222 223 224
  pose_range_modifier (235)
    on right: 213 214
    on left : 215
  coord_system (236)
    on right: 223
    on left : 216 217 218
  var_system_modifers (237)
    on right: 225 226 228
    on left : 227 228 229
  var_system_modifer (238)
    on right: 227 228
    on left : 230
  ns (239)
    on right: 231 232
    on left : 233
  unary_expression (240)
    on right: 234
    on left : 236 237 238
  binary_expression (241)
    on right: 235
    on left : 239
  factor (242)
    on right: 236 238
    on left : 254 255 256 257 258 259 260 261
  operator (243)
    on right: 239
    on left : 240 241 242 243 244 245 246 247 248 249 250 251 252 253
  operation (244)
    on right: 256
    on left : 293 294 295 296
  signed_var (245)
    on right: 258
    on left : 267
  paren_expr (246)
    on right: 261
    on left : 262
  sign (247)
    on right: 265 266 267 321
    on left : 268
  reg (248)
    on right: 272
    on left : 289
  framereg (249)
    on right: 276
    on left : 292
  definable_range (250)
    on right: 289
    on left : 277 278
  reg_types (251)
    on right: 289
    on left : 279 280 281 282 283 284 285 286 287 288
  frametype (252)
    on right: 292
    on left : 290 291
  hash (253)
    on right: 307 316
    on left : 309 310
  hash_attributes (254)
    on right: 309 312
    on left : 311 312
  hash_attribute (255)
    on right: 311 312
    on left : 313
  optional_sign (256)
    on right: 318 319
    on left : 321 322
  array_values (257)
    on right: 323 325
    on left : 324 325
  array_value (258)
    on right: 324 325
    on left : 326

**Terminals, with rules where they appear

  $end (0) 
  error (1) 
  ASSIGN (2) 193
  AT_SYM (3) 
  COMMENT (4) 298
  MESSAGE (5) 299
  WARNING (6) 300
  JUMP (7) 100
  IO_METHOD (8) 94 95 96
  INPUT (9) 287
  OUTPUT (10) 288
  NUMREG (11) 285
  POSREG (12) 286
  VREG (13) 283
  SREG (14) 279
  TIME_SEGMENT (15) 157
  ARG (16) 282
  UALM (17) 280
  TOOLREG (18) 290
  FRAMEREG (19) 291
  MOVE (20) 146 147
  DOT (21) 60 61 146 147 152 153 154 155 156 157 158 159 160 215 219 220 221 222 223 224 230
  TO (22) 112 146 147
  DOWNTO (23) 113
  MID (24) 147
  AT (25) 152
  ACC (26) 153
  TERM (27) 155
  OFFSET (28) 156 222
  SKIP (29) 158
  GROUP (30) 67
  COORD (31) 161
  MROT (32) 162
  PTH (33) 163
  WJNT (34) 165
  INC (35) 164
  BREAK (36) 166
  RTCP (37) 167
  FPLIN (38) 168
  AP_LD (39) 173
  RT_LD (40) 172
  CD (41) 169
  CR (42) 154
  INDEV (43) 171
  EV (44) 170
  PSPD (45) 174
  CTV (46) 175
  SEMICOLON (47) 
  NEWLINE (48) 5 6 45 301 305
  STRING (49) 47 57 58 65 93 96 190 191 263 264 299 300 313 314
  REAL (50) 266 270 319
  DIGIT (51) 178 265 271 277 278 292 318
  WORD (52) 53 73 74 90 119 120 124 125 126 193 208 209 219 225 226 233 315
  EQUAL (53) 46 54 78 194 195 196 197 198 202 203
  RANGE (54) 204 277
  EEQUAL (55) 240
  NOTEQUAL (56) 241
  GTE (57) 244
  LTE (58) 245
  LT (59) 242
  GT (60) 243
  BANG (61) 238
  PLUS (62) 195 246
  MINUS (63) 178 196 247 268
  STAR (64) 197 249
  SLASH (65) 198 250
  DIV (66) 251
  AND (67) 253
  OR (68) 248
  MOD (69) 252
  IF (70) 101 103 138
  THEN (71) 103 111
  ELSE (72) 133 144
  ELSIF (73) 107 111
  END (74) 101 102 103 112 113 114 124 125 126 127 307
  UNLESS (75) 102 139
  FOR (76) 112 113
  IN (77) 112 113
  WHILE (78) 114
  WAIT_FOR (79) 58
  WAIT_UNTIL (80) 59 60 61
  TIMEOUT (81) 64
  AFTER (82) 65
  FANUC_USE (83) 68 69 70
  COLL_GUARD (84) 71
  SET_SKIP_CONDITION (85) 72
  NAMESPACE (86) 124
  CASE (87) 127
  WHEN (88) 130
  INDIRECT (89) 263 264
  POSITION (90) 284
  EVAL (91) 57
  TIMER (92) 281
  TIMER_METHOD (93) 56
  RAISE (94) 55
  ABORT (95) 35
  RETURN (96) 91 92
  POSITION_DATA (97) 307
  TRUE_FALSE (98) 48 320
  CALL (99) 77
  RUN (100) 76
  PAUSE (101) 34
  TP_HEADER (102) 46
  TP_APPLICATION_TYPE (103) 54
  LPAREN (104) 43 44 58 59 60 61 64 65 67 69 70 75 76 77 78 91 95 96 112 113 125 126 146 147 152 153 154 155 156 157 158 160 201 203 262 263 264 299 300
  RPAREN (105) 43 44 58 59 60 61 64 65 67 69 70 75 76 77 78 91 95 96 112 113 125 126 146 147 152 153 154 155 156 157 158 160 201 203 262 263 264 299 300
  COLON (106) 53 126 233 313
  COMMA (107) 52 58 65 70 80 88 96 119 151 157 179 190 263 264 294 312 325
  LBRACK (108) 226 289 292 293 294 295 296 323
  RBRACK (109) 226 289 292 293 294 295 296 323
  LBRACE (110) 49 50 309 310
  RBRACE (111) 49 50 309 310
  LABEL (112) 66
  SYSTEM (113) 225 226
  ADDRESS (114) 297
  LPOS (115) 43
  JPOS (116) 44
  false (117) 303
  FUNCTION (118) 125 126
  OPERATION (119) 293 294 295 296
  USING (120) 121
  IMPORT (121) 122 123
  COMPILE (122) 122
  ARROW (123) 199 200 201
  DEFAULTPOS (124) 199
  POSEATTR (125) 221
  POSEREVERSE (126) 215
  SPHERE (127) 216
  POLAR (128) 217
  ORIGIN (129) 218
  FIX (130) 224

--------- State ---------

state 0


  COMMENT       shift, and go to state 90
  MESSAGE       shift, and go to state 91
  WARNING       shift, and go to state 92
  JUMP          shift, and go to state 63
  IO_METHOD     shift, and go to state 60
  MOVE          shift, and go to state 79
  NEWLINE       shift, and go to state 41
  WORD          shift, and go to state 53
  IF            shift, and go to state 64
  UNLESS        shift, and go to state 65
  FOR           shift, and go to state 66
  WHILE         shift, and go to state 67
  WAIT_FOR      shift, and go to state 47
  WAIT_UNTIL    shift, and go to state 48
  FANUC_USE     shift, and go to state 50
  COLL_GUARD    shift, and go to state 51
  SET_SKIP_CONDITION  shift, and go to state 52
  NAMESPACE     shift, and go to state 71
  CASE          shift, and go to state 73
  INDIRECT      shift, and go to state 88
  EVAL          shift, and go to state 46
  TIMER_METHOD  shift, and go to state 45
  RAISE         shift, and go to state 44
  ABORT         shift, and go to state 31
  RETURN        shift, and go to state 59
  POSITION_DATA  shift, and go to state 93
  CALL          shift, and go to state 57
  RUN           shift, and go to state 56
  PAUSE         shift, and go to state 30
  TP_HEADER     shift, and go to state 42
  TP_APPLICATION_TYPE  shift, and go to state 43
  LPAREN        shift, and go to state 82
  LABEL         shift, and go to state 49
  SYSTEM        shift, and go to state 86
  ADDRESS       shift, and go to state 89
  LPOS          shift, and go to state 39
  JPOS          shift, and go to state 40
  FUNCTION      shift, and go to state 72
  USING         shift, and go to state 68
  IMPORT        shift, and go to state 70
  COMPILE       shift, and go to state 69
  DEFAULTPOS    shift, and go to state 81
  $default      reduce using rule 2 (program)

  program       go to state 1
  statements    go to state 2
  statement     go to state 3
  comment       go to state 4
  message       go to state 5
  definition    go to state 6
  namespace     go to state 7
  motion_statement  go to state 8
  position_assignment  go to state 9
  label_definition  go to state 10
  address       go to state 11
  conditional   go to state 12
  inline_conditional  go to state 13
  conditional_block  go to state 14
  forloop       go to state 15
  while_loop    go to state 16
  use_statement  go to state 17
  set_skip_statement  go to state 18
  wait_statement  go to state 19
  case_statement  go to state 20
  fanuc_eval    go to state 21
  timer_method  go to state 22
  position_data  go to state 23
  raise         go to state 24
  tp_header_definition  go to state 25
  lpos_or_jpos  go to state 26
  empty_stmt    go to state 27
  warning       go to state 28
  var_system    go to state 29
  return_statement  go to state 32
  collguard_statement  go to state 33
  function      go to state 34
  tp_application_definition  go to state 35
  using_statement  go to state 36
  import_statement  go to state 37
  compile_statement  go to state 38
  namespaces    go to state 54
  function_call  go to state 55
  var_or_indirect  go to state 58
  var           go to state 61
  indirect_thing  go to state 62
  inlineable    go to state 74
  jump          go to state 75
  assignment    go to state 76
  io_method     go to state 77
  program_call  go to state 78
  label         go to state 80
  assignable_range  go to state 83
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  ns            go to state 87

state 1


  $end          shift, and go to state 94


state 2

   1) program : statements _
   4) statements : statements _ statement terminator

  COMMENT       shift, and go to state 90
  MESSAGE       shift, and go to state 91
  WARNING       shift, and go to state 92
  JUMP          shift, and go to state 63
  IO_METHOD     shift, and go to state 60
  MOVE          shift, and go to state 79
  NEWLINE       shift, and go to state 41
  WORD          shift, and go to state 53
  IF            shift, and go to state 64
  UNLESS        shift, and go to state 65
  FOR           shift, and go to state 66
  WHILE         shift, and go to state 67
  WAIT_FOR      shift, and go to state 47
  WAIT_UNTIL    shift, and go to state 48
  FANUC_USE     shift, and go to state 50
  COLL_GUARD    shift, and go to state 51
  SET_SKIP_CONDITION  shift, and go to state 52
  NAMESPACE     shift, and go to state 71
  CASE          shift, and go to state 73
  INDIRECT      shift, and go to state 88
  EVAL          shift, and go to state 46
  TIMER_METHOD  shift, and go to state 45
  RAISE         shift, and go to state 44
  ABORT         shift, and go to state 31
  RETURN        shift, and go to state 59
  POSITION_DATA  shift, and go to state 93
  CALL          shift, and go to state 57
  RUN           shift, and go to state 56
  PAUSE         shift, and go to state 30
  TP_HEADER     shift, and go to state 42
  TP_APPLICATION_TYPE  shift, and go to state 43
  LPAREN        shift, and go to state 82
  LABEL         shift, and go to state 49
  SYSTEM        shift, and go to state 86
  ADDRESS       shift, and go to state 89
  LPOS          shift, and go to state 39
  JPOS          shift, and go to state 40
  FUNCTION      shift, and go to state 72
  USING         shift, and go to state 68
  IMPORT        shift, and go to state 70
  COMPILE       shift, and go to state 69
  DEFAULTPOS    shift, and go to state 81
  $default      reduce using rule 1 (program)

  statement     go to state 95
  comment       go to state 4
  message       go to state 5
  definition    go to state 6
  namespace     go to state 7
  motion_statement  go to state 8
  position_assignment  go to state 9
  label_definition  go to state 10
  address       go to state 11
  conditional   go to state 12
  inline_conditional  go to state 13
  conditional_block  go to state 14
  forloop       go to state 15
  while_loop    go to state 16
  use_statement  go to state 17
  set_skip_statement  go to state 18
  wait_statement  go to state 19
  case_statement  go to state 20
  fanuc_eval    go to state 21
  timer_method  go to state 22
  position_data  go to state 23
  raise         go to state 24
  tp_header_definition  go to state 25
  lpos_or_jpos  go to state 26
  empty_stmt    go to state 27
  warning       go to state 28
  var_system    go to state 29
  return_statement  go to state 32
  collguard_statement  go to state 33
  function      go to state 34
  tp_application_definition  go to state 35
  using_statement  go to state 36
  import_statement  go to state 37
  compile_statement  go to state 38
  namespaces    go to state 54
  function_call  go to state 55
  var_or_indirect  go to state 58
  var           go to state 61
  indirect_thing  go to state 62
  inlineable    go to state 74
  jump          go to state 75
  assignment    go to state 76
  io_method     go to state 77
  program_call  go to state 78
  label         go to state 80
  assignable_range  go to state 83
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  ns            go to state 87

state 3

   3) statements : statement _ terminator

  COMMENT       shift, and go to state 90
  COMMENT       [reduce using rule 304 (terminator)]
  NEWLINE       shift, and go to state 97
  NEWLINE       [reduce using rule 304 (terminator)]
  false         shift, and go to state 99
  $default      reduce using rule 304 (terminator)

  terminator    go to state 96
  comment       go to state 98

state 4

   8) statement : comment _

  $default      reduce using rule 8 (statement)


state 5

   9) statement : message _

  $default      reduce using rule 9 (statement)


state 6

  10) statement : definition _

  $default      reduce using rule 10 (statement)


state 7

  11) statement : namespace _

  $default      reduce using rule 11 (statement)


state 8

  12) statement : motion_statement _

  $default      reduce using rule 12 (statement)


state 9

  13) statement : position_assignment _

  $default      reduce using rule 13 (statement)


state 10

  14) statement : label_definition _

  $default      reduce using rule 14 (statement)


state 11

  15) statement : address _

  $default      reduce using rule 15 (statement)


state 12

  16) statement : conditional _

  $default      reduce using rule 16 (statement)


state 13

  17) statement : inline_conditional _

  $default      reduce using rule 17 (statement)


state 14

  18) statement : conditional_block _

  $default      reduce using rule 18 (statement)


state 15

  19) statement : forloop _

  $default      reduce using rule 19 (statement)


state 16

  20) statement : while_loop _

  $default      reduce using rule 20 (statement)


state 17

  21) statement : use_statement _

  $default      reduce using rule 21 (statement)


state 18

  22) statement : set_skip_statement _

  $default      reduce using rule 22 (statement)


state 19

  23) statement : wait_statement _

  $default      reduce using rule 23 (statement)


state 20

  24) statement : case_statement _

  $default      reduce using rule 24 (statement)


state 21

  25) statement : fanuc_eval _

  $default      reduce using rule 25 (statement)


state 22

  26) statement : timer_method _

  $default      reduce using rule 26 (statement)


state 23

  27) statement : position_data _

  $default      reduce using rule 27 (statement)


state 24

  28) statement : raise _

  $default      reduce using rule 28 (statement)


state 25

  29) statement : tp_header_definition _

  $default      reduce using rule 29 (statement)


state 26

  30) statement : lpos_or_jpos _

  $default      reduce using rule 30 (statement)


state 27

  31) statement : empty_stmt _

  $default      reduce using rule 31 (statement)


state 28

  32) statement : warning _

  $default      reduce using rule 32 (statement)


state 29

  33) statement : var_system _
  99) var_or_indirect : var_system _

  EQUAL         reduce using rule 99 (var_or_indirect)
  PLUS          reduce using rule 99 (var_or_indirect)
  MINUS         reduce using rule 99 (var_or_indirect)
  STAR          reduce using rule 99 (var_or_indirect)
  SLASH         reduce using rule 99 (var_or_indirect)
  ARROW         reduce using rule 99 (var_or_indirect)
  $default      reduce using rule 33 (statement)


state 30

  34) statement : PAUSE _

  $default      reduce using rule 34 (statement)


state 31

  35) statement : ABORT _

  $default      reduce using rule 35 (statement)


state 32

  36) statement : return_statement _

  $default      reduce using rule 36 (statement)


state 33

  37) statement : collguard_statement _

  $default      reduce using rule 37 (statement)


state 34

  38) statement : function _

  $default      reduce using rule 38 (statement)


state 35

  39) statement : tp_application_definition _

  $default      reduce using rule 39 (statement)


state 36

  40) statement : using_statement _

  $default      reduce using rule 40 (statement)


state 37

  41) statement : import_statement _

  $default      reduce using rule 41 (statement)


state 38

  42) statement : compile_statement _

  $default      reduce using rule 42 (statement)


state 39

  43) lpos_or_jpos : LPOS _ LPAREN var_or_indirect RPAREN

  LPAREN        shift, and go to state 100


state 40

  44) lpos_or_jpos : JPOS _ LPAREN var_or_indirect RPAREN

  LPAREN        shift, and go to state 101


state 41

  45) empty_stmt : NEWLINE _

  $default      reduce using rule 45 (empty_stmt)


state 42

  46) tp_header_definition : TP_HEADER _ EQUAL tp_header_value

  EQUAL         shift, and go to state 102


state 43

  54) tp_application_definition : TP_APPLICATION_TYPE _ EQUAL sn tp_tool_methods

  EQUAL         shift, and go to state 103


state 44

  55) raise : RAISE _ var_or_indirect

  WORD          shift, and go to state 107
  INDIRECT      shift, and go to state 88
  SYSTEM        shift, and go to state 86

  var_or_indirect  go to state 104
  var           go to state 105
  indirect_thing  go to state 62
  var_system    go to state 106
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87

state 45

  56) timer_method : TIMER_METHOD _ var_or_indirect

  WORD          shift, and go to state 107
  INDIRECT      shift, and go to state 88
  SYSTEM        shift, and go to state 86

  var_or_indirect  go to state 109
  var           go to state 105
  indirect_thing  go to state 62
  var_system    go to state 106
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87

state 46

  57) fanuc_eval : EVAL _ STRING

  STRING        shift, and go to state 110


state 47

  58) wait_statement : WAIT_FOR _ LPAREN indirectable COMMA STRING RPAREN

  LPAREN        shift, and go to state 111


state 48

  59) wait_statement : WAIT_UNTIL _ LPAREN expression RPAREN
  60) wait_statement : WAIT_UNTIL _ LPAREN expression RPAREN DOT wait_modifier
  61) wait_statement : WAIT_UNTIL _ LPAREN expression RPAREN DOT wait_modifier DOT wait_modifier

  LPAREN        shift, and go to state 112


state 49

  66) label : LABEL _

  $default      reduce using rule 66 (label)


state 50

  68) use_statement : FANUC_USE _ indirectable
  69) use_statement : FANUC_USE _ LPAREN indirectable RPAREN
  70) use_statement : FANUC_USE _ LPAREN indirectable COMMA group_statement RPAREN

  REAL          shift, and go to state 118
  DIGIT         shift, and go to state 119
  WORD          shift, and go to state 107
  LPAREN        shift, and go to state 114

  indirectable  go to state 113
  number        go to state 115
  var           go to state 116
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87
  integer       go to state 117

state 51

  71) collguard_statement : COLL_GUARD _ optional_arg

  REAL          shift, and go to state 118
  DIGIT         shift, and go to state 119
  WORD          shift, and go to state 107
  WORD          [reduce using rule 185 (optional_arg)]
  $default      reduce using rule 185 (optional_arg)

  optional_arg  go to state 120
  number        go to state 121
  var           go to state 122
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87
  integer       go to state 117

state 52

  72) set_skip_statement : SET_SKIP_CONDITION _ expression

  REAL          shift, and go to state 118
  DIGIT         shift, and go to state 119
  WORD          shift, and go to state 107
  BANG          shift, and go to state 128
  MINUS         shift, and go to state 139
  INDIRECT      shift, and go to state 88
  LPAREN        shift, and go to state 137
  SYSTEM        shift, and go to state 86
  ADDRESS       shift, and go to state 89
  OPERATION     shift, and go to state 140

  expression    go to state 123
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87
  unary_expression  go to state 124
  binary_expression  go to state 125
  factor        go to state 126
  address       go to state 127
  number        go to state 129
  signed_number  go to state 130
  operation     go to state 131
  var           go to state 132
  signed_var    go to state 133
  var_system    go to state 134
  indirect_thing  go to state 135
  paren_expr    go to state 136
  sign          go to state 138
  integer       go to state 117

state 53

  73) function_call : WORD _
 193) definition : WORD _ ASSIGN definable
 208) var_without_namespaces : WORD _
 209) var_without_namespaces : WORD _ var_method_modifiers
 233) ns : WORD _ COLON COLON

  ASSIGN        shift, and go to state 141
  DOT           shift, and go to state 144
  COLON         shift, and go to state 145
  LPAREN        reduce using rule 73 (function_call)
  $default      reduce using rule 208 (var_without_namespaces)

  var_method_modifiers  go to state 142
  var_method_modifier  go to state 143

state 54

  74) function_call : namespaces _ WORD
 210) var_with_namespaces : namespaces _ var_without_namespaces
 232) namespaces : namespaces _ ns

  WORD          shift, and go to state 146

  var_without_namespaces  go to state 147
  ns            go to state 148

state 55

  75) program_call : function_call _ LPAREN args RPAREN

  LPAREN        shift, and go to state 149


state 56

  76) program_call : RUN _ function_call LPAREN args RPAREN

  WORD          shift, and go to state 150

  namespaces    go to state 151
  function_call  go to state 152
  ns            go to state 87

state 57

  77) program_call : CALL _ var LPAREN args RPAREN

  WORD          shift, and go to state 107

  var           go to state 153
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87

state 58

  78) program_call : var_or_indirect _ EQUAL function_call LPAREN args RPAREN
 194) assignment : var_or_indirect _ EQUAL expression
 195) assignment : var_or_indirect _ PLUS EQUAL expression
 196) assignment : var_or_indirect _ MINUS EQUAL expression
 197) assignment : var_or_indirect _ STAR EQUAL expression
 198) assignment : var_or_indirect _ SLASH EQUAL expression
 200) position_assignment : var_or_indirect _ ARROW array

  EQUAL         shift, and go to state 154
  PLUS          shift, and go to state 155
  MINUS         shift, and go to state 156
  STAR          shift, and go to state 157
  SLASH         shift, and go to state 158
  ARROW         shift, and go to state 159


state 59

  91) return_statement : RETURN _ LPAREN expression RPAREN
  92) return_statement : RETURN _

  LPAREN        shift, and go to state 160
  LPAREN        [reduce using rule 92 (return_statement)]
  $default      reduce using rule 92 (return_statement)


state 60

  94) io_method : IO_METHOD _ var_or_indirect
  95) io_method : IO_METHOD _ LPAREN var_or_indirect RPAREN
  96) io_method : IO_METHOD _ LPAREN var_or_indirect COMMA number COMMA STRING RPAREN

  WORD          shift, and go to state 107
  INDIRECT      shift, and go to state 88
  LPAREN        shift, and go to state 162
  SYSTEM        shift, and go to state 86

  var_or_indirect  go to state 161
  var           go to state 105
  indirect_thing  go to state 62
  var_system    go to state 106
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87

state 61

  97) var_or_indirect : var _
 204) assignable_range : var _ RANGE var
 205) assignable_range : var _

  RANGE         shift, and go to state 163
  EQUAL         [reduce using rule 205 (assignable_range)]
  $default      reduce using rule 97 (var_or_indirect)


state 62

  98) var_or_indirect : indirect_thing _

  $default      reduce using rule 98 (var_or_indirect)


state 63

 100) jump : JUMP _ label

  LABEL         shift, and go to state 49

  label         go to state 164

state 64

 101) conditional : IF _ expression block elsif_conditions else_block END
 103) conditional_block : IF _ expression THEN block elsif_block else_block END

  REAL          shift, and go to state 118
  DIGIT         shift, and go to state 119
  WORD          shift, and go to state 107
  BANG          shift, and go to state 128
  MINUS         shift, and go to state 139
  INDIRECT      shift, and go to state 88
  LPAREN        shift, and go to state 137
  SYSTEM        shift, and go to state 86
  ADDRESS       shift, and go to state 89
  OPERATION     shift, and go to state 140

  expression    go to state 165
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87
  unary_expression  go to state 124
  binary_expression  go to state 125
  factor        go to state 126
  address       go to state 127
  number        go to state 129
  signed_number  go to state 130
  operation     go to state 131
  var           go to state 132
  signed_var    go to state 133
  var_system    go to state 134
  indirect_thing  go to state 135
  paren_expr    go to state 136
  sign          go to state 138
  integer       go to state 117

state 65

 102) conditional : UNLESS _ expression block else_block END

  REAL          shift, and go to state 118
  DIGIT         shift, and go to state 119
  WORD          shift, and go to state 107
  BANG          shift, and go to state 128
  MINUS         shift, and go to state 139
  INDIRECT      shift, and go to state 88
  LPAREN        shift, and go to state 137
  SYSTEM        shift, and go to state 86
  ADDRESS       shift, and go to state 89
  OPERATION     shift, and go to state 140

  expression    go to state 166
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87
  unary_expression  go to state 124
  binary_expression  go to state 125
  factor        go to state 126
  address       go to state 127
  number        go to state 129
  signed_number  go to state 130
  operation     go to state 131
  var           go to state 132
  signed_var    go to state 133
  var_system    go to state 134
  indirect_thing  go to state 135
  paren_expr    go to state 136
  sign          go to state 138
  integer       go to state 117

state 66

 112) forloop : FOR _ var IN LPAREN int_or_var TO int_or_var RPAREN block END
 113) forloop : FOR _ var IN LPAREN int_or_var DOWNTO int_or_var RPAREN block END

  WORD          shift, and go to state 107

  var           go to state 167
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87

state 67

 114) while_loop : WHILE _ expression block END

  REAL          shift, and go to state 118
  DIGIT         shift, and go to state 119
  WORD          shift, and go to state 107
  BANG          shift, and go to state 128
  MINUS         shift, and go to state 139
  INDIRECT      shift, and go to state 88
  LPAREN        shift, and go to state 137
  SYSTEM        shift, and go to state 86
  ADDRESS       shift, and go to state 89
  OPERATION     shift, and go to state 140

  expression    go to state 168
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87
  unary_expression  go to state 124
  binary_expression  go to state 125
  factor        go to state 126
  address       go to state 127
  number        go to state 129
  signed_number  go to state 130
  operation     go to state 131
  var           go to state 132
  signed_var    go to state 133
  var_system    go to state 134
  indirect_thing  go to state 135
  paren_expr    go to state 136
  sign          go to state 138
  integer       go to state 117

state 68

 121) using_statement : USING _ word_list

  WORD          shift, and go to state 172
  COMMA         shift, and go to state 171

  word_tuple    go to state 169
  word_list     go to state 170

state 69

 122) compile_statement : COMPILE _ IMPORT word_list

  IMPORT        shift, and go to state 173


state 70

 123) import_statement : IMPORT _ word_list

  WORD          shift, and go to state 172
  COMMA         shift, and go to state 171

  word_tuple    go to state 169
  word_list     go to state 174

state 71

 124) namespace : NAMESPACE _ WORD block END

  WORD          shift, and go to state 175


state 72

 125) function : FUNCTION _ WORD LPAREN program_vars RPAREN block END
 126) function : FUNCTION _ WORD LPAREN program_vars RPAREN COLON WORD block END

  WORD          shift, and go to state 176


state 73

 127) case_statement : CASE _ var swallow_newlines case_conditions case_else END

  WORD          shift, and go to state 107

  var           go to state 177
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87

state 74

 137) inline_conditional : inlineable _
 138) inline_conditional : inlineable _ IF expression
 139) inline_conditional : inlineable _ UNLESS expression

  IF            shift, and go to state 178
  IF            [reduce using rule 137 (inline_conditional)]
  UNLESS        shift, and go to state 179
  UNLESS        [reduce using rule 137 (inline_conditional)]
  $default      reduce using rule 137 (inline_conditional)


state 75

 140) inlineable : jump _

  $default      reduce using rule 140 (inlineable)


state 76

 141) inlineable : assignment _

  $default      reduce using rule 141 (inlineable)


state 77

 142) inlineable : io_method _

  $default      reduce using rule 142 (inlineable)


state 78

 143) inlineable : program_call _

  $default      reduce using rule 143 (inlineable)


state 79

 146) motion_statement : MOVE _ DOT swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers
 147) motion_statement : MOVE _ DOT swallow_newlines MID LPAREN var_or_indirect RPAREN DOT swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers

  DOT           shift, and go to state 180


state 80

 192) label_definition : label _

  $default      reduce using rule 192 (label_definition)


state 81

 199) position_assignment : DEFAULTPOS _ var_method_modifiers ARROW array

  DOT           shift, and go to state 144

  var_method_modifiers  go to state 181
  var_method_modifier  go to state 143

state 82

 201) position_assignment : LPAREN _ assignable_range RPAREN var_method_modifiers ARROW array

  WORD          shift, and go to state 107

  assignable_range  go to state 182
  var           go to state 183
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87

state 83

 202) position_assignment : assignable_range _ EQUAL assignable_range
 203) position_assignment : assignable_range _ EQUAL LPAREN assignable_range RPAREN pose_range_modifiers

  EQUAL         shift, and go to state 184


state 84

 206) var : var_without_namespaces _

  $default      reduce using rule 206 (var)


state 85

 207) var : var_with_namespaces _

  $default      reduce using rule 207 (var)


state 86

 225) var_system : SYSTEM _ WORD var_system_modifers
 226) var_system : SYSTEM _ WORD LBRACK integer RBRACK var_system_modifers

  WORD          shift, and go to state 185


state 87

 231) namespaces : ns _

  $default      reduce using rule 231 (namespaces)


state 88

 263) indirect_thing : INDIRECT _ LPAREN STRING COMMA indirectable RPAREN
 264) indirect_thing : INDIRECT _ LPAREN STRING COMMA indirectable RPAREN var_method_modifiers

  LPAREN        shift, and go to state 186


state 89

 297) address : ADDRESS _ var

  WORD          shift, and go to state 107

  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87
  var           go to state 187

state 90

 298) comment : COMMENT _

  $default      reduce using rule 298 (comment)


state 91

 299) message : MESSAGE _ LPAREN STRING RPAREN

  LPAREN        shift, and go to state 188


state 92

 300) warning : WARNING _ LPAREN STRING RPAREN

  LPAREN        shift, and go to state 189


state 93

 307) position_data : POSITION_DATA _ sn hash sn END

  NEWLINE       shift, and go to state 190
  $default      reduce using rule 306 (swallow_newlines)

  sn            go to state 191
  swallow_newlines  go to state 192

state 94


  $end          shift, and go to state 193


state 95

   4) statements : statements statement _ terminator

  COMMENT       shift, and go to state 90
  COMMENT       [reduce using rule 304 (terminator)]
  NEWLINE       shift, and go to state 97
  NEWLINE       [reduce using rule 304 (terminator)]
  false         shift, and go to state 99
  $default      reduce using rule 304 (terminator)

  terminator    go to state 194
  comment       go to state 98

state 96

   3) statements : statement terminator _

  $default      reduce using rule 3 (statements)


state 97

 301) terminator : NEWLINE _

  $default      reduce using rule 301 (terminator)


state 98

 302) terminator : comment _ optional_newline

  NEWLINE       shift, and go to state 195
  NEWLINE       [reduce using rule 7 (optional_newline)]
  $default      reduce using rule 7 (optional_newline)

  optional_newline  go to state 196

state 99

 303) terminator : false _

  $default      reduce using rule 303 (terminator)


state 100

  43) lpos_or_jpos : LPOS LPAREN _ var_or_indirect RPAREN

  WORD          shift, and go to state 107
  INDIRECT      shift, and go to state 88
  SYSTEM        shift, and go to state 86

  var_or_indirect  go to state 197
  var           go to state 105
  indirect_thing  go to state 62
  var_system    go to state 106
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87

state 101

  44) lpos_or_jpos : JPOS LPAREN _ var_or_indirect RPAREN

  WORD          shift, and go to state 107
  INDIRECT      shift, and go to state 88
  SYSTEM        shift, and go to state 86

  var_or_indirect  go to state 198
  var           go to state 105
  indirect_thing  go to state 62
  var_system    go to state 106
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87

state 102

  46) tp_header_definition : TP_HEADER EQUAL _ tp_header_value

  STRING        shift, and go to state 200
  TRUE_FALSE    shift, and go to state 201

  tp_header_value  go to state 199

state 103

  54) tp_application_definition : TP_APPLICATION_TYPE EQUAL _ sn tp_tool_methods

  NEWLINE       shift, and go to state 190
  $default      reduce using rule 306 (swallow_newlines)

  sn            go to state 202
  swallow_newlines  go to state 192

state 104

  55) raise : RAISE var_or_indirect _

  $default      reduce using rule 55 (raise)


state 105

  97) var_or_indirect : var _

  $default      reduce using rule 97 (var_or_indirect)


state 106

  99) var_or_indirect : var_system _

  $default      reduce using rule 99 (var_or_indirect)


state 107

 208) var_without_namespaces : WORD _
 209) var_without_namespaces : WORD _ var_method_modifiers
 233) ns : WORD _ COLON COLON

  DOT           shift, and go to state 144
  COLON         shift, and go to state 145
  $default      reduce using rule 208 (var_without_namespaces)

  var_method_modifiers  go to state 142
  var_method_modifier  go to state 143

state 108

 210) var_with_namespaces : namespaces _ var_without_namespaces
 232) namespaces : namespaces _ ns

  WORD          shift, and go to state 107

  var_without_namespaces  go to state 147
  ns            go to state 148

state 109

  56) timer_method : TIMER_METHOD var_or_indirect _

  $default      reduce using rule 56 (timer_method)


state 110

  57) fanuc_eval : EVAL STRING _

  $default      reduce using rule 57 (fanuc_eval)


state 111

  58) wait_statement : WAIT_FOR LPAREN _ indirectable COMMA STRING RPAREN

  REAL          shift, and go to state 118
  DIGIT         shift, and go to state 119
  WORD          shift, and go to state 107

  indirectable  go to state 203
  number        go to state 115
  var           go to state 116
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87
  integer       go to state 117

state 112

  59) wait_statement : WAIT_UNTIL LPAREN _ expression RPAREN
  60) wait_statement : WAIT_UNTIL LPAREN _ expression RPAREN DOT wait_modifier
  61) wait_statement : WAIT_UNTIL LPAREN _ expression RPAREN DOT wait_modifier DOT wait_modifier

  REAL          shift, and go to state 118
  DIGIT         shift, and go to state 119
  WORD          shift, and go to state 107
  BANG          shift, and go to state 128
  MINUS         shift, and go to state 139
  INDIRECT      shift, and go to state 88
  LPAREN        shift, and go to state 137
  SYSTEM        shift, and go to state 86
  ADDRESS       shift, and go to state 89
  OPERATION     shift, and go to state 140

  expression    go to state 204
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87
  unary_expression  go to state 124
  binary_expression  go to state 125
  factor        go to state 126
  address       go to state 127
  number        go to state 129
  signed_number  go to state 130
  operation     go to state 131
  var           go to state 132
  signed_var    go to state 133
  var_system    go to state 134
  indirect_thing  go to state 135
  paren_expr    go to state 136
  sign          go to state 138
  integer       go to state 117

state 113

  68) use_statement : FANUC_USE indirectable _

  $default      reduce using rule 68 (use_statement)


state 114

  69) use_statement : FANUC_USE LPAREN _ indirectable RPAREN
  70) use_statement : FANUC_USE LPAREN _ indirectable COMMA group_statement RPAREN

  REAL          shift, and go to state 118
  DIGIT         shift, and go to state 119
  WORD          shift, and go to state 107

  indirectable  go to state 205
  number        go to state 115
  var           go to state 116
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87
  integer       go to state 117

state 115

 181) indirectable : number _

  $default      reduce using rule 181 (indirectable)


state 116

 182) indirectable : var _

  $default      reduce using rule 182 (indirectable)


state 117

 269) number : integer _

  $default      reduce using rule 269 (number)


state 118

 270) number : REAL _

  $default      reduce using rule 270 (number)


state 119

 271) integer : DIGIT _

  $default      reduce using rule 271 (integer)


state 120

  71) collguard_statement : COLL_GUARD optional_arg _

  $default      reduce using rule 71 (collguard_statement)


state 121

 183) optional_arg : number _

  $default      reduce using rule 183 (optional_arg)


state 122

 184) optional_arg : var _

  $default      reduce using rule 184 (optional_arg)


state 123

  72) set_skip_statement : SET_SKIP_CONDITION expression _
 239) binary_expression : expression _ operator expression

  EEQUAL        shift, and go to state 207
  NOTEQUAL      shift, and go to state 208
  GTE           shift, and go to state 211
  LTE           shift, and go to state 212
  LT            shift, and go to state 209
  GT            shift, and go to state 210
  PLUS          shift, and go to state 213
  MINUS         shift, and go to state 214
  STAR          shift, and go to state 216
  SLASH         shift, and go to state 217
  DIV           shift, and go to state 218
  AND           shift, and go to state 220
  OR            shift, and go to state 215
  MOD           shift, and go to state 219
  $default      reduce using rule 72 (set_skip_statement)

  operator      go to state 206

state 124

 234) expression : unary_expression _

  $default      reduce using rule 234 (expression)


state 125

 235) expression : binary_expression _

  $default      reduce using rule 235 (expression)


state 126

 236) unary_expression : factor _

  $default      reduce using rule 236 (unary_expression)


state 127

 237) unary_expression : address _

  $default      reduce using rule 237 (unary_expression)


state 128

 238) unary_expression : BANG _ factor

  REAL          shift, and go to state 118
  DIGIT         shift, and go to state 119
  WORD          shift, and go to state 107
  MINUS         shift, and go to state 139
  INDIRECT      shift, and go to state 88
  LPAREN        shift, and go to state 137
  SYSTEM        shift, and go to state 86
  OPERATION     shift, and go to state 140

  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87
  factor        go to state 221
  number        go to state 129
  signed_number  go to state 130
  operation     go to state 131
  var           go to state 132
  signed_var    go to state 133
  var_system    go to state 134
  indirect_thing  go to state 135
  paren_expr    go to state 136
  sign          go to state 138
  integer       go to state 117

state 129

 254) factor : number _

  $default      reduce using rule 254 (factor)


state 130

 255) factor : signed_number _

  $default      reduce using rule 255 (factor)


state 131

 256) factor : operation _

  $default      reduce using rule 256 (factor)


state 132

 257) factor : var _

  $default      reduce using rule 257 (factor)


state 133

 258) factor : signed_var _

  $default      reduce using rule 258 (factor)


state 134

 259) factor : var_system _

  $default      reduce using rule 259 (factor)


state 135

 260) factor : indirect_thing _

  $default      reduce using rule 260 (factor)


state 136

 261) factor : paren_expr _

  $default      reduce using rule 261 (factor)


state 137

 262) paren_expr : LPAREN _ expression RPAREN

  REAL          shift, and go to state 118
  DIGIT         shift, and go to state 119
  WORD          shift, and go to state 107
  BANG          shift, and go to state 128
  MINUS         shift, and go to state 139
  INDIRECT      shift, and go to state 88
  LPAREN        shift, and go to state 137
  SYSTEM        shift, and go to state 86
  ADDRESS       shift, and go to state 89
  OPERATION     shift, and go to state 140

  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87
  unary_expression  go to state 124
  binary_expression  go to state 125
  factor        go to state 126
  address       go to state 127
  expression    go to state 222
  number        go to state 129
  signed_number  go to state 130
  operation     go to state 131
  var           go to state 132
  signed_var    go to state 133
  var_system    go to state 134
  indirect_thing  go to state 135
  paren_expr    go to state 136
  sign          go to state 138
  integer       go to state 117

state 138

 265) signed_number : sign _ DIGIT
 266) signed_number : sign _ REAL
 267) signed_var : sign _ var

  REAL          shift, and go to state 224
  DIGIT         shift, and go to state 223
  WORD          shift, and go to state 107

  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87
  var           go to state 225

state 139

 268) sign : MINUS _

  $default      reduce using rule 268 (sign)


state 140

 293) operation : OPERATION _ LBRACK var_or_indirect RBRACK
 294) operation : OPERATION _ LBRACK var_or_indirect COMMA var_or_indirect RBRACK
 295) operation : OPERATION _ LBRACK signed_number RBRACK
 296) operation : OPERATION _ LBRACK number RBRACK

  LBRACK        shift, and go to state 226


state 141

 193) definition : WORD ASSIGN _ definable

  INPUT         shift, and go to state 243
  OUTPUT        shift, and go to state 244
  NUMREG        shift, and go to state 241
  POSREG        shift, and go to state 242
  VREG          shift, and go to state 239
  SREG          shift, and go to state 235
  ARG           shift, and go to state 238
  UALM          shift, and go to state 236
  TOOLREG       shift, and go to state 246
  FRAMEREG      shift, and go to state 247
  STRING        shift, and go to state 227
  REAL          shift, and go to state 118
  DIGIT         shift, and go to state 119
  MINUS         shift, and go to state 139
  POSITION      shift, and go to state 240
  TIMER         shift, and go to state 237

  definable     go to state 228
  sign          go to state 229
  integer       go to state 117
  reg           go to state 230
  number        go to state 231
  signed_number  go to state 232
  string        go to state 233
  framereg      go to state 234
  reg_types     go to state 245
  frametype     go to state 248

state 142

 209) var_without_namespaces : WORD var_method_modifiers _
 212) var_method_modifiers : var_method_modifiers _ var_method_modifier

  DOT           shift, and go to state 144
  $default      reduce using rule 209 (var_without_namespaces)

  var_method_modifier  go to state 249

state 143

 211) var_method_modifiers : var_method_modifier _

  $default      reduce using rule 211 (var_method_modifiers)


state 144

 219) var_method_modifier : DOT _ swallow_newlines WORD
 220) var_method_modifier : DOT _ swallow_newlines group_statement
 221) var_method_modifier : DOT _ swallow_newlines POSEATTR
 222) var_method_modifier : DOT _ swallow_newlines OFFSET
 223) var_method_modifier : DOT _ swallow_newlines coord_system
 224) var_method_modifier : DOT _ swallow_newlines FIX

  NEWLINE       shift, and go to state 190
  $default      reduce using rule 306 (swallow_newlines)

  swallow_newlines  go to state 250

state 145

 233) ns : WORD COLON _ COLON

  COLON         shift, and go to state 251


state 146

  74) function_call : namespaces WORD _
 208) var_without_namespaces : WORD _
 209) var_without_namespaces : WORD _ var_method_modifiers
 233) ns : WORD _ COLON COLON

  DOT           shift, and go to state 144
  COLON         shift, and go to state 145
  LPAREN        reduce using rule 74 (function_call)
  LPAREN        [reduce using rule 208 (var_without_namespaces)]
  $default      reduce using rule 208 (var_without_namespaces)

  var_method_modifiers  go to state 142
  var_method_modifier  go to state 143

state 147

 210) var_with_namespaces : namespaces var_without_namespaces _

  $default      reduce using rule 210 (var_with_namespaces)


state 148

 232) namespaces : namespaces ns _

  $default      reduce using rule 232 (namespaces)


state 149

  75) program_call : function_call LPAREN _ args RPAREN

  STRING        shift, and go to state 227
  REAL          shift, and go to state 118
  DIGIT         shift, and go to state 119
  WORD          shift, and go to state 107
  MINUS         shift, and go to state 139
  ADDRESS       shift, and go to state 89
  $default      reduce using rule 81 (args)

  args          go to state 252
  arg           go to state 253
  number        go to state 254
  signed_number  go to state 255
  var           go to state 256
  string        go to state 257
  address       go to state 258
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87
  sign          go to state 229
  integer       go to state 117

state 150

  73) function_call : WORD _
 233) ns : WORD _ COLON COLON

  COLON         shift, and go to state 145
  $default      reduce using rule 73 (function_call)


state 151

  74) function_call : namespaces _ WORD
 232) namespaces : namespaces _ ns

  WORD          shift, and go to state 259

  ns            go to state 148

state 152

  76) program_call : RUN function_call _ LPAREN args RPAREN

  LPAREN        shift, and go to state 260


state 153

  77) program_call : CALL var _ LPAREN args RPAREN

  LPAREN        shift, and go to state 261


state 154

  78) program_call : var_or_indirect EQUAL _ function_call LPAREN args RPAREN
 194) assignment : var_or_indirect EQUAL _ expression

  REAL          shift, and go to state 118
  DIGIT         shift, and go to state 119
  WORD          shift, and go to state 262
  BANG          shift, and go to state 128
  MINUS         shift, and go to state 139
  INDIRECT      shift, and go to state 88
  LPAREN        shift, and go to state 137
  SYSTEM        shift, and go to state 86
  ADDRESS       shift, and go to state 89
  OPERATION     shift, and go to state 140

  namespaces    go to state 54
  function_call  go to state 263
  expression    go to state 264
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  ns            go to state 87
  unary_expression  go to state 124
  binary_expression  go to state 125
  factor        go to state 126
  address       go to state 127
  number        go to state 129
  signed_number  go to state 130
  operation     go to state 131
  var           go to state 132
  signed_var    go to state 133
  var_system    go to state 134
  indirect_thing  go to state 135
  paren_expr    go to state 136
  sign          go to state 138
  integer       go to state 117

state 155

 195) assignment : var_or_indirect PLUS _ EQUAL expression

  EQUAL         shift, and go to state 265


state 156

 196) assignment : var_or_indirect MINUS _ EQUAL expression

  EQUAL         shift, and go to state 266


state 157

 197) assignment : var_or_indirect STAR _ EQUAL expression

  EQUAL         shift, and go to state 267


state 158

 198) assignment : var_or_indirect SLASH _ EQUAL expression

  EQUAL         shift, and go to state 268


state 159

 200) position_assignment : var_or_indirect ARROW _ array

  LBRACK        shift, and go to state 270

  array         go to state 269

state 160

  91) return_statement : RETURN LPAREN _ expression RPAREN

  REAL          shift, and go to state 118
  DIGIT         shift, and go to state 119
  WORD          shift, and go to state 107
  BANG          shift, and go to state 128
  MINUS         shift, and go to state 139
  INDIRECT      shift, and go to state 88
  LPAREN        shift, and go to state 137
  SYSTEM        shift, and go to state 86
  ADDRESS       shift, and go to state 89
  OPERATION     shift, and go to state 140

  expression    go to state 271
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87
  unary_expression  go to state 124
  binary_expression  go to state 125
  factor        go to state 126
  address       go to state 127
  number        go to state 129
  signed_number  go to state 130
  operation     go to state 131
  var           go to state 132
  signed_var    go to state 133
  var_system    go to state 134
  indirect_thing  go to state 135
  paren_expr    go to state 136
  sign          go to state 138
  integer       go to state 117

state 161

  94) io_method : IO_METHOD var_or_indirect _

  $default      reduce using rule 94 (io_method)


state 162

  95) io_method : IO_METHOD LPAREN _ var_or_indirect RPAREN
  96) io_method : IO_METHOD LPAREN _ var_or_indirect COMMA number COMMA STRING RPAREN

  WORD          shift, and go to state 107
  INDIRECT      shift, and go to state 88
  SYSTEM        shift, and go to state 86

  var_or_indirect  go to state 272
  var           go to state 105
  indirect_thing  go to state 62
  var_system    go to state 106
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87

state 163

 204) assignable_range : var RANGE _ var

  WORD          shift, and go to state 107

  var           go to state 273
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87

state 164

 100) jump : JUMP label _

  $default      reduce using rule 100 (jump)


state 165

 101) conditional : IF expression _ block elsif_conditions else_block END
 103) conditional_block : IF expression _ THEN block elsif_block else_block END
 239) binary_expression : expression _ operator expression

  NEWLINE       shift, and go to state 274
  EEQUAL        shift, and go to state 207
  NOTEQUAL      shift, and go to state 208
  GTE           shift, and go to state 211
  LTE           shift, and go to state 212
  LT            shift, and go to state 209
  GT            shift, and go to state 210
  PLUS          shift, and go to state 213
  MINUS         shift, and go to state 214
  STAR          shift, and go to state 216
  SLASH         shift, and go to state 217
  DIV           shift, and go to state 218
  AND           shift, and go to state 220
  OR            shift, and go to state 215
  MOD           shift, and go to state 219
  THEN          shift, and go to state 276

  block         go to state 275
  operator      go to state 206

state 166

 102) conditional : UNLESS expression _ block else_block END
 239) binary_expression : expression _ operator expression

  NEWLINE       shift, and go to state 274
  EEQUAL        shift, and go to state 207
  NOTEQUAL      shift, and go to state 208
  GTE           shift, and go to state 211
  LTE           shift, and go to state 212
  LT            shift, and go to state 209
  GT            shift, and go to state 210
  PLUS          shift, and go to state 213
  MINUS         shift, and go to state 214
  STAR          shift, and go to state 216
  SLASH         shift, and go to state 217
  DIV           shift, and go to state 218
  AND           shift, and go to state 220
  OR            shift, and go to state 215
  MOD           shift, and go to state 219

  block         go to state 277
  operator      go to state 206

state 167

 112) forloop : FOR var _ IN LPAREN int_or_var TO int_or_var RPAREN block END
 113) forloop : FOR var _ IN LPAREN int_or_var DOWNTO int_or_var RPAREN block END

  IN            shift, and go to state 278


state 168

 114) while_loop : WHILE expression _ block END
 239) binary_expression : expression _ operator expression

  NEWLINE       shift, and go to state 274
  EEQUAL        shift, and go to state 207
  NOTEQUAL      shift, and go to state 208
  GTE           shift, and go to state 211
  LTE           shift, and go to state 212
  LT            shift, and go to state 209
  GT            shift, and go to state 210
  PLUS          shift, and go to state 213
  MINUS         shift, and go to state 214
  STAR          shift, and go to state 216
  SLASH         shift, and go to state 217
  DIV           shift, and go to state 218
  AND           shift, and go to state 220
  OR            shift, and go to state 215
  MOD           shift, and go to state 219

  block         go to state 279
  operator      go to state 206

state 169

 117) word_list : word_tuple _

  $default      reduce using rule 117 (word_list)


state 170

 118) word_list : word_list _ word_tuple
 121) using_statement : USING word_list _

  WORD          shift, and go to state 172
  WORD          [reduce using rule 121 (using_statement)]
  COMMA         shift, and go to state 171
  $default      reduce using rule 121 (using_statement)

  word_tuple    go to state 280

state 171

 119) word_tuple : COMMA _ WORD

  WORD          shift, and go to state 281


state 172

 120) word_tuple : WORD _

  $default      reduce using rule 120 (word_tuple)


state 173

 122) compile_statement : COMPILE IMPORT _ word_list

  WORD          shift, and go to state 172
  COMMA         shift, and go to state 171

  word_tuple    go to state 169
  word_list     go to state 282

state 174

 118) word_list : word_list _ word_tuple
 123) import_statement : IMPORT word_list _

  WORD          shift, and go to state 172
  WORD          [reduce using rule 123 (import_statement)]
  COMMA         shift, and go to state 171
  $default      reduce using rule 123 (import_statement)

  word_tuple    go to state 280

state 175

 124) namespace : NAMESPACE WORD _ block END

  NEWLINE       shift, and go to state 274

  block         go to state 283

state 176

 125) function : FUNCTION WORD _ LPAREN program_vars RPAREN block END
 126) function : FUNCTION WORD _ LPAREN program_vars RPAREN COLON WORD block END

  LPAREN        shift, and go to state 284


state 177

 127) case_statement : CASE var _ swallow_newlines case_conditions case_else END

  NEWLINE       shift, and go to state 190
  $default      reduce using rule 306 (swallow_newlines)

  swallow_newlines  go to state 285

state 178

 138) inline_conditional : inlineable IF _ expression

  REAL          shift, and go to state 118
  DIGIT         shift, and go to state 119
  WORD          shift, and go to state 107
  BANG          shift, and go to state 128
  MINUS         shift, and go to state 139
  INDIRECT      shift, and go to state 88
  LPAREN        shift, and go to state 137
  SYSTEM        shift, and go to state 86
  ADDRESS       shift, and go to state 89
  OPERATION     shift, and go to state 140

  expression    go to state 286
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87
  unary_expression  go to state 124
  binary_expression  go to state 125
  factor        go to state 126
  address       go to state 127
  number        go to state 129
  signed_number  go to state 130
  operation     go to state 131
  var           go to state 132
  signed_var    go to state 133
  var_system    go to state 134
  indirect_thing  go to state 135
  paren_expr    go to state 136
  sign          go to state 138
  integer       go to state 117

state 179

 139) inline_conditional : inlineable UNLESS _ expression

  REAL          shift, and go to state 118
  DIGIT         shift, and go to state 119
  WORD          shift, and go to state 107
  BANG          shift, and go to state 128
  MINUS         shift, and go to state 139
  INDIRECT      shift, and go to state 88
  LPAREN        shift, and go to state 137
  SYSTEM        shift, and go to state 86
  ADDRESS       shift, and go to state 89
  OPERATION     shift, and go to state 140

  expression    go to state 287
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87
  unary_expression  go to state 124
  binary_expression  go to state 125
  factor        go to state 126
  address       go to state 127
  number        go to state 129
  signed_number  go to state 130
  operation     go to state 131
  var           go to state 132
  signed_var    go to state 133
  var_system    go to state 134
  indirect_thing  go to state 135
  paren_expr    go to state 136
  sign          go to state 138
  integer       go to state 117

state 180

 146) motion_statement : MOVE DOT _ swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers
 147) motion_statement : MOVE DOT _ swallow_newlines MID LPAREN var_or_indirect RPAREN DOT swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers

  NEWLINE       shift, and go to state 190
  $default      reduce using rule 306 (swallow_newlines)

  swallow_newlines  go to state 288

state 181

 199) position_assignment : DEFAULTPOS var_method_modifiers _ ARROW array
 212) var_method_modifiers : var_method_modifiers _ var_method_modifier

  DOT           shift, and go to state 144
  ARROW         shift, and go to state 289

  var_method_modifier  go to state 249

state 182

 201) position_assignment : LPAREN assignable_range _ RPAREN var_method_modifiers ARROW array

  RPAREN        shift, and go to state 290


state 183

 204) assignable_range : var _ RANGE var
 205) assignable_range : var _

  RANGE         shift, and go to state 163
  $default      reduce using rule 205 (assignable_range)


state 184

 202) position_assignment : assignable_range EQUAL _ assignable_range
 203) position_assignment : assignable_range EQUAL _ LPAREN assignable_range RPAREN pose_range_modifiers

  WORD          shift, and go to state 107
  LPAREN        shift, and go to state 292

  assignable_range  go to state 291
  var           go to state 183
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87

state 185

 225) var_system : SYSTEM WORD _ var_system_modifers
 226) var_system : SYSTEM WORD _ LBRACK integer RBRACK var_system_modifers

  DOT           shift, and go to state 296
  DOT           [reduce using rule 229 (var_system_modifers)]
  LBRACK        shift, and go to state 294
  $default      reduce using rule 229 (var_system_modifers)

  var_system_modifers  go to state 293
  var_system_modifer  go to state 295

state 186

 263) indirect_thing : INDIRECT LPAREN _ STRING COMMA indirectable RPAREN
 264) indirect_thing : INDIRECT LPAREN _ STRING COMMA indirectable RPAREN var_method_modifiers

  STRING        shift, and go to state 297


state 187

 297) address : ADDRESS var _

  $default      reduce using rule 297 (address)


state 188

 299) message : MESSAGE LPAREN _ STRING RPAREN

  STRING        shift, and go to state 298


state 189

 300) warning : WARNING LPAREN _ STRING RPAREN

  STRING        shift, and go to state 299


state 190

 305) swallow_newlines : NEWLINE _

  $default      reduce using rule 305 (swallow_newlines)


state 191

 307) position_data : POSITION_DATA sn _ hash sn END

  LBRACE        shift, and go to state 301

  hash          go to state 300

state 192

 308) sn : swallow_newlines _

  $default      reduce using rule 308 (sn)


state 193


  $default      accept


state 194

   4) statements : statements statement terminator _

  $default      reduce using rule 4 (statements)


state 195

   6) optional_newline : NEWLINE _

  $default      reduce using rule 6 (optional_newline)


state 196

 302) terminator : comment optional_newline _

  $default      reduce using rule 302 (terminator)


state 197

  43) lpos_or_jpos : LPOS LPAREN var_or_indirect _ RPAREN

  RPAREN        shift, and go to state 302


state 198

  44) lpos_or_jpos : JPOS LPAREN var_or_indirect _ RPAREN

  RPAREN        shift, and go to state 303


state 199

  46) tp_header_definition : TP_HEADER EQUAL tp_header_value _

  $default      reduce using rule 46 (tp_header_definition)


state 200

  47) tp_header_value : STRING _

  $default      reduce using rule 47 (tp_header_value)


state 201

  48) tp_header_value : TRUE_FALSE _

  $default      reduce using rule 48 (tp_header_value)


state 202

  54) tp_application_definition : TP_APPLICATION_TYPE EQUAL sn _ tp_tool_methods

  LBRACE        shift, and go to state 304

  tp_tool_methods  go to state 305

state 203

  58) wait_statement : WAIT_FOR LPAREN indirectable _ COMMA STRING RPAREN

  COMMA         shift, and go to state 306


state 204

  59) wait_statement : WAIT_UNTIL LPAREN expression _ RPAREN
  60) wait_statement : WAIT_UNTIL LPAREN expression _ RPAREN DOT wait_modifier
  61) wait_statement : WAIT_UNTIL LPAREN expression _ RPAREN DOT wait_modifier DOT wait_modifier
 239) binary_expression : expression _ operator expression

  EEQUAL        shift, and go to state 207
  NOTEQUAL      shift, and go to state 208
  GTE           shift, and go to state 211
  LTE           shift, and go to state 212
  LT            shift, and go to state 209
  GT            shift, and go to state 210
  PLUS          shift, and go to state 213
  MINUS         shift, and go to state 214
  STAR          shift, and go to state 216
  SLASH         shift, and go to state 217
  DIV           shift, and go to state 218
  AND           shift, and go to state 220
  OR            shift, and go to state 215
  MOD           shift, and go to state 219
  RPAREN        shift, and go to state 307

  operator      go to state 206

state 205

  69) use_statement : FANUC_USE LPAREN indirectable _ RPAREN
  70) use_statement : FANUC_USE LPAREN indirectable _ COMMA group_statement RPAREN

  RPAREN        shift, and go to state 308
  COMMA         shift, and go to state 309


state 206

 239) binary_expression : expression operator _ expression

  REAL          shift, and go to state 118
  DIGIT         shift, and go to state 119
  WORD          shift, and go to state 107
  BANG          shift, and go to state 128
  MINUS         shift, and go to state 139
  INDIRECT      shift, and go to state 88
  LPAREN        shift, and go to state 137
  SYSTEM        shift, and go to state 86
  ADDRESS       shift, and go to state 89
  OPERATION     shift, and go to state 140

  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87
  unary_expression  go to state 124
  binary_expression  go to state 125
  factor        go to state 126
  address       go to state 127
  expression    go to state 310
  number        go to state 129
  signed_number  go to state 130
  operation     go to state 131
  var           go to state 132
  signed_var    go to state 133
  var_system    go to state 134
  indirect_thing  go to state 135
  paren_expr    go to state 136
  sign          go to state 138
  integer       go to state 117

state 207

 240) operator : EEQUAL _

  $default      reduce using rule 240 (operator)


state 208

 241) operator : NOTEQUAL _

  $default      reduce using rule 241 (operator)


state 209

 242) operator : LT _

  $default      reduce using rule 242 (operator)


state 210

 243) operator : GT _

  $default      reduce using rule 243 (operator)


state 211

 244) operator : GTE _

  $default      reduce using rule 244 (operator)


state 212

 245) operator : LTE _

  $default      reduce using rule 245 (operator)


state 213

 246) operator : PLUS _

  $default      reduce using rule 246 (operator)


state 214

 247) operator : MINUS _

  $default      reduce using rule 247 (operator)


state 215

 248) operator : OR _

  $default      reduce using rule 248 (operator)


state 216

 249) operator : STAR _

  $default      reduce using rule 249 (operator)


state 217

 250) operator : SLASH _

  $default      reduce using rule 250 (operator)


state 218

 251) operator : DIV _

  $default      reduce using rule 251 (operator)


state 219

 252) operator : MOD _

  $default      reduce using rule 252 (operator)


state 220

 253) operator : AND _

  $default      reduce using rule 253 (operator)


state 221

 238) unary_expression : BANG factor _

  $default      reduce using rule 238 (unary_expression)


state 222

 239) binary_expression : expression _ operator expression
 262) paren_expr : LPAREN expression _ RPAREN

  EEQUAL        shift, and go to state 207
  NOTEQUAL      shift, and go to state 208
  GTE           shift, and go to state 211
  LTE           shift, and go to state 212
  LT            shift, and go to state 209
  GT            shift, and go to state 210
  PLUS          shift, and go to state 213
  MINUS         shift, and go to state 214
  STAR          shift, and go to state 216
  SLASH         shift, and go to state 217
  DIV           shift, and go to state 218
  AND           shift, and go to state 220
  OR            shift, and go to state 215
  MOD           shift, and go to state 219
  RPAREN        shift, and go to state 311

  operator      go to state 206

state 223

 265) signed_number : sign DIGIT _

  $default      reduce using rule 265 (signed_number)


state 224

 266) signed_number : sign REAL _

  $default      reduce using rule 266 (signed_number)


state 225

 267) signed_var : sign var _

  $default      reduce using rule 267 (signed_var)


state 226

 293) operation : OPERATION LBRACK _ var_or_indirect RBRACK
 294) operation : OPERATION LBRACK _ var_or_indirect COMMA var_or_indirect RBRACK
 295) operation : OPERATION LBRACK _ signed_number RBRACK
 296) operation : OPERATION LBRACK _ number RBRACK

  REAL          shift, and go to state 118
  DIGIT         shift, and go to state 119
  WORD          shift, and go to state 107
  MINUS         shift, and go to state 139
  INDIRECT      shift, and go to state 88
  SYSTEM        shift, and go to state 86

  var           go to state 105
  indirect_thing  go to state 62
  var_system    go to state 106
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87
  sign          go to state 229
  integer       go to state 117
  var_or_indirect  go to state 312
  signed_number  go to state 313
  number        go to state 314

state 227

  93) string : STRING _

  $default      reduce using rule 93 (string)


state 228

 193) definition : WORD ASSIGN definable _

  $default      reduce using rule 193 (definition)


state 229

 265) signed_number : sign _ DIGIT
 266) signed_number : sign _ REAL

  REAL          shift, and go to state 224
  DIGIT         shift, and go to state 223


state 230

 272) definable : reg _

  $default      reduce using rule 272 (definable)


state 231

 273) definable : number _

  $default      reduce using rule 273 (definable)


state 232

 274) definable : signed_number _

  $default      reduce using rule 274 (definable)


state 233

 275) definable : string _

  $default      reduce using rule 275 (definable)


state 234

 276) definable : framereg _

  $default      reduce using rule 276 (definable)


state 235

 279) reg_types : SREG _

  $default      reduce using rule 279 (reg_types)


state 236

 280) reg_types : UALM _

  $default      reduce using rule 280 (reg_types)


state 237

 281) reg_types : TIMER _

  $default      reduce using rule 281 (reg_types)


state 238

 282) reg_types : ARG _

  $default      reduce using rule 282 (reg_types)


state 239

 283) reg_types : VREG _

  $default      reduce using rule 283 (reg_types)


state 240

 284) reg_types : POSITION _

  $default      reduce using rule 284 (reg_types)


state 241

 285) reg_types : NUMREG _

  $default      reduce using rule 285 (reg_types)


state 242

 286) reg_types : POSREG _

  $default      reduce using rule 286 (reg_types)


state 243

 287) reg_types : INPUT _

  $default      reduce using rule 287 (reg_types)


state 244

 288) reg_types : OUTPUT _

  $default      reduce using rule 288 (reg_types)


state 245

 289) reg : reg_types _ LBRACK definable_range RBRACK

  LBRACK        shift, and go to state 315


state 246

 290) frametype : TOOLREG _

  $default      reduce using rule 290 (frametype)


state 247

 291) frametype : FRAMEREG _

  $default      reduce using rule 291 (frametype)


state 248

 292) framereg : frametype _ LBRACK DIGIT RBRACK

  LBRACK        shift, and go to state 316


state 249

 212) var_method_modifiers : var_method_modifiers var_method_modifier _

  $default      reduce using rule 212 (var_method_modifiers)


state 250

 219) var_method_modifier : DOT swallow_newlines _ WORD
 220) var_method_modifier : DOT swallow_newlines _ group_statement
 221) var_method_modifier : DOT swallow_newlines _ POSEATTR
 222) var_method_modifier : DOT swallow_newlines _ OFFSET
 223) var_method_modifier : DOT swallow_newlines _ coord_system
 224) var_method_modifier : DOT swallow_newlines _ FIX

  OFFSET        shift, and go to state 324
  GROUP         shift, and go to state 317
  WORD          shift, and go to state 321
  POSEATTR      shift, and go to state 323
  SPHERE        shift, and go to state 318
  POLAR         shift, and go to state 319
  ORIGIN        shift, and go to state 320
  FIX           shift, and go to state 326

  group_statement  go to state 322
  coord_system  go to state 325

state 251

 233) ns : WORD COLON COLON _

  $default      reduce using rule 233 (ns)


state 252

  75) program_call : function_call LPAREN args _ RPAREN
  80) args : args _ COMMA arg

  RPAREN        shift, and go to state 327
  COMMA         shift, and go to state 328


state 253

  79) args : arg _

  $default      reduce using rule 79 (args)


state 254

  82) arg : number _

  $default      reduce using rule 82 (arg)


state 255

  83) arg : signed_number _

  $default      reduce using rule 83 (arg)


state 256

  84) arg : var _

  $default      reduce using rule 84 (arg)


state 257

  85) arg : string _

  $default      reduce using rule 85 (arg)


state 258

  86) arg : address _

  $default      reduce using rule 86 (arg)


state 259

  74) function_call : namespaces WORD _
 233) ns : WORD _ COLON COLON

  COLON         shift, and go to state 145
  $default      reduce using rule 74 (function_call)


state 260

  76) program_call : RUN function_call LPAREN _ args RPAREN

  STRING        shift, and go to state 227
  REAL          shift, and go to state 118
  DIGIT         shift, and go to state 119
  WORD          shift, and go to state 107
  MINUS         shift, and go to state 139
  ADDRESS       shift, and go to state 89
  $default      reduce using rule 81 (args)

  args          go to state 329
  arg           go to state 253
  number        go to state 254
  signed_number  go to state 255
  var           go to state 256
  string        go to state 257
  address       go to state 258
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87
  sign          go to state 229
  integer       go to state 117

state 261

  77) program_call : CALL var LPAREN _ args RPAREN

  STRING        shift, and go to state 227
  REAL          shift, and go to state 118
  DIGIT         shift, and go to state 119
  WORD          shift, and go to state 107
  MINUS         shift, and go to state 139
  ADDRESS       shift, and go to state 89
  $default      reduce using rule 81 (args)

  args          go to state 330
  arg           go to state 253
  number        go to state 254
  signed_number  go to state 255
  var           go to state 256
  string        go to state 257
  address       go to state 258
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87
  sign          go to state 229
  integer       go to state 117

state 262

  73) function_call : WORD _
 208) var_without_namespaces : WORD _
 209) var_without_namespaces : WORD _ var_method_modifiers
 233) ns : WORD _ COLON COLON

  DOT           shift, and go to state 144
  COLON         shift, and go to state 145
  LPAREN        reduce using rule 73 (function_call)
  LPAREN        [reduce using rule 208 (var_without_namespaces)]
  $default      reduce using rule 208 (var_without_namespaces)

  var_method_modifiers  go to state 142
  var_method_modifier  go to state 143

state 263

  78) program_call : var_or_indirect EQUAL function_call _ LPAREN args RPAREN

  LPAREN        shift, and go to state 331


state 264

 194) assignment : var_or_indirect EQUAL expression _
 239) binary_expression : expression _ operator expression

  EEQUAL        shift, and go to state 207
  NOTEQUAL      shift, and go to state 208
  GTE           shift, and go to state 211
  LTE           shift, and go to state 212
  LT            shift, and go to state 209
  GT            shift, and go to state 210
  PLUS          shift, and go to state 213
  MINUS         shift, and go to state 214
  STAR          shift, and go to state 216
  SLASH         shift, and go to state 217
  DIV           shift, and go to state 218
  AND           shift, and go to state 220
  OR            shift, and go to state 215
  MOD           shift, and go to state 219
  $default      reduce using rule 194 (assignment)

  operator      go to state 206

state 265

 195) assignment : var_or_indirect PLUS EQUAL _ expression

  REAL          shift, and go to state 118
  DIGIT         shift, and go to state 119
  WORD          shift, and go to state 107
  BANG          shift, and go to state 128
  MINUS         shift, and go to state 139
  INDIRECT      shift, and go to state 88
  LPAREN        shift, and go to state 137
  SYSTEM        shift, and go to state 86
  ADDRESS       shift, and go to state 89
  OPERATION     shift, and go to state 140

  expression    go to state 332
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87
  unary_expression  go to state 124
  binary_expression  go to state 125
  factor        go to state 126
  address       go to state 127
  number        go to state 129
  signed_number  go to state 130
  operation     go to state 131
  var           go to state 132
  signed_var    go to state 133
  var_system    go to state 134
  indirect_thing  go to state 135
  paren_expr    go to state 136
  sign          go to state 138
  integer       go to state 117

state 266

 196) assignment : var_or_indirect MINUS EQUAL _ expression

  REAL          shift, and go to state 118
  DIGIT         shift, and go to state 119
  WORD          shift, and go to state 107
  BANG          shift, and go to state 128
  MINUS         shift, and go to state 139
  INDIRECT      shift, and go to state 88
  LPAREN        shift, and go to state 137
  SYSTEM        shift, and go to state 86
  ADDRESS       shift, and go to state 89
  OPERATION     shift, and go to state 140

  expression    go to state 333
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87
  unary_expression  go to state 124
  binary_expression  go to state 125
  factor        go to state 126
  address       go to state 127
  number        go to state 129
  signed_number  go to state 130
  operation     go to state 131
  var           go to state 132
  signed_var    go to state 133
  var_system    go to state 134
  indirect_thing  go to state 135
  paren_expr    go to state 136
  sign          go to state 138
  integer       go to state 117

state 267

 197) assignment : var_or_indirect STAR EQUAL _ expression

  REAL          shift, and go to state 118
  DIGIT         shift, and go to state 119
  WORD          shift, and go to state 107
  BANG          shift, and go to state 128
  MINUS         shift, and go to state 139
  INDIRECT      shift, and go to state 88
  LPAREN        shift, and go to state 137
  SYSTEM        shift, and go to state 86
  ADDRESS       shift, and go to state 89
  OPERATION     shift, and go to state 140

  expression    go to state 334
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87
  unary_expression  go to state 124
  binary_expression  go to state 125
  factor        go to state 126
  address       go to state 127
  number        go to state 129
  signed_number  go to state 130
  operation     go to state 131
  var           go to state 132
  signed_var    go to state 133
  var_system    go to state 134
  indirect_thing  go to state 135
  paren_expr    go to state 136
  sign          go to state 138
  integer       go to state 117

state 268

 198) assignment : var_or_indirect SLASH EQUAL _ expression

  REAL          shift, and go to state 118
  DIGIT         shift, and go to state 119
  WORD          shift, and go to state 107
  BANG          shift, and go to state 128
  MINUS         shift, and go to state 139
  INDIRECT      shift, and go to state 88
  LPAREN        shift, and go to state 137
  SYSTEM        shift, and go to state 86
  ADDRESS       shift, and go to state 89
  OPERATION     shift, and go to state 140

  expression    go to state 335
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87
  unary_expression  go to state 124
  binary_expression  go to state 125
  factor        go to state 126
  address       go to state 127
  number        go to state 129
  signed_number  go to state 130
  operation     go to state 131
  var           go to state 132
  signed_var    go to state 133
  var_system    go to state 134
  indirect_thing  go to state 135
  paren_expr    go to state 136
  sign          go to state 138
  integer       go to state 117

state 269

 200) position_assignment : var_or_indirect ARROW array _

  $default      reduce using rule 200 (position_assignment)


state 270

 323) array : LBRACK _ sn array_values sn RBRACK

  NEWLINE       shift, and go to state 190
  $default      reduce using rule 306 (swallow_newlines)

  swallow_newlines  go to state 192
  sn            go to state 336

state 271

  91) return_statement : RETURN LPAREN expression _ RPAREN
 239) binary_expression : expression _ operator expression

  EEQUAL        shift, and go to state 207
  NOTEQUAL      shift, and go to state 208
  GTE           shift, and go to state 211
  LTE           shift, and go to state 212
  LT            shift, and go to state 209
  GT            shift, and go to state 210
  PLUS          shift, and go to state 213
  MINUS         shift, and go to state 214
  STAR          shift, and go to state 216
  SLASH         shift, and go to state 217
  DIV           shift, and go to state 218
  AND           shift, and go to state 220
  OR            shift, and go to state 215
  MOD           shift, and go to state 219
  RPAREN        shift, and go to state 337

  operator      go to state 206

state 272

  95) io_method : IO_METHOD LPAREN var_or_indirect _ RPAREN
  96) io_method : IO_METHOD LPAREN var_or_indirect _ COMMA number COMMA STRING RPAREN

  RPAREN        shift, and go to state 338
  COMMA         shift, and go to state 339


state 273

 204) assignable_range : var RANGE var _

  $default      reduce using rule 204 (assignable_range)


state 274

   5) block : NEWLINE _ statements

  COMMENT       shift, and go to state 90
  MESSAGE       shift, and go to state 91
  WARNING       shift, and go to state 92
  JUMP          shift, and go to state 63
  IO_METHOD     shift, and go to state 60
  MOVE          shift, and go to state 79
  NEWLINE       shift, and go to state 41
  WORD          shift, and go to state 53
  IF            shift, and go to state 64
  UNLESS        shift, and go to state 65
  FOR           shift, and go to state 66
  WHILE         shift, and go to state 67
  WAIT_FOR      shift, and go to state 47
  WAIT_UNTIL    shift, and go to state 48
  FANUC_USE     shift, and go to state 50
  COLL_GUARD    shift, and go to state 51
  SET_SKIP_CONDITION  shift, and go to state 52
  NAMESPACE     shift, and go to state 71
  CASE          shift, and go to state 73
  INDIRECT      shift, and go to state 88
  EVAL          shift, and go to state 46
  TIMER_METHOD  shift, and go to state 45
  RAISE         shift, and go to state 44
  ABORT         shift, and go to state 31
  RETURN        shift, and go to state 59
  POSITION_DATA  shift, and go to state 93
  CALL          shift, and go to state 57
  RUN           shift, and go to state 56
  PAUSE         shift, and go to state 30
  TP_HEADER     shift, and go to state 42
  TP_APPLICATION_TYPE  shift, and go to state 43
  LPAREN        shift, and go to state 82
  LABEL         shift, and go to state 49
  SYSTEM        shift, and go to state 86
  ADDRESS       shift, and go to state 89
  LPOS          shift, and go to state 39
  JPOS          shift, and go to state 40
  FUNCTION      shift, and go to state 72
  USING         shift, and go to state 68
  IMPORT        shift, and go to state 70
  COMPILE       shift, and go to state 69
  DEFAULTPOS    shift, and go to state 81

  statement     go to state 3
  statements    go to state 340
  comment       go to state 4
  message       go to state 5
  definition    go to state 6
  namespace     go to state 7
  motion_statement  go to state 8
  position_assignment  go to state 9
  label_definition  go to state 10
  address       go to state 11
  conditional   go to state 12
  inline_conditional  go to state 13
  conditional_block  go to state 14
  forloop       go to state 15
  while_loop    go to state 16
  use_statement  go to state 17
  set_skip_statement  go to state 18
  wait_statement  go to state 19
  case_statement  go to state 20
  fanuc_eval    go to state 21
  timer_method  go to state 22
  position_data  go to state 23
  raise         go to state 24
  tp_header_definition  go to state 25
  lpos_or_jpos  go to state 26
  empty_stmt    go to state 27
  warning       go to state 28
  var_system    go to state 29
  return_statement  go to state 32
  collguard_statement  go to state 33
  function      go to state 34
  tp_application_definition  go to state 35
  using_statement  go to state 36
  import_statement  go to state 37
  compile_statement  go to state 38
  namespaces    go to state 54
  function_call  go to state 55
  var_or_indirect  go to state 58
  var           go to state 61
  indirect_thing  go to state 62
  inlineable    go to state 74
  jump          go to state 75
  assignment    go to state 76
  io_method     go to state 77
  program_call  go to state 78
  label         go to state 80
  assignable_range  go to state 83
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  ns            go to state 87

state 275

 101) conditional : IF expression block _ elsif_conditions else_block END

  ELSIF         shift, and go to state 343
  ELSIF         [reduce using rule 106 (elsif_conditions)]
  $default      reduce using rule 106 (elsif_conditions)

  elsif_conditions  go to state 341
  elsif_condition  go to state 342

state 276

 103) conditional_block : IF expression THEN _ block elsif_block else_block END

  NEWLINE       shift, and go to state 274

  block         go to state 344

state 277

 102) conditional : UNLESS expression block _ else_block END

  ELSE          shift, and go to state 346
  $default      reduce using rule 145 (else_block)

  else_block    go to state 345

state 278

 112) forloop : FOR var IN _ LPAREN int_or_var TO int_or_var RPAREN block END
 113) forloop : FOR var IN _ LPAREN int_or_var DOWNTO int_or_var RPAREN block END

  LPAREN        shift, and go to state 347


state 279

 114) while_loop : WHILE expression block _ END

  END           shift, and go to state 348


state 280

 118) word_list : word_list word_tuple _

  $default      reduce using rule 118 (word_list)


state 281

 119) word_tuple : COMMA WORD _

  $default      reduce using rule 119 (word_tuple)


state 282

 118) word_list : word_list _ word_tuple
 122) compile_statement : COMPILE IMPORT word_list _

  WORD          shift, and go to state 172
  WORD          [reduce using rule 122 (compile_statement)]
  COMMA         shift, and go to state 171
  $default      reduce using rule 122 (compile_statement)

  word_tuple    go to state 280

state 283

 124) namespace : NAMESPACE WORD block _ END

  END           shift, and go to state 349


state 284

 125) function : FUNCTION WORD LPAREN _ program_vars RPAREN block END
 126) function : FUNCTION WORD LPAREN _ program_vars RPAREN COLON WORD block END

  WORD          shift, and go to state 352
  $default      reduce using rule 89 (program_vars)

  program_var   go to state 350
  program_vars  go to state 351

state 285

 127) case_statement : CASE var swallow_newlines _ case_conditions case_else END

  WHEN          shift, and go to state 355

  case_conditions  go to state 353
  case_condition  go to state 354

state 286

 138) inline_conditional : inlineable IF expression _
 239) binary_expression : expression _ operator expression

  EEQUAL        shift, and go to state 207
  NOTEQUAL      shift, and go to state 208
  GTE           shift, and go to state 211
  LTE           shift, and go to state 212
  LT            shift, and go to state 209
  GT            shift, and go to state 210
  PLUS          shift, and go to state 213
  MINUS         shift, and go to state 214
  STAR          shift, and go to state 216
  SLASH         shift, and go to state 217
  DIV           shift, and go to state 218
  AND           shift, and go to state 220
  OR            shift, and go to state 215
  MOD           shift, and go to state 219
  $default      reduce using rule 138 (inline_conditional)

  operator      go to state 206

state 287

 139) inline_conditional : inlineable UNLESS expression _
 239) binary_expression : expression _ operator expression

  EEQUAL        shift, and go to state 207
  NOTEQUAL      shift, and go to state 208
  GTE           shift, and go to state 211
  LTE           shift, and go to state 212
  LT            shift, and go to state 209
  GT            shift, and go to state 210
  PLUS          shift, and go to state 213
  MINUS         shift, and go to state 214
  STAR          shift, and go to state 216
  SLASH         shift, and go to state 217
  DIV           shift, and go to state 218
  AND           shift, and go to state 220
  OR            shift, and go to state 215
  MOD           shift, and go to state 219
  $default      reduce using rule 139 (inline_conditional)

  operator      go to state 206

state 288

 146) motion_statement : MOVE DOT swallow_newlines _ TO LPAREN var_or_indirect RPAREN motion_modifiers
 147) motion_statement : MOVE DOT swallow_newlines _ MID LPAREN var_or_indirect RPAREN DOT swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers

  TO            shift, and go to state 356
  MID           shift, and go to state 357


state 289

 199) position_assignment : DEFAULTPOS var_method_modifiers ARROW _ array

  LBRACK        shift, and go to state 270

  array         go to state 358

state 290

 201) position_assignment : LPAREN assignable_range RPAREN _ var_method_modifiers ARROW array

  DOT           shift, and go to state 144

  var_method_modifiers  go to state 359
  var_method_modifier  go to state 143

state 291

 202) position_assignment : assignable_range EQUAL assignable_range _

  $default      reduce using rule 202 (position_assignment)


state 292

 203) position_assignment : assignable_range EQUAL LPAREN _ assignable_range RPAREN pose_range_modifiers

  WORD          shift, and go to state 107

  assignable_range  go to state 360
  var           go to state 183
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87

state 293

 225) var_system : SYSTEM WORD var_system_modifers _
 228) var_system_modifers : var_system_modifers _ var_system_modifer

  DOT           shift, and go to state 296
  DOT           [reduce using rule 225 (var_system)]
  $default      reduce using rule 225 (var_system)

  var_system_modifer  go to state 361

state 294

 226) var_system : SYSTEM WORD LBRACK _ integer RBRACK var_system_modifers

  DIGIT         shift, and go to state 119

  integer       go to state 362

state 295

 227) var_system_modifers : var_system_modifer _

  $default      reduce using rule 227 (var_system_modifers)


state 296

 230) var_system_modifer : DOT _ var_system

  SYSTEM        shift, and go to state 86

  var_system    go to state 363

state 297

 263) indirect_thing : INDIRECT LPAREN STRING _ COMMA indirectable RPAREN
 264) indirect_thing : INDIRECT LPAREN STRING _ COMMA indirectable RPAREN var_method_modifiers

  COMMA         shift, and go to state 364


state 298

 299) message : MESSAGE LPAREN STRING _ RPAREN

  RPAREN        shift, and go to state 365


state 299

 300) warning : WARNING LPAREN STRING _ RPAREN

  RPAREN        shift, and go to state 366


state 300

 307) position_data : POSITION_DATA sn hash _ sn END

  NEWLINE       shift, and go to state 190
  $default      reduce using rule 306 (swallow_newlines)

  sn            go to state 367
  swallow_newlines  go to state 192

state 301

 309) hash : LBRACE _ sn hash_attributes sn RBRACE
 310) hash : LBRACE _ sn RBRACE

  NEWLINE       shift, and go to state 190
  $default      reduce using rule 306 (swallow_newlines)

  swallow_newlines  go to state 192
  sn            go to state 368

state 302

  43) lpos_or_jpos : LPOS LPAREN var_or_indirect RPAREN _

  $default      reduce using rule 43 (lpos_or_jpos)


state 303

  44) lpos_or_jpos : JPOS LPAREN var_or_indirect RPAREN _

  $default      reduce using rule 44 (lpos_or_jpos)


state 304

  49) tp_tool_methods : LBRACE _ sn tp_tool_attributes sn RBRACE
  50) tp_tool_methods : LBRACE _ sn RBRACE

  NEWLINE       shift, and go to state 190
  $default      reduce using rule 306 (swallow_newlines)

  sn            go to state 369
  swallow_newlines  go to state 192

state 305

  54) tp_application_definition : TP_APPLICATION_TYPE EQUAL sn tp_tool_methods _

  $default      reduce using rule 54 (tp_application_definition)


state 306

  58) wait_statement : WAIT_FOR LPAREN indirectable COMMA _ STRING RPAREN

  STRING        shift, and go to state 370


state 307

  59) wait_statement : WAIT_UNTIL LPAREN expression RPAREN _
  60) wait_statement : WAIT_UNTIL LPAREN expression RPAREN _ DOT wait_modifier
  61) wait_statement : WAIT_UNTIL LPAREN expression RPAREN _ DOT wait_modifier DOT wait_modifier

  DOT           shift, and go to state 371
  $default      reduce using rule 59 (wait_statement)


state 308

  69) use_statement : FANUC_USE LPAREN indirectable RPAREN _

  $default      reduce using rule 69 (use_statement)


state 309

  70) use_statement : FANUC_USE LPAREN indirectable COMMA _ group_statement RPAREN

  GROUP         shift, and go to state 317

  group_statement  go to state 372

state 310

 239) binary_expression : expression _ operator expression
 239) binary_expression : expression operator expression _

  EEQUAL        shift, and go to state 207
  EEQUAL        [reduce using rule 239 (binary_expression)]
  NOTEQUAL      shift, and go to state 208
  NOTEQUAL      [reduce using rule 239 (binary_expression)]
  GTE           shift, and go to state 211
  GTE           [reduce using rule 239 (binary_expression)]
  LTE           shift, and go to state 212
  LTE           [reduce using rule 239 (binary_expression)]
  LT            shift, and go to state 209
  LT            [reduce using rule 239 (binary_expression)]
  GT            shift, and go to state 210
  GT            [reduce using rule 239 (binary_expression)]
  PLUS          shift, and go to state 213
  PLUS          [reduce using rule 239 (binary_expression)]
  MINUS         shift, and go to state 214
  MINUS         [reduce using rule 239 (binary_expression)]
  STAR          shift, and go to state 216
  STAR          [reduce using rule 239 (binary_expression)]
  SLASH         shift, and go to state 217
  SLASH         [reduce using rule 239 (binary_expression)]
  DIV           shift, and go to state 218
  DIV           [reduce using rule 239 (binary_expression)]
  AND           shift, and go to state 220
  AND           [reduce using rule 239 (binary_expression)]
  OR            shift, and go to state 215
  OR            [reduce using rule 239 (binary_expression)]
  MOD           shift, and go to state 219
  MOD           [reduce using rule 239 (binary_expression)]
  $default      reduce using rule 239 (binary_expression)

  operator      go to state 206

state 311

 262) paren_expr : LPAREN expression RPAREN _

  $default      reduce using rule 262 (paren_expr)


state 312

 293) operation : OPERATION LBRACK var_or_indirect _ RBRACK
 294) operation : OPERATION LBRACK var_or_indirect _ COMMA var_or_indirect RBRACK

  COMMA         shift, and go to state 374
  RBRACK        shift, and go to state 373


state 313

 295) operation : OPERATION LBRACK signed_number _ RBRACK

  RBRACK        shift, and go to state 375


state 314

 296) operation : OPERATION LBRACK number _ RBRACK

  RBRACK        shift, and go to state 376


state 315

 289) reg : reg_types LBRACK _ definable_range RBRACK

  DIGIT         shift, and go to state 377

  definable_range  go to state 378

state 316

 292) framereg : frametype LBRACK _ DIGIT RBRACK

  DIGIT         shift, and go to state 379


state 317

  67) group_statement : GROUP _ LPAREN integer RPAREN

  LPAREN        shift, and go to state 380


state 318

 216) coord_system : SPHERE _

  $default      reduce using rule 216 (coord_system)


state 319

 217) coord_system : POLAR _

  $default      reduce using rule 217 (coord_system)


state 320

 218) coord_system : ORIGIN _

  $default      reduce using rule 218 (coord_system)


state 321

 219) var_method_modifier : DOT swallow_newlines WORD _

  $default      reduce using rule 219 (var_method_modifier)


state 322

 220) var_method_modifier : DOT swallow_newlines group_statement _

  $default      reduce using rule 220 (var_method_modifier)


state 323

 221) var_method_modifier : DOT swallow_newlines POSEATTR _

  $default      reduce using rule 221 (var_method_modifier)


state 324

 222) var_method_modifier : DOT swallow_newlines OFFSET _

  $default      reduce using rule 222 (var_method_modifier)


state 325

 223) var_method_modifier : DOT swallow_newlines coord_system _

  $default      reduce using rule 223 (var_method_modifier)


state 326

 224) var_method_modifier : DOT swallow_newlines FIX _

  $default      reduce using rule 224 (var_method_modifier)


state 327

  75) program_call : function_call LPAREN args RPAREN _

  $default      reduce using rule 75 (program_call)


state 328

  80) args : args COMMA _ arg

  STRING        shift, and go to state 227
  REAL          shift, and go to state 118
  DIGIT         shift, and go to state 119
  WORD          shift, and go to state 107
  MINUS         shift, and go to state 139
  ADDRESS       shift, and go to state 89

  arg           go to state 381
  number        go to state 254
  signed_number  go to state 255
  var           go to state 256
  string        go to state 257
  address       go to state 258
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87
  sign          go to state 229
  integer       go to state 117

state 329

  76) program_call : RUN function_call LPAREN args _ RPAREN
  80) args : args _ COMMA arg

  RPAREN        shift, and go to state 382
  COMMA         shift, and go to state 328


state 330

  77) program_call : CALL var LPAREN args _ RPAREN
  80) args : args _ COMMA arg

  RPAREN        shift, and go to state 383
  COMMA         shift, and go to state 328


state 331

  78) program_call : var_or_indirect EQUAL function_call LPAREN _ args RPAREN

  STRING        shift, and go to state 227
  REAL          shift, and go to state 118
  DIGIT         shift, and go to state 119
  WORD          shift, and go to state 107
  MINUS         shift, and go to state 139
  ADDRESS       shift, and go to state 89
  $default      reduce using rule 81 (args)

  args          go to state 384
  arg           go to state 253
  number        go to state 254
  signed_number  go to state 255
  var           go to state 256
  string        go to state 257
  address       go to state 258
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87
  sign          go to state 229
  integer       go to state 117

state 332

 195) assignment : var_or_indirect PLUS EQUAL expression _
 239) binary_expression : expression _ operator expression

  EEQUAL        shift, and go to state 207
  NOTEQUAL      shift, and go to state 208
  GTE           shift, and go to state 211
  LTE           shift, and go to state 212
  LT            shift, and go to state 209
  GT            shift, and go to state 210
  PLUS          shift, and go to state 213
  MINUS         shift, and go to state 214
  STAR          shift, and go to state 216
  SLASH         shift, and go to state 217
  DIV           shift, and go to state 218
  AND           shift, and go to state 220
  OR            shift, and go to state 215
  MOD           shift, and go to state 219
  $default      reduce using rule 195 (assignment)

  operator      go to state 206

state 333

 196) assignment : var_or_indirect MINUS EQUAL expression _
 239) binary_expression : expression _ operator expression

  EEQUAL        shift, and go to state 207
  NOTEQUAL      shift, and go to state 208
  GTE           shift, and go to state 211
  LTE           shift, and go to state 212
  LT            shift, and go to state 209
  GT            shift, and go to state 210
  PLUS          shift, and go to state 213
  MINUS         shift, and go to state 214
  STAR          shift, and go to state 216
  SLASH         shift, and go to state 217
  DIV           shift, and go to state 218
  AND           shift, and go to state 220
  OR            shift, and go to state 215
  MOD           shift, and go to state 219
  $default      reduce using rule 196 (assignment)

  operator      go to state 206

state 334

 197) assignment : var_or_indirect STAR EQUAL expression _
 239) binary_expression : expression _ operator expression

  EEQUAL        shift, and go to state 207
  NOTEQUAL      shift, and go to state 208
  GTE           shift, and go to state 211
  LTE           shift, and go to state 212
  LT            shift, and go to state 209
  GT            shift, and go to state 210
  PLUS          shift, and go to state 213
  MINUS         shift, and go to state 214
  STAR          shift, and go to state 216
  SLASH         shift, and go to state 217
  DIV           shift, and go to state 218
  AND           shift, and go to state 220
  OR            shift, and go to state 215
  MOD           shift, and go to state 219
  $default      reduce using rule 197 (assignment)

  operator      go to state 206

state 335

 198) assignment : var_or_indirect SLASH EQUAL expression _
 239) binary_expression : expression _ operator expression

  EEQUAL        shift, and go to state 207
  NOTEQUAL      shift, and go to state 208
  GTE           shift, and go to state 211
  LTE           shift, and go to state 212
  LT            shift, and go to state 209
  GT            shift, and go to state 210
  PLUS          shift, and go to state 213
  MINUS         shift, and go to state 214
  STAR          shift, and go to state 216
  SLASH         shift, and go to state 217
  DIV           shift, and go to state 218
  AND           shift, and go to state 220
  OR            shift, and go to state 215
  MOD           shift, and go to state 219
  $default      reduce using rule 198 (assignment)

  operator      go to state 206

state 336

 323) array : LBRACK sn _ array_values sn RBRACK

  STRING        shift, and go to state 385
  WORD          shift, and go to state 386
  MINUS         shift, and go to state 139
  TRUE_FALSE    shift, and go to state 390
  LBRACK        shift, and go to state 270
  LBRACE        shift, and go to state 301
  $default      reduce using rule 322 (optional_sign)

  hash          go to state 387
  array         go to state 388
  optional_sign  go to state 389
  sign          go to state 391
  array_values  go to state 392
  array_value   go to state 393
  hash_value    go to state 394

state 337

  91) return_statement : RETURN LPAREN expression RPAREN _

  $default      reduce using rule 91 (return_statement)


state 338

  95) io_method : IO_METHOD LPAREN var_or_indirect RPAREN _

  $default      reduce using rule 95 (io_method)


state 339

  96) io_method : IO_METHOD LPAREN var_or_indirect COMMA _ number COMMA STRING RPAREN

  REAL          shift, and go to state 118
  DIGIT         shift, and go to state 119

  number        go to state 395
  integer       go to state 117

state 340

   4) statements : statements _ statement terminator
   5) block : NEWLINE statements _

  COMMENT       shift, and go to state 90
  MESSAGE       shift, and go to state 91
  WARNING       shift, and go to state 92
  JUMP          shift, and go to state 63
  IO_METHOD     shift, and go to state 60
  MOVE          shift, and go to state 79
  NEWLINE       shift, and go to state 41
  WORD          shift, and go to state 53
  IF            shift, and go to state 64
  UNLESS        shift, and go to state 65
  FOR           shift, and go to state 66
  WHILE         shift, and go to state 67
  WAIT_FOR      shift, and go to state 47
  WAIT_UNTIL    shift, and go to state 48
  FANUC_USE     shift, and go to state 50
  COLL_GUARD    shift, and go to state 51
  SET_SKIP_CONDITION  shift, and go to state 52
  NAMESPACE     shift, and go to state 71
  CASE          shift, and go to state 73
  INDIRECT      shift, and go to state 88
  EVAL          shift, and go to state 46
  TIMER_METHOD  shift, and go to state 45
  RAISE         shift, and go to state 44
  ABORT         shift, and go to state 31
  RETURN        shift, and go to state 59
  POSITION_DATA  shift, and go to state 93
  CALL          shift, and go to state 57
  RUN           shift, and go to state 56
  PAUSE         shift, and go to state 30
  TP_HEADER     shift, and go to state 42
  TP_APPLICATION_TYPE  shift, and go to state 43
  LPAREN        shift, and go to state 82
  LABEL         shift, and go to state 49
  SYSTEM        shift, and go to state 86
  ADDRESS       shift, and go to state 89
  LPOS          shift, and go to state 39
  JPOS          shift, and go to state 40
  FUNCTION      shift, and go to state 72
  USING         shift, and go to state 68
  IMPORT        shift, and go to state 70
  COMPILE       shift, and go to state 69
  DEFAULTPOS    shift, and go to state 81
  $default      reduce using rule 5 (block)

  statement     go to state 95
  comment       go to state 4
  message       go to state 5
  definition    go to state 6
  namespace     go to state 7
  motion_statement  go to state 8
  position_assignment  go to state 9
  label_definition  go to state 10
  address       go to state 11
  conditional   go to state 12
  inline_conditional  go to state 13
  conditional_block  go to state 14
  forloop       go to state 15
  while_loop    go to state 16
  use_statement  go to state 17
  set_skip_statement  go to state 18
  wait_statement  go to state 19
  case_statement  go to state 20
  fanuc_eval    go to state 21
  timer_method  go to state 22
  position_data  go to state 23
  raise         go to state 24
  tp_header_definition  go to state 25
  lpos_or_jpos  go to state 26
  empty_stmt    go to state 27
  warning       go to state 28
  var_system    go to state 29
  return_statement  go to state 32
  collguard_statement  go to state 33
  function      go to state 34
  tp_application_definition  go to state 35
  using_statement  go to state 36
  import_statement  go to state 37
  compile_statement  go to state 38
  namespaces    go to state 54
  function_call  go to state 55
  var_or_indirect  go to state 58
  var           go to state 61
  indirect_thing  go to state 62
  inlineable    go to state 74
  jump          go to state 75
  assignment    go to state 76
  io_method     go to state 77
  program_call  go to state 78
  label         go to state 80
  assignable_range  go to state 83
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  ns            go to state 87

state 341

 101) conditional : IF expression block elsif_conditions _ else_block END
 105) elsif_conditions : elsif_conditions _ elsif_condition

  ELSE          shift, and go to state 346
  ELSIF         shift, and go to state 343
  $default      reduce using rule 145 (else_block)

  else_block    go to state 396
  elsif_condition  go to state 397

state 342

 104) elsif_conditions : elsif_condition _

  $default      reduce using rule 104 (elsif_conditions)


state 343

 107) elsif_condition : ELSIF _ expression block

  REAL          shift, and go to state 118
  DIGIT         shift, and go to state 119
  WORD          shift, and go to state 107
  BANG          shift, and go to state 128
  MINUS         shift, and go to state 139
  INDIRECT      shift, and go to state 88
  LPAREN        shift, and go to state 137
  SYSTEM        shift, and go to state 86
  ADDRESS       shift, and go to state 89
  OPERATION     shift, and go to state 140

  expression    go to state 398
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87
  unary_expression  go to state 124
  binary_expression  go to state 125
  factor        go to state 126
  address       go to state 127
  number        go to state 129
  signed_number  go to state 130
  operation     go to state 131
  var           go to state 132
  signed_var    go to state 133
  var_system    go to state 134
  indirect_thing  go to state 135
  paren_expr    go to state 136
  sign          go to state 138
  integer       go to state 117

state 344

 103) conditional_block : IF expression THEN block _ elsif_block else_block END

  ELSIF         shift, and go to state 401
  ELSIF         [reduce using rule 110 (elsif_block)]
  $default      reduce using rule 110 (elsif_block)

  elsif_block   go to state 399
  elsif_block_condition  go to state 400

state 345

 102) conditional : UNLESS expression block else_block _ END

  END           shift, and go to state 402


state 346

 144) else_block : ELSE _ block

  NEWLINE       shift, and go to state 274

  block         go to state 403

state 347

 112) forloop : FOR var IN LPAREN _ int_or_var TO int_or_var RPAREN block END
 113) forloop : FOR var IN LPAREN _ int_or_var DOWNTO int_or_var RPAREN block END

  DIGIT         shift, and go to state 119
  WORD          shift, and go to state 107

  int_or_var    go to state 404
  integer       go to state 405
  var           go to state 406
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87

state 348

 114) while_loop : WHILE expression block END _

  $default      reduce using rule 114 (while_loop)


state 349

 124) namespace : NAMESPACE WORD block END _

  $default      reduce using rule 124 (namespace)


state 350

  87) program_vars : program_var _

  $default      reduce using rule 87 (program_vars)


state 351

  88) program_vars : program_vars _ COMMA program_var
 125) function : FUNCTION WORD LPAREN program_vars _ RPAREN block END
 126) function : FUNCTION WORD LPAREN program_vars _ RPAREN COLON WORD block END

  RPAREN        shift, and go to state 408
  COMMA         shift, and go to state 407


state 352

  90) program_var : WORD _

  $default      reduce using rule 90 (program_var)


state 353

 127) case_statement : CASE var swallow_newlines case_conditions _ case_else END
 129) case_conditions : case_conditions _ case_condition

  ELSE          shift, and go to state 411
  WHEN          shift, and go to state 355
  $default      reduce using rule 134 (case_else)

  case_else     go to state 409
  case_condition  go to state 410

state 354

 128) case_conditions : case_condition _

  $default      reduce using rule 128 (case_conditions)


state 355

 130) case_condition : WHEN _ case_allowed_condition block

  REAL          shift, and go to state 118
  DIGIT         shift, and go to state 119
  WORD          shift, and go to state 107

  case_allowed_condition  go to state 412
  number        go to state 413
  var           go to state 414
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87
  integer       go to state 117

state 356

 146) motion_statement : MOVE DOT swallow_newlines TO _ LPAREN var_or_indirect RPAREN motion_modifiers

  LPAREN        shift, and go to state 415


state 357

 147) motion_statement : MOVE DOT swallow_newlines MID _ LPAREN var_or_indirect RPAREN DOT swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers

  LPAREN        shift, and go to state 416


state 358

 199) position_assignment : DEFAULTPOS var_method_modifiers ARROW array _

  $default      reduce using rule 199 (position_assignment)


state 359

 201) position_assignment : LPAREN assignable_range RPAREN var_method_modifiers _ ARROW array
 212) var_method_modifiers : var_method_modifiers _ var_method_modifier

  DOT           shift, and go to state 144
  ARROW         shift, and go to state 417

  var_method_modifier  go to state 249

state 360

 203) position_assignment : assignable_range EQUAL LPAREN assignable_range _ RPAREN pose_range_modifiers

  RPAREN        shift, and go to state 418


state 361

 228) var_system_modifers : var_system_modifers var_system_modifer _

  $default      reduce using rule 228 (var_system_modifers)


state 362

 226) var_system : SYSTEM WORD LBRACK integer _ RBRACK var_system_modifers

  RBRACK        shift, and go to state 419


state 363

 230) var_system_modifer : DOT var_system _

  $default      reduce using rule 230 (var_system_modifer)


state 364

 263) indirect_thing : INDIRECT LPAREN STRING COMMA _ indirectable RPAREN
 264) indirect_thing : INDIRECT LPAREN STRING COMMA _ indirectable RPAREN var_method_modifiers

  REAL          shift, and go to state 118
  DIGIT         shift, and go to state 119
  WORD          shift, and go to state 107

  number        go to state 115
  var           go to state 116
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87
  indirectable  go to state 420
  integer       go to state 117

state 365

 299) message : MESSAGE LPAREN STRING RPAREN _

  $default      reduce using rule 299 (message)


state 366

 300) warning : WARNING LPAREN STRING RPAREN _

  $default      reduce using rule 300 (warning)


state 367

 307) position_data : POSITION_DATA sn hash sn _ END

  END           shift, and go to state 421


state 368

 309) hash : LBRACE sn _ hash_attributes sn RBRACE
 310) hash : LBRACE sn _ RBRACE

  STRING        shift, and go to state 425
  RBRACE        shift, and go to state 423

  hash_attributes  go to state 422
  hash_attribute  go to state 424

state 369

  49) tp_tool_methods : LBRACE sn _ tp_tool_attributes sn RBRACE
  50) tp_tool_methods : LBRACE sn _ RBRACE

  WORD          shift, and go to state 429
  RBRACE        shift, and go to state 427

  tp_tool_attributes  go to state 426
  tp_tool_attribute  go to state 428

state 370

  58) wait_statement : WAIT_FOR LPAREN indirectable COMMA STRING _ RPAREN

  RPAREN        shift, and go to state 430


state 371

  60) wait_statement : WAIT_UNTIL LPAREN expression RPAREN DOT _ wait_modifier
  61) wait_statement : WAIT_UNTIL LPAREN expression RPAREN DOT _ wait_modifier DOT wait_modifier

  NEWLINE       shift, and go to state 190
  $default      reduce using rule 306 (swallow_newlines)

  wait_modifier  go to state 431
  timeout_modifier  go to state 432
  after_modifier  go to state 433
  swallow_newlines  go to state 434

state 372

  70) use_statement : FANUC_USE LPAREN indirectable COMMA group_statement _ RPAREN

  RPAREN        shift, and go to state 435


state 373

 293) operation : OPERATION LBRACK var_or_indirect RBRACK _

  $default      reduce using rule 293 (operation)


state 374

 294) operation : OPERATION LBRACK var_or_indirect COMMA _ var_or_indirect RBRACK

  WORD          shift, and go to state 107
  INDIRECT      shift, and go to state 88
  SYSTEM        shift, and go to state 86

  var           go to state 105
  indirect_thing  go to state 62
  var_system    go to state 106
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87
  var_or_indirect  go to state 436

state 375

 295) operation : OPERATION LBRACK signed_number RBRACK _

  $default      reduce using rule 295 (operation)


state 376

 296) operation : OPERATION LBRACK number RBRACK _

  $default      reduce using rule 296 (operation)


state 377

 277) definable_range : DIGIT _ RANGE DIGIT
 278) definable_range : DIGIT _

  RANGE         shift, and go to state 437
  $default      reduce using rule 278 (definable_range)


state 378

 289) reg : reg_types LBRACK definable_range _ RBRACK

  RBRACK        shift, and go to state 438


state 379

 292) framereg : frametype LBRACK DIGIT _ RBRACK

  RBRACK        shift, and go to state 439


state 380

  67) group_statement : GROUP LPAREN _ integer RPAREN

  DIGIT         shift, and go to state 119

  integer       go to state 440

state 381

  80) args : args COMMA arg _

  $default      reduce using rule 80 (args)


state 382

  76) program_call : RUN function_call LPAREN args RPAREN _

  $default      reduce using rule 76 (program_call)


state 383

  77) program_call : CALL var LPAREN args RPAREN _

  $default      reduce using rule 77 (program_call)


state 384

  78) program_call : var_or_indirect EQUAL function_call LPAREN args _ RPAREN
  80) args : args _ COMMA arg

  RPAREN        shift, and go to state 441
  COMMA         shift, and go to state 328


state 385

 314) hash_value : STRING _

  $default      reduce using rule 314 (hash_value)


state 386

 315) hash_value : WORD _

  $default      reduce using rule 315 (hash_value)


state 387

 316) hash_value : hash _

  $default      reduce using rule 316 (hash_value)


state 388

 317) hash_value : array _

  $default      reduce using rule 317 (hash_value)


state 389

 318) hash_value : optional_sign _ DIGIT
 319) hash_value : optional_sign _ REAL

  REAL          shift, and go to state 443
  DIGIT         shift, and go to state 442


state 390

 320) hash_value : TRUE_FALSE _

  $default      reduce using rule 320 (hash_value)


state 391

 321) optional_sign : sign _

  $default      reduce using rule 321 (optional_sign)


state 392

 323) array : LBRACK sn array_values _ sn RBRACK
 325) array_values : array_values _ COMMA sn array_value

  NEWLINE       shift, and go to state 190
  COMMA         shift, and go to state 445
  $default      reduce using rule 306 (swallow_newlines)

  swallow_newlines  go to state 192
  sn            go to state 444

state 393

 324) array_values : array_value _

  $default      reduce using rule 324 (array_values)


state 394

 326) array_value : hash_value _

  $default      reduce using rule 326 (array_value)


state 395

  96) io_method : IO_METHOD LPAREN var_or_indirect COMMA number _ COMMA STRING RPAREN

  COMMA         shift, and go to state 446


state 396

 101) conditional : IF expression block elsif_conditions else_block _ END

  END           shift, and go to state 447


state 397

 105) elsif_conditions : elsif_conditions elsif_condition _

  $default      reduce using rule 105 (elsif_conditions)


state 398

 107) elsif_condition : ELSIF expression _ block
 239) binary_expression : expression _ operator expression

  NEWLINE       shift, and go to state 274
  EEQUAL        shift, and go to state 207
  NOTEQUAL      shift, and go to state 208
  GTE           shift, and go to state 211
  LTE           shift, and go to state 212
  LT            shift, and go to state 209
  GT            shift, and go to state 210
  PLUS          shift, and go to state 213
  MINUS         shift, and go to state 214
  STAR          shift, and go to state 216
  SLASH         shift, and go to state 217
  DIV           shift, and go to state 218
  AND           shift, and go to state 220
  OR            shift, and go to state 215
  MOD           shift, and go to state 219

  block         go to state 448
  operator      go to state 206

state 399

 103) conditional_block : IF expression THEN block elsif_block _ else_block END
 109) elsif_block : elsif_block _ elsif_block_condition

  ELSE          shift, and go to state 346
  ELSIF         shift, and go to state 401
  $default      reduce using rule 145 (else_block)

  else_block    go to state 449
  elsif_block_condition  go to state 450

state 400

 108) elsif_block : elsif_block_condition _

  $default      reduce using rule 108 (elsif_block)


state 401

 111) elsif_block_condition : ELSIF _ expression THEN block

  REAL          shift, and go to state 118
  DIGIT         shift, and go to state 119
  WORD          shift, and go to state 107
  BANG          shift, and go to state 128
  MINUS         shift, and go to state 139
  INDIRECT      shift, and go to state 88
  LPAREN        shift, and go to state 137
  SYSTEM        shift, and go to state 86
  ADDRESS       shift, and go to state 89
  OPERATION     shift, and go to state 140

  expression    go to state 451
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87
  unary_expression  go to state 124
  binary_expression  go to state 125
  factor        go to state 126
  address       go to state 127
  number        go to state 129
  signed_number  go to state 130
  operation     go to state 131
  var           go to state 132
  signed_var    go to state 133
  var_system    go to state 134
  indirect_thing  go to state 135
  paren_expr    go to state 136
  sign          go to state 138
  integer       go to state 117

state 402

 102) conditional : UNLESS expression block else_block END _

  $default      reduce using rule 102 (conditional)


state 403

 144) else_block : ELSE block _

  $default      reduce using rule 144 (else_block)


state 404

 112) forloop : FOR var IN LPAREN int_or_var _ TO int_or_var RPAREN block END
 113) forloop : FOR var IN LPAREN int_or_var _ DOWNTO int_or_var RPAREN block END

  TO            shift, and go to state 452
  DOWNTO        shift, and go to state 453


state 405

 115) int_or_var : integer _

  $default      reduce using rule 115 (int_or_var)


state 406

 116) int_or_var : var _

  $default      reduce using rule 116 (int_or_var)


state 407

  88) program_vars : program_vars COMMA _ program_var

  WORD          shift, and go to state 352

  program_var   go to state 454

state 408

 125) function : FUNCTION WORD LPAREN program_vars RPAREN _ block END
 126) function : FUNCTION WORD LPAREN program_vars RPAREN _ COLON WORD block END

  NEWLINE       shift, and go to state 274
  COLON         shift, and go to state 456

  block         go to state 455

state 409

 127) case_statement : CASE var swallow_newlines case_conditions case_else _ END

  END           shift, and go to state 457


state 410

 129) case_conditions : case_conditions case_condition _

  $default      reduce using rule 129 (case_conditions)


state 411

 133) case_else : ELSE _ block

  NEWLINE       shift, and go to state 274

  block         go to state 458

state 412

 130) case_condition : WHEN case_allowed_condition _ block

  NEWLINE       shift, and go to state 274

  block         go to state 459

state 413

 131) case_allowed_condition : number _

  $default      reduce using rule 131 (case_allowed_condition)


state 414

 132) case_allowed_condition : var _

  $default      reduce using rule 132 (case_allowed_condition)


state 415

 146) motion_statement : MOVE DOT swallow_newlines TO LPAREN _ var_or_indirect RPAREN motion_modifiers

  WORD          shift, and go to state 107
  INDIRECT      shift, and go to state 88
  SYSTEM        shift, and go to state 86

  var           go to state 105
  indirect_thing  go to state 62
  var_system    go to state 106
  var_or_indirect  go to state 460
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87

state 416

 147) motion_statement : MOVE DOT swallow_newlines MID LPAREN _ var_or_indirect RPAREN DOT swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers

  WORD          shift, and go to state 107
  INDIRECT      shift, and go to state 88
  SYSTEM        shift, and go to state 86

  var           go to state 105
  indirect_thing  go to state 62
  var_system    go to state 106
  var_or_indirect  go to state 461
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87

state 417

 201) position_assignment : LPAREN assignable_range RPAREN var_method_modifiers ARROW _ array

  LBRACK        shift, and go to state 270

  array         go to state 462

state 418

 203) position_assignment : assignable_range EQUAL LPAREN assignable_range RPAREN _ pose_range_modifiers

  DOT           shift, and go to state 465

  pose_range_modifiers  go to state 463
  pose_range_modifier  go to state 464

state 419

 226) var_system : SYSTEM WORD LBRACK integer RBRACK _ var_system_modifers

  DOT           shift, and go to state 296
  DOT           [reduce using rule 229 (var_system_modifers)]
  $default      reduce using rule 229 (var_system_modifers)

  var_system_modifers  go to state 466
  var_system_modifer  go to state 295

state 420

 263) indirect_thing : INDIRECT LPAREN STRING COMMA indirectable _ RPAREN
 264) indirect_thing : INDIRECT LPAREN STRING COMMA indirectable _ RPAREN var_method_modifiers

  RPAREN        shift, and go to state 467


state 421

 307) position_data : POSITION_DATA sn hash sn END _

  $default      reduce using rule 307 (position_data)


state 422

 309) hash : LBRACE sn hash_attributes _ sn RBRACE
 312) hash_attributes : hash_attributes _ COMMA sn hash_attribute

  NEWLINE       shift, and go to state 190
  COMMA         shift, and go to state 469
  $default      reduce using rule 306 (swallow_newlines)

  swallow_newlines  go to state 192
  sn            go to state 468

state 423

 310) hash : LBRACE sn RBRACE _

  $default      reduce using rule 310 (hash)


state 424

 311) hash_attributes : hash_attribute _

  $default      reduce using rule 311 (hash_attributes)


state 425

 313) hash_attribute : STRING _ COLON hash_value

  COLON         shift, and go to state 470


state 426

  49) tp_tool_methods : LBRACE sn tp_tool_attributes _ sn RBRACE
  52) tp_tool_attributes : tp_tool_attributes _ COMMA sn tp_tool_attribute

  NEWLINE       shift, and go to state 190
  COMMA         shift, and go to state 472
  $default      reduce using rule 306 (swallow_newlines)

  sn            go to state 471
  swallow_newlines  go to state 192

state 427

  50) tp_tool_methods : LBRACE sn RBRACE _

  $default      reduce using rule 50 (tp_tool_methods)


state 428

  51) tp_tool_attributes : tp_tool_attribute _

  $default      reduce using rule 51 (tp_tool_attributes)


state 429

  53) tp_tool_attribute : WORD _ COLON hash_value

  COLON         shift, and go to state 473


state 430

  58) wait_statement : WAIT_FOR LPAREN indirectable COMMA STRING RPAREN _

  $default      reduce using rule 58 (wait_statement)


state 431

  60) wait_statement : WAIT_UNTIL LPAREN expression RPAREN DOT wait_modifier _
  61) wait_statement : WAIT_UNTIL LPAREN expression RPAREN DOT wait_modifier _ DOT wait_modifier

  DOT           shift, and go to state 474
  $default      reduce using rule 60 (wait_statement)


state 432

  62) wait_modifier : timeout_modifier _

  $default      reduce using rule 62 (wait_modifier)


state 433

  63) wait_modifier : after_modifier _

  $default      reduce using rule 63 (wait_modifier)


state 434

  64) timeout_modifier : swallow_newlines _ TIMEOUT LPAREN label RPAREN
  65) after_modifier : swallow_newlines _ AFTER LPAREN indirectable COMMA STRING RPAREN

  TIMEOUT       shift, and go to state 475
  AFTER         shift, and go to state 476


state 435

  70) use_statement : FANUC_USE LPAREN indirectable COMMA group_statement RPAREN _

  $default      reduce using rule 70 (use_statement)


state 436

 294) operation : OPERATION LBRACK var_or_indirect COMMA var_or_indirect _ RBRACK

  RBRACK        shift, and go to state 477


state 437

 277) definable_range : DIGIT RANGE _ DIGIT

  DIGIT         shift, and go to state 478


state 438

 289) reg : reg_types LBRACK definable_range RBRACK _

  $default      reduce using rule 289 (reg)


state 439

 292) framereg : frametype LBRACK DIGIT RBRACK _

  $default      reduce using rule 292 (framereg)


state 440

  67) group_statement : GROUP LPAREN integer _ RPAREN

  RPAREN        shift, and go to state 479


state 441

  78) program_call : var_or_indirect EQUAL function_call LPAREN args RPAREN _

  $default      reduce using rule 78 (program_call)


state 442

 318) hash_value : optional_sign DIGIT _

  $default      reduce using rule 318 (hash_value)


state 443

 319) hash_value : optional_sign REAL _

  $default      reduce using rule 319 (hash_value)


state 444

 323) array : LBRACK sn array_values sn _ RBRACK

  RBRACK        shift, and go to state 480


state 445

 325) array_values : array_values COMMA _ sn array_value

  NEWLINE       shift, and go to state 190
  $default      reduce using rule 306 (swallow_newlines)

  swallow_newlines  go to state 192
  sn            go to state 481

state 446

  96) io_method : IO_METHOD LPAREN var_or_indirect COMMA number COMMA _ STRING RPAREN

  STRING        shift, and go to state 482


state 447

 101) conditional : IF expression block elsif_conditions else_block END _

  $default      reduce using rule 101 (conditional)


state 448

 107) elsif_condition : ELSIF expression block _

  $default      reduce using rule 107 (elsif_condition)


state 449

 103) conditional_block : IF expression THEN block elsif_block else_block _ END

  END           shift, and go to state 483


state 450

 109) elsif_block : elsif_block elsif_block_condition _

  $default      reduce using rule 109 (elsif_block)


state 451

 111) elsif_block_condition : ELSIF expression _ THEN block
 239) binary_expression : expression _ operator expression

  EEQUAL        shift, and go to state 207
  NOTEQUAL      shift, and go to state 208
  GTE           shift, and go to state 211
  LTE           shift, and go to state 212
  LT            shift, and go to state 209
  GT            shift, and go to state 210
  PLUS          shift, and go to state 213
  MINUS         shift, and go to state 214
  STAR          shift, and go to state 216
  SLASH         shift, and go to state 217
  DIV           shift, and go to state 218
  AND           shift, and go to state 220
  OR            shift, and go to state 215
  MOD           shift, and go to state 219
  THEN          shift, and go to state 484

  operator      go to state 206

state 452

 112) forloop : FOR var IN LPAREN int_or_var TO _ int_or_var RPAREN block END

  DIGIT         shift, and go to state 119
  WORD          shift, and go to state 107

  int_or_var    go to state 485
  integer       go to state 405
  var           go to state 406
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87

state 453

 113) forloop : FOR var IN LPAREN int_or_var DOWNTO _ int_or_var RPAREN block END

  DIGIT         shift, and go to state 119
  WORD          shift, and go to state 107

  int_or_var    go to state 486
  integer       go to state 405
  var           go to state 406
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87

state 454

  88) program_vars : program_vars COMMA program_var _

  $default      reduce using rule 88 (program_vars)


state 455

 125) function : FUNCTION WORD LPAREN program_vars RPAREN block _ END

  END           shift, and go to state 487


state 456

 126) function : FUNCTION WORD LPAREN program_vars RPAREN COLON _ WORD block END

  WORD          shift, and go to state 488


state 457

 127) case_statement : CASE var swallow_newlines case_conditions case_else END _

  $default      reduce using rule 127 (case_statement)


state 458

 133) case_else : ELSE block _

  $default      reduce using rule 133 (case_else)


state 459

 130) case_condition : WHEN case_allowed_condition block _

  $default      reduce using rule 130 (case_condition)


state 460

 146) motion_statement : MOVE DOT swallow_newlines TO LPAREN var_or_indirect _ RPAREN motion_modifiers

  RPAREN        shift, and go to state 489


state 461

 147) motion_statement : MOVE DOT swallow_newlines MID LPAREN var_or_indirect _ RPAREN DOT swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers

  RPAREN        shift, and go to state 490


state 462

 201) position_assignment : LPAREN assignable_range RPAREN var_method_modifiers ARROW array _

  $default      reduce using rule 201 (position_assignment)


state 463

 203) position_assignment : assignable_range EQUAL LPAREN assignable_range RPAREN pose_range_modifiers _
 214) pose_range_modifiers : pose_range_modifiers _ pose_range_modifier

  DOT           shift, and go to state 465
  $default      reduce using rule 203 (position_assignment)

  pose_range_modifier  go to state 491

state 464

 213) pose_range_modifiers : pose_range_modifier _

  $default      reduce using rule 213 (pose_range_modifiers)


state 465

 215) pose_range_modifier : DOT _ swallow_newlines POSEREVERSE

  NEWLINE       shift, and go to state 190
  $default      reduce using rule 306 (swallow_newlines)

  swallow_newlines  go to state 492

state 466

 226) var_system : SYSTEM WORD LBRACK integer RBRACK var_system_modifers _
 228) var_system_modifers : var_system_modifers _ var_system_modifer

  DOT           shift, and go to state 296
  DOT           [reduce using rule 226 (var_system)]
  $default      reduce using rule 226 (var_system)

  var_system_modifer  go to state 361

state 467

 263) indirect_thing : INDIRECT LPAREN STRING COMMA indirectable RPAREN _
 264) indirect_thing : INDIRECT LPAREN STRING COMMA indirectable RPAREN _ var_method_modifiers

  DOT           shift, and go to state 144
  $default      reduce using rule 263 (indirect_thing)

  var_method_modifier  go to state 143
  var_method_modifiers  go to state 493

state 468

 309) hash : LBRACE sn hash_attributes sn _ RBRACE

  RBRACE        shift, and go to state 494


state 469

 312) hash_attributes : hash_attributes COMMA _ sn hash_attribute

  NEWLINE       shift, and go to state 190
  $default      reduce using rule 306 (swallow_newlines)

  swallow_newlines  go to state 192
  sn            go to state 495

state 470

 313) hash_attribute : STRING COLON _ hash_value

  STRING        shift, and go to state 385
  WORD          shift, and go to state 386
  MINUS         shift, and go to state 139
  TRUE_FALSE    shift, and go to state 390
  LBRACK        shift, and go to state 270
  LBRACE        shift, and go to state 301
  $default      reduce using rule 322 (optional_sign)

  hash_value    go to state 496
  hash          go to state 387
  array         go to state 388
  optional_sign  go to state 389
  sign          go to state 391

state 471

  49) tp_tool_methods : LBRACE sn tp_tool_attributes sn _ RBRACE

  RBRACE        shift, and go to state 497


state 472

  52) tp_tool_attributes : tp_tool_attributes COMMA _ sn tp_tool_attribute

  NEWLINE       shift, and go to state 190
  $default      reduce using rule 306 (swallow_newlines)

  sn            go to state 498
  swallow_newlines  go to state 192

state 473

  53) tp_tool_attribute : WORD COLON _ hash_value

  STRING        shift, and go to state 385
  WORD          shift, and go to state 386
  MINUS         shift, and go to state 139
  TRUE_FALSE    shift, and go to state 390
  LBRACK        shift, and go to state 270
  LBRACE        shift, and go to state 301
  $default      reduce using rule 322 (optional_sign)

  hash_value    go to state 499
  hash          go to state 387
  array         go to state 388
  optional_sign  go to state 389
  sign          go to state 391

state 474

  61) wait_statement : WAIT_UNTIL LPAREN expression RPAREN DOT wait_modifier DOT _ wait_modifier

  NEWLINE       shift, and go to state 190
  $default      reduce using rule 306 (swallow_newlines)

  wait_modifier  go to state 500
  timeout_modifier  go to state 432
  after_modifier  go to state 433
  swallow_newlines  go to state 434

state 475

  64) timeout_modifier : swallow_newlines TIMEOUT _ LPAREN label RPAREN

  LPAREN        shift, and go to state 501


state 476

  65) after_modifier : swallow_newlines AFTER _ LPAREN indirectable COMMA STRING RPAREN

  LPAREN        shift, and go to state 502


state 477

 294) operation : OPERATION LBRACK var_or_indirect COMMA var_or_indirect RBRACK _

  $default      reduce using rule 294 (operation)


state 478

 277) definable_range : DIGIT RANGE DIGIT _

  $default      reduce using rule 277 (definable_range)


state 479

  67) group_statement : GROUP LPAREN integer RPAREN _

  $default      reduce using rule 67 (group_statement)


state 480

 323) array : LBRACK sn array_values sn RBRACK _

  $default      reduce using rule 323 (array)


state 481

 325) array_values : array_values COMMA sn _ array_value

  STRING        shift, and go to state 385
  WORD          shift, and go to state 386
  MINUS         shift, and go to state 139
  TRUE_FALSE    shift, and go to state 390
  LBRACK        shift, and go to state 270
  LBRACE        shift, and go to state 301
  $default      reduce using rule 322 (optional_sign)

  hash          go to state 387
  array         go to state 388
  optional_sign  go to state 389
  sign          go to state 391
  array_value   go to state 503
  hash_value    go to state 394

state 482

  96) io_method : IO_METHOD LPAREN var_or_indirect COMMA number COMMA STRING _ RPAREN

  RPAREN        shift, and go to state 504


state 483

 103) conditional_block : IF expression THEN block elsif_block else_block END _

  $default      reduce using rule 103 (conditional_block)


state 484

 111) elsif_block_condition : ELSIF expression THEN _ block

  NEWLINE       shift, and go to state 274

  block         go to state 505

state 485

 112) forloop : FOR var IN LPAREN int_or_var TO int_or_var _ RPAREN block END

  RPAREN        shift, and go to state 506


state 486

 113) forloop : FOR var IN LPAREN int_or_var DOWNTO int_or_var _ RPAREN block END

  RPAREN        shift, and go to state 507


state 487

 125) function : FUNCTION WORD LPAREN program_vars RPAREN block END _

  $default      reduce using rule 125 (function)


state 488

 126) function : FUNCTION WORD LPAREN program_vars RPAREN COLON WORD _ block END

  NEWLINE       shift, and go to state 274

  block         go to state 508

state 489

 146) motion_statement : MOVE DOT swallow_newlines TO LPAREN var_or_indirect RPAREN _ motion_modifiers

  DOT           shift, and go to state 511

  motion_modifiers  go to state 509
  motion_modifier  go to state 510

state 490

 147) motion_statement : MOVE DOT swallow_newlines MID LPAREN var_or_indirect RPAREN _ DOT swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers

  DOT           shift, and go to state 512


state 491

 214) pose_range_modifiers : pose_range_modifiers pose_range_modifier _

  $default      reduce using rule 214 (pose_range_modifiers)


state 492

 215) pose_range_modifier : DOT swallow_newlines _ POSEREVERSE

  POSEREVERSE   shift, and go to state 513


state 493

 212) var_method_modifiers : var_method_modifiers _ var_method_modifier
 264) indirect_thing : INDIRECT LPAREN STRING COMMA indirectable RPAREN var_method_modifiers _

  DOT           shift, and go to state 144
  $default      reduce using rule 264 (indirect_thing)

  var_method_modifier  go to state 249

state 494

 309) hash : LBRACE sn hash_attributes sn RBRACE _

  $default      reduce using rule 309 (hash)


state 495

 312) hash_attributes : hash_attributes COMMA sn _ hash_attribute

  STRING        shift, and go to state 425

  hash_attribute  go to state 514

state 496

 313) hash_attribute : STRING COLON hash_value _

  $default      reduce using rule 313 (hash_attribute)


state 497

  49) tp_tool_methods : LBRACE sn tp_tool_attributes sn RBRACE _

  $default      reduce using rule 49 (tp_tool_methods)


state 498

  52) tp_tool_attributes : tp_tool_attributes COMMA sn _ tp_tool_attribute

  WORD          shift, and go to state 429

  tp_tool_attribute  go to state 515

state 499

  53) tp_tool_attribute : WORD COLON hash_value _

  $default      reduce using rule 53 (tp_tool_attribute)


state 500

  61) wait_statement : WAIT_UNTIL LPAREN expression RPAREN DOT wait_modifier DOT wait_modifier _

  $default      reduce using rule 61 (wait_statement)


state 501

  64) timeout_modifier : swallow_newlines TIMEOUT LPAREN _ label RPAREN

  LABEL         shift, and go to state 49

  label         go to state 516

state 502

  65) after_modifier : swallow_newlines AFTER LPAREN _ indirectable COMMA STRING RPAREN

  REAL          shift, and go to state 118
  DIGIT         shift, and go to state 119
  WORD          shift, and go to state 107

  indirectable  go to state 517
  number        go to state 115
  var           go to state 116
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87
  integer       go to state 117

state 503

 325) array_values : array_values COMMA sn array_value _

  $default      reduce using rule 325 (array_values)


state 504

  96) io_method : IO_METHOD LPAREN var_or_indirect COMMA number COMMA STRING RPAREN _

  $default      reduce using rule 96 (io_method)


state 505

 111) elsif_block_condition : ELSIF expression THEN block _

  $default      reduce using rule 111 (elsif_block_condition)


state 506

 112) forloop : FOR var IN LPAREN int_or_var TO int_or_var RPAREN _ block END

  NEWLINE       shift, and go to state 274

  block         go to state 518

state 507

 113) forloop : FOR var IN LPAREN int_or_var DOWNTO int_or_var RPAREN _ block END

  NEWLINE       shift, and go to state 274

  block         go to state 519

state 508

 126) function : FUNCTION WORD LPAREN program_vars RPAREN COLON WORD block _ END

  END           shift, and go to state 520


state 509

 146) motion_statement : MOVE DOT swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers _
 149) motion_modifiers : motion_modifiers _ motion_modifier

  DOT           shift, and go to state 511
  $default      reduce using rule 146 (motion_statement)

  motion_modifier  go to state 521

state 510

 148) motion_modifiers : motion_modifier _

  $default      reduce using rule 148 (motion_modifiers)


state 511

 152) motion_modifier : DOT _ swallow_newlines AT LPAREN speed RPAREN
 153) motion_modifier : DOT _ swallow_newlines ACC LPAREN int_or_var RPAREN
 154) motion_modifier : DOT _ swallow_newlines CR LPAREN motion_arguements RPAREN
 155) motion_modifier : DOT _ swallow_newlines TERM LPAREN valid_terminations RPAREN
 156) motion_modifier : DOT _ swallow_newlines OFFSET LPAREN var_or_indirect RPAREN
 157) motion_modifier : DOT _ swallow_newlines TIME_SEGMENT LPAREN time COMMA time_seg_actions RPAREN
 158) motion_modifier : DOT _ swallow_newlines SKIP LPAREN label optional_lpos_arg RPAREN
 159) motion_modifier : DOT _ swallow_newlines valid_motion_statements
 160) motion_modifier : DOT _ swallow_newlines single_argument_motion_modifiers LPAREN int_or_var RPAREN

  NEWLINE       shift, and go to state 190
  $default      reduce using rule 306 (swallow_newlines)

  swallow_newlines  go to state 522

state 512

 147) motion_statement : MOVE DOT swallow_newlines MID LPAREN var_or_indirect RPAREN DOT _ swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers

  NEWLINE       shift, and go to state 190
  $default      reduce using rule 306 (swallow_newlines)

  swallow_newlines  go to state 523

state 513

 215) pose_range_modifier : DOT swallow_newlines POSEREVERSE _

  $default      reduce using rule 215 (pose_range_modifier)


state 514

 312) hash_attributes : hash_attributes COMMA sn hash_attribute _

  $default      reduce using rule 312 (hash_attributes)


state 515

  52) tp_tool_attributes : tp_tool_attributes COMMA sn tp_tool_attribute _

  $default      reduce using rule 52 (tp_tool_attributes)


state 516

  64) timeout_modifier : swallow_newlines TIMEOUT LPAREN label _ RPAREN

  RPAREN        shift, and go to state 524


state 517

  65) after_modifier : swallow_newlines AFTER LPAREN indirectable _ COMMA STRING RPAREN

  COMMA         shift, and go to state 525


state 518

 112) forloop : FOR var IN LPAREN int_or_var TO int_or_var RPAREN block _ END

  END           shift, and go to state 526


state 519

 113) forloop : FOR var IN LPAREN int_or_var DOWNTO int_or_var RPAREN block _ END

  END           shift, and go to state 527


state 520

 126) function : FUNCTION WORD LPAREN program_vars RPAREN COLON WORD block END _

  $default      reduce using rule 126 (function)


state 521

 149) motion_modifiers : motion_modifiers motion_modifier _

  $default      reduce using rule 149 (motion_modifiers)


state 522

 152) motion_modifier : DOT swallow_newlines _ AT LPAREN speed RPAREN
 153) motion_modifier : DOT swallow_newlines _ ACC LPAREN int_or_var RPAREN
 154) motion_modifier : DOT swallow_newlines _ CR LPAREN motion_arguements RPAREN
 155) motion_modifier : DOT swallow_newlines _ TERM LPAREN valid_terminations RPAREN
 156) motion_modifier : DOT swallow_newlines _ OFFSET LPAREN var_or_indirect RPAREN
 157) motion_modifier : DOT swallow_newlines _ TIME_SEGMENT LPAREN time COMMA time_seg_actions RPAREN
 158) motion_modifier : DOT swallow_newlines _ SKIP LPAREN label optional_lpos_arg RPAREN
 159) motion_modifier : DOT swallow_newlines _ valid_motion_statements
 160) motion_modifier : DOT swallow_newlines _ single_argument_motion_modifiers LPAREN int_or_var RPAREN

  TIME_SEGMENT  shift, and go to state 533
  AT            shift, and go to state 528
  ACC           shift, and go to state 529
  TERM          shift, and go to state 531
  OFFSET        shift, and go to state 532
  SKIP          shift, and go to state 534
  COORD         shift, and go to state 537
  MROT          shift, and go to state 538
  PTH           shift, and go to state 539
  WJNT          shift, and go to state 541
  INC           shift, and go to state 540
  BREAK         shift, and go to state 542
  RTCP          shift, and go to state 543
  FPLIN         shift, and go to state 544
  AP_LD         shift, and go to state 549
  RT_LD         shift, and go to state 548
  CD            shift, and go to state 545
  CR            shift, and go to state 530
  INDEV         shift, and go to state 547
  EV            shift, and go to state 546
  PSPD          shift, and go to state 550
  CTV           shift, and go to state 551

  valid_motion_statements  go to state 535
  single_argument_motion_modifiers  go to state 536

state 523

 147) motion_statement : MOVE DOT swallow_newlines MID LPAREN var_or_indirect RPAREN DOT swallow_newlines _ TO LPAREN var_or_indirect RPAREN motion_modifiers

  TO            shift, and go to state 552


state 524

  64) timeout_modifier : swallow_newlines TIMEOUT LPAREN label RPAREN _

  $default      reduce using rule 64 (timeout_modifier)


state 525

  65) after_modifier : swallow_newlines AFTER LPAREN indirectable COMMA _ STRING RPAREN

  STRING        shift, and go to state 553


state 526

 112) forloop : FOR var IN LPAREN int_or_var TO int_or_var RPAREN block END _

  $default      reduce using rule 112 (forloop)


state 527

 113) forloop : FOR var IN LPAREN int_or_var DOWNTO int_or_var RPAREN block END _

  $default      reduce using rule 113 (forloop)


state 528

 152) motion_modifier : DOT swallow_newlines AT _ LPAREN speed RPAREN

  LPAREN        shift, and go to state 554


state 529

 153) motion_modifier : DOT swallow_newlines ACC _ LPAREN int_or_var RPAREN

  LPAREN        shift, and go to state 555


state 530

 154) motion_modifier : DOT swallow_newlines CR _ LPAREN motion_arguements RPAREN

  LPAREN        shift, and go to state 556


state 531

 155) motion_modifier : DOT swallow_newlines TERM _ LPAREN valid_terminations RPAREN

  LPAREN        shift, and go to state 557


state 532

 156) motion_modifier : DOT swallow_newlines OFFSET _ LPAREN var_or_indirect RPAREN

  LPAREN        shift, and go to state 558


state 533

 157) motion_modifier : DOT swallow_newlines TIME_SEGMENT _ LPAREN time COMMA time_seg_actions RPAREN

  LPAREN        shift, and go to state 559


state 534

 158) motion_modifier : DOT swallow_newlines SKIP _ LPAREN label optional_lpos_arg RPAREN

  LPAREN        shift, and go to state 560


state 535

 159) motion_modifier : DOT swallow_newlines valid_motion_statements _

  $default      reduce using rule 159 (motion_modifier)


state 536

 160) motion_modifier : DOT swallow_newlines single_argument_motion_modifiers _ LPAREN int_or_var RPAREN

  LPAREN        shift, and go to state 561


state 537

 161) valid_motion_statements : COORD _

  $default      reduce using rule 161 (valid_motion_statements)


state 538

 162) valid_motion_statements : MROT _

  $default      reduce using rule 162 (valid_motion_statements)


state 539

 163) valid_motion_statements : PTH _

  $default      reduce using rule 163 (valid_motion_statements)


state 540

 164) valid_motion_statements : INC _

  $default      reduce using rule 164 (valid_motion_statements)


state 541

 165) valid_motion_statements : WJNT _

  $default      reduce using rule 165 (valid_motion_statements)


state 542

 166) valid_motion_statements : BREAK _

  $default      reduce using rule 166 (valid_motion_statements)


state 543

 167) valid_motion_statements : RTCP _

  $default      reduce using rule 167 (valid_motion_statements)


state 544

 168) valid_motion_statements : FPLIN _

  $default      reduce using rule 168 (valid_motion_statements)


state 545

 169) single_argument_motion_modifiers : CD _

  $default      reduce using rule 169 (single_argument_motion_modifiers)


state 546

 170) single_argument_motion_modifiers : EV _

  $default      reduce using rule 170 (single_argument_motion_modifiers)


state 547

 171) single_argument_motion_modifiers : INDEV _

  $default      reduce using rule 171 (single_argument_motion_modifiers)


state 548

 172) single_argument_motion_modifiers : RT_LD _

  $default      reduce using rule 172 (single_argument_motion_modifiers)


state 549

 173) single_argument_motion_modifiers : AP_LD _

  $default      reduce using rule 173 (single_argument_motion_modifiers)


state 550

 174) single_argument_motion_modifiers : PSPD _

  $default      reduce using rule 174 (single_argument_motion_modifiers)


state 551

 175) single_argument_motion_modifiers : CTV _

  $default      reduce using rule 175 (single_argument_motion_modifiers)


state 552

 147) motion_statement : MOVE DOT swallow_newlines MID LPAREN var_or_indirect RPAREN DOT swallow_newlines TO _ LPAREN var_or_indirect RPAREN motion_modifiers

  LPAREN        shift, and go to state 562


state 553

  65) after_modifier : swallow_newlines AFTER LPAREN indirectable COMMA STRING _ RPAREN

  RPAREN        shift, and go to state 563


state 554

 152) motion_modifier : DOT swallow_newlines AT LPAREN _ speed RPAREN

  STRING        shift, and go to state 566
  REAL          shift, and go to state 118
  DIGIT         shift, and go to state 119
  WORD          shift, and go to state 107

  speed         go to state 564
  number        go to state 115
  var           go to state 116
  indirectable  go to state 565
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87
  integer       go to state 117

state 555

 153) motion_modifier : DOT swallow_newlines ACC LPAREN _ int_or_var RPAREN

  DIGIT         shift, and go to state 119
  WORD          shift, and go to state 107

  integer       go to state 405
  var           go to state 406
  int_or_var    go to state 567
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87

state 556

 154) motion_modifier : DOT swallow_newlines CR LPAREN _ motion_arguements RPAREN

  DIGIT         shift, and go to state 119
  WORD          shift, and go to state 107
  MINUS         shift, and go to state 572

  valid_terminations  go to state 568
  motion_arguements  go to state 569
  integer       go to state 570
  var           go to state 571
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87

state 557

 155) motion_modifier : DOT swallow_newlines TERM LPAREN _ valid_terminations RPAREN

  DIGIT         shift, and go to state 119
  WORD          shift, and go to state 107
  MINUS         shift, and go to state 572

  valid_terminations  go to state 573
  integer       go to state 570
  var           go to state 571
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87

state 558

 156) motion_modifier : DOT swallow_newlines OFFSET LPAREN _ var_or_indirect RPAREN

  WORD          shift, and go to state 107
  INDIRECT      shift, and go to state 88
  SYSTEM        shift, and go to state 86

  var           go to state 105
  indirect_thing  go to state 62
  var_system    go to state 106
  var_or_indirect  go to state 574
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87

state 559

 157) motion_modifier : DOT swallow_newlines TIME_SEGMENT LPAREN _ time COMMA time_seg_actions RPAREN

  REAL          shift, and go to state 118
  DIGIT         shift, and go to state 119
  WORD          shift, and go to state 107

  time          go to state 575
  var           go to state 576
  number        go to state 577
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87
  integer       go to state 117

state 560

 158) motion_modifier : DOT swallow_newlines SKIP LPAREN _ label optional_lpos_arg RPAREN

  LABEL         shift, and go to state 49

  label         go to state 578

state 561

 160) motion_modifier : DOT swallow_newlines single_argument_motion_modifiers LPAREN _ int_or_var RPAREN

  DIGIT         shift, and go to state 119
  WORD          shift, and go to state 107

  integer       go to state 405
  var           go to state 406
  int_or_var    go to state 579
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87

state 562

 147) motion_statement : MOVE DOT swallow_newlines MID LPAREN var_or_indirect RPAREN DOT swallow_newlines TO LPAREN _ var_or_indirect RPAREN motion_modifiers

  WORD          shift, and go to state 107
  INDIRECT      shift, and go to state 88
  SYSTEM        shift, and go to state 86

  var           go to state 105
  indirect_thing  go to state 62
  var_system    go to state 106
  var_or_indirect  go to state 580
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87

state 563

  65) after_modifier : swallow_newlines AFTER LPAREN indirectable COMMA STRING RPAREN _

  $default      reduce using rule 65 (after_modifier)


state 564

 152) motion_modifier : DOT swallow_newlines AT LPAREN speed _ RPAREN

  RPAREN        shift, and go to state 581


state 565

 190) speed : indirectable _ COMMA STRING

  COMMA         shift, and go to state 582


state 566

 191) speed : STRING _

  $default      reduce using rule 191 (speed)


state 567

 153) motion_modifier : DOT swallow_newlines ACC LPAREN int_or_var _ RPAREN

  RPAREN        shift, and go to state 583


state 568

 150) motion_arguements : valid_terminations _
 151) motion_arguements : valid_terminations _ COMMA valid_terminations

  COMMA         shift, and go to state 584
  $default      reduce using rule 150 (motion_arguements)


state 569

 154) motion_modifier : DOT swallow_newlines CR LPAREN motion_arguements _ RPAREN

  RPAREN        shift, and go to state 585


state 570

 176) valid_terminations : integer _

  $default      reduce using rule 176 (valid_terminations)


state 571

 177) valid_terminations : var _

  $default      reduce using rule 177 (valid_terminations)


state 572

 178) valid_terminations : MINUS _ DIGIT

  DIGIT         shift, and go to state 586


state 573

 155) motion_modifier : DOT swallow_newlines TERM LPAREN valid_terminations _ RPAREN

  RPAREN        shift, and go to state 587


state 574

 156) motion_modifier : DOT swallow_newlines OFFSET LPAREN var_or_indirect _ RPAREN

  RPAREN        shift, and go to state 588


state 575

 157) motion_modifier : DOT swallow_newlines TIME_SEGMENT LPAREN time _ COMMA time_seg_actions RPAREN

  COMMA         shift, and go to state 589


state 576

 188) time : var _

  $default      reduce using rule 188 (time)


state 577

 189) time : number _

  $default      reduce using rule 189 (time)


state 578

 158) motion_modifier : DOT swallow_newlines SKIP LPAREN label _ optional_lpos_arg RPAREN

  COMMA         shift, and go to state 591
  $default      reduce using rule 180 (optional_lpos_arg)

  optional_lpos_arg  go to state 590

state 579

 160) motion_modifier : DOT swallow_newlines single_argument_motion_modifiers LPAREN int_or_var _ RPAREN

  RPAREN        shift, and go to state 592


state 580

 147) motion_statement : MOVE DOT swallow_newlines MID LPAREN var_or_indirect RPAREN DOT swallow_newlines TO LPAREN var_or_indirect _ RPAREN motion_modifiers

  RPAREN        shift, and go to state 593


state 581

 152) motion_modifier : DOT swallow_newlines AT LPAREN speed RPAREN _

  $default      reduce using rule 152 (motion_modifier)


state 582

 190) speed : indirectable COMMA _ STRING

  STRING        shift, and go to state 594


state 583

 153) motion_modifier : DOT swallow_newlines ACC LPAREN int_or_var RPAREN _

  $default      reduce using rule 153 (motion_modifier)


state 584

 151) motion_arguements : valid_terminations COMMA _ valid_terminations

  DIGIT         shift, and go to state 119
  WORD          shift, and go to state 107
  MINUS         shift, and go to state 572

  valid_terminations  go to state 595
  integer       go to state 570
  var           go to state 571
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87

state 585

 154) motion_modifier : DOT swallow_newlines CR LPAREN motion_arguements RPAREN _

  $default      reduce using rule 154 (motion_modifier)


state 586

 178) valid_terminations : MINUS DIGIT _

  $default      reduce using rule 178 (valid_terminations)


state 587

 155) motion_modifier : DOT swallow_newlines TERM LPAREN valid_terminations RPAREN _

  $default      reduce using rule 155 (motion_modifier)


state 588

 156) motion_modifier : DOT swallow_newlines OFFSET LPAREN var_or_indirect RPAREN _

  $default      reduce using rule 156 (motion_modifier)


state 589

 157) motion_modifier : DOT swallow_newlines TIME_SEGMENT LPAREN time COMMA _ time_seg_actions RPAREN

  IO_METHOD     shift, and go to state 60
  WORD          shift, and go to state 262
  INDIRECT      shift, and go to state 88
  CALL          shift, and go to state 57
  RUN           shift, and go to state 56
  SYSTEM        shift, and go to state 86

  namespaces    go to state 54
  function_call  go to state 55
  var_or_indirect  go to state 596
  var           go to state 105
  indirect_thing  go to state 62
  var_system    go to state 106
  time_seg_actions  go to state 597
  program_call  go to state 598
  io_method     go to state 599
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  ns            go to state 87

state 590

 158) motion_modifier : DOT swallow_newlines SKIP LPAREN label optional_lpos_arg _ RPAREN

  RPAREN        shift, and go to state 600


state 591

 179) optional_lpos_arg : COMMA _ var

  WORD          shift, and go to state 107

  var           go to state 601
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87

state 592

 160) motion_modifier : DOT swallow_newlines single_argument_motion_modifiers LPAREN int_or_var RPAREN _

  $default      reduce using rule 160 (motion_modifier)


state 593

 147) motion_statement : MOVE DOT swallow_newlines MID LPAREN var_or_indirect RPAREN DOT swallow_newlines TO LPAREN var_or_indirect RPAREN _ motion_modifiers

  DOT           shift, and go to state 511

  motion_modifiers  go to state 602
  motion_modifier  go to state 510

state 594

 190) speed : indirectable COMMA STRING _

  $default      reduce using rule 190 (speed)


state 595

 151) motion_arguements : valid_terminations COMMA valid_terminations _

  $default      reduce using rule 151 (motion_arguements)


state 596

  78) program_call : var_or_indirect _ EQUAL function_call LPAREN args RPAREN

  EQUAL         shift, and go to state 603


state 597

 157) motion_modifier : DOT swallow_newlines TIME_SEGMENT LPAREN time COMMA time_seg_actions _ RPAREN

  RPAREN        shift, and go to state 604


state 598

 186) time_seg_actions : program_call _

  $default      reduce using rule 186 (time_seg_actions)


state 599

 187) time_seg_actions : io_method _

  $default      reduce using rule 187 (time_seg_actions)


state 600

 158) motion_modifier : DOT swallow_newlines SKIP LPAREN label optional_lpos_arg RPAREN _

  $default      reduce using rule 158 (motion_modifier)


state 601

 179) optional_lpos_arg : COMMA var _

  $default      reduce using rule 179 (optional_lpos_arg)


state 602

 147) motion_statement : MOVE DOT swallow_newlines MID LPAREN var_or_indirect RPAREN DOT swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers _
 149) motion_modifiers : motion_modifiers _ motion_modifier

  DOT           shift, and go to state 511
  $default      reduce using rule 147 (motion_statement)

  motion_modifier  go to state 521

state 603

  78) program_call : var_or_indirect EQUAL _ function_call LPAREN args RPAREN

  WORD          shift, and go to state 150

  namespaces    go to state 151
  function_call  go to state 263
  ns            go to state 87

state 604

 157) motion_modifier : DOT swallow_newlines TIME_SEGMENT LPAREN time COMMA time_seg_actions RPAREN _

  $default      reduce using rule 157 (motion_modifier)

