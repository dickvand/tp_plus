state 3 contains 2 shift/reduce conflicts
state 51 contains 1 shift/reduce conflicts
state 59 contains 1 shift/reduce conflicts
state 61 contains 1 reduce/reduce conflicts
state 75 contains 2 shift/reduce conflicts
state 96 contains 2 shift/reduce conflicts
state 99 contains 1 shift/reduce conflicts
state 150 contains 1 reduce/reduce conflicts
state 174 contains 1 shift/reduce conflicts
state 178 contains 1 shift/reduce conflicts
state 190 contains 1 shift/reduce conflicts
state 269 contains 1 reduce/reduce conflicts
state 282 contains 1 shift/reduce conflicts
state 289 contains 1 shift/reduce conflicts
state 301 contains 1 shift/reduce conflicts
state 318 contains 14 shift/reduce conflicts
state 352 contains 1 shift/reduce conflicts
state 429 contains 1 shift/reduce conflicts
state 477 contains 1 shift/reduce conflicts

rule 138 (case_allowed_statement) never reduced
rule 139 (case_allowed_statement) never reduced
useless nonterminal case_allowed_statement

-------- Grammar --------

rule 1 program: statements
rule 2 program: 
rule 3 statements: statement terminator
rule 4 statements: statements statement terminator
rule 5 block: NEWLINE statements
rule 6 optional_newline: NEWLINE
rule 7 optional_newline: 
rule 8 statement: comment
rule 9 statement: message
rule 10 statement: definition
rule 11 statement: namespace
rule 12 statement: motion_statement
rule 13 statement: position_assignment
rule 14 statement: label_definition
rule 15 statement: address
rule 16 statement: conditional
rule 17 statement: inline_conditional
rule 18 statement: conditional_block
rule 19 statement: forloop
rule 20 statement: while_loop
rule 21 statement: use_statement
rule 22 statement: set_skip_statement
rule 23 statement: wait_statement
rule 24 statement: case_statement
rule 25 statement: fanuc_eval
rule 26 statement: timer_method
rule 27 statement: position_data
rule 28 statement: raise
rule 29 statement: tp_header_definition
rule 30 statement: lpos_or_jpos
rule 31 statement: empty_stmt
rule 32 statement: warning
rule 33 statement: var_system
rule 34 statement: PAUSE
rule 35 statement: ABORT
rule 36 statement: return_statement
rule 37 statement: collguard_statement
rule 38 statement: function
rule 39 statement: tp_application_definition
rule 40 statement: using_statement
rule 41 statement: import_statement
rule 42 statement: compile_statement
rule 43 lpos_or_jpos: LPOS LPAREN var_or_indirect RPAREN
rule 44 lpos_or_jpos: JPOS LPAREN var_or_indirect RPAREN
rule 45 empty_stmt: NEWLINE
rule 46 tp_header_definition: TP_HEADER EQUAL tp_header_value
rule 47 tp_header_value: STRING
rule 48 tp_header_value: TRUE_FALSE
rule 49 tp_header_value: ON_OFF
rule 50 tp_tool_methods: LBRACE sn tp_tool_attributes sn RBRACE
rule 51 tp_tool_methods: LBRACE sn RBRACE
rule 52 tp_tool_attributes: tp_tool_attribute
rule 53 tp_tool_attributes: tp_tool_attributes COMMA sn tp_tool_attribute
rule 54 tp_tool_attribute: WORD COLON hash_value
rule 55 tp_application_definition: TP_APPLICATION_TYPE EQUAL sn tp_tool_methods
rule 56 raise: RAISE var_or_indirect
rule 57 timer_method: TIMER_METHOD var_or_indirect
rule 58 fanuc_eval: EVAL STRING
rule 59 wait_statement: WAIT_FOR LPAREN indirectable COMMA STRING RPAREN
rule 60 wait_statement: WAIT_UNTIL LPAREN expression RPAREN
rule 61 wait_statement: WAIT_UNTIL LPAREN expression RPAREN DOT wait_modifier
rule 62 wait_statement: WAIT_UNTIL LPAREN expression RPAREN DOT wait_modifier DOT wait_modifier
rule 63 wait_modifier: timeout_modifier
rule 64 wait_modifier: after_modifier
rule 65 timeout_modifier: swallow_newlines TIMEOUT LPAREN label RPAREN
rule 66 after_modifier: swallow_newlines AFTER LPAREN indirectable COMMA STRING RPAREN
rule 67 label: LABEL
rule 68 group_statement: GROUP LPAREN integer RPAREN
rule 69 use_statement: FANUC_USE indirectable
rule 70 use_statement: FANUC_USE LPAREN indirectable RPAREN
rule 71 use_statement: FANUC_USE LPAREN indirectable COMMA group_statement RPAREN
rule 72 collguard_statement: COLL_GUARD optional_arg
rule 73 set_skip_statement: SET_SKIP_CONDITION expression
rule 74 function_call: WORD
rule 75 function_call: namespaces WORD
rule 76 program_call: function_call LPAREN args RPAREN
rule 77 program_call: RUN function_call LPAREN args RPAREN
rule 78 program_call: CALL var LPAREN args RPAREN
rule 79 program_call: var_or_indirect EQUAL function_call LPAREN args RPAREN
rule 80 args: arg
rule 81 args: args COMMA arg
rule 82 args: 
rule 83 arg: number
rule 84 arg: signed_number
rule 85 arg: var
rule 86 arg: string
rule 87 arg: address
rule 88 program_vars: program_var
rule 89 program_vars: program_vars COMMA program_var
rule 90 program_vars: 
rule 91 program_var: WORD
rule 92 return_statement: RETURN LPAREN expression RPAREN
rule 93 return_statement: RETURN
rule 94 string: STRING
rule 95 io_method: IO_METHOD var_or_indirect
rule 96 io_method: IO_METHOD LPAREN var_or_indirect RPAREN
rule 97 io_method: IO_METHOD LPAREN var_or_indirect COMMA number COMMA STRING RPAREN
rule 98 var_or_indirect: var
rule 99 var_or_indirect: indirect_thing
rule 100 var_or_indirect: var_system
rule 101 jump: JUMP label
rule 102 conditional: IF expression block elsif_conditions else_block END
rule 103 conditional: UNLESS expression block else_block END
rule 104 conditional_block: IF expression THEN block elsif_block else_block END
rule 105 elsif_conditions: elsif_condition
rule 106 elsif_conditions: elsif_conditions elsif_condition
rule 107 elsif_conditions: 
rule 108 elsif_condition: ELSIF expression block
rule 109 elsif_block: elsif_block_condition
rule 110 elsif_block: elsif_block elsif_block_condition
rule 111 elsif_block: 
rule 112 elsif_block_condition: ELSIF expression THEN block
rule 113 forloop: FOR var IN LPAREN int_or_var TO int_or_var RPAREN block END
rule 114 forloop: FOR var IN LPAREN int_or_var DOWNTO int_or_var RPAREN block END
rule 115 while_loop: WHILE expression block END
rule 116 int_or_var: integer
rule 117 int_or_var: var
rule 118 word_list: word_tuple
rule 119 word_list: word_list word_tuple
rule 120 word_tuple: COMMA WORD
rule 121 word_tuple: WORD
rule 122 using_statement: USING word_list
rule 123 compile_statement: COMPILE IMPORT word_list
rule 124 import_statement: IMPORT word_list
rule 125 namespace: NAMESPACE WORD block END
rule 126 function: INLINE FUNCTION WORD LPAREN program_vars RPAREN block END
rule 127 function: INLINE FUNCTION WORD LPAREN program_vars RPAREN COLON WORD block END
rule 128 function: FUNCTION WORD LPAREN program_vars RPAREN block END
rule 129 function: FUNCTION WORD LPAREN program_vars RPAREN COLON WORD block END
rule 130 case_statement: CASE var swallow_newlines case_conditions case_else END
rule 131 case_conditions: case_condition
rule 132 case_conditions: case_conditions case_condition
rule 133 case_condition: WHEN case_allowed_condition block
rule 134 case_allowed_condition: number
rule 135 case_allowed_condition: var
rule 136 case_else: ELSE block
rule 137 case_else: 
rule 138 case_allowed_statement: program_call
rule 139 case_allowed_statement: jump
rule 140 inline_conditional: inlineable
rule 141 inline_conditional: inlineable IF expression
rule 142 inline_conditional: inlineable UNLESS expression
rule 143 inlineable: jump
rule 144 inlineable: assignment
rule 145 inlineable: io_method
rule 146 inlineable: program_call
rule 147 else_block: ELSE block
rule 148 else_block: 
rule 149 motion_statement: MOVE DOT swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers
rule 150 motion_statement: MOVE DOT swallow_newlines MID LPAREN var_or_indirect RPAREN DOT swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers
rule 151 motion_modifiers: motion_modifier
rule 152 motion_modifiers: motion_modifiers motion_modifier
rule 153 motion_arguements: valid_terminations
rule 154 motion_arguements: valid_terminations COMMA valid_terminations
rule 155 motion_modifier: DOT swallow_newlines AT LPAREN speed RPAREN
rule 156 motion_modifier: DOT swallow_newlines ACC LPAREN int_or_var RPAREN
rule 157 motion_modifier: DOT swallow_newlines CR LPAREN motion_arguements RPAREN
rule 158 motion_modifier: DOT swallow_newlines TERM LPAREN valid_terminations RPAREN
rule 159 motion_modifier: DOT swallow_newlines OFFSET LPAREN var_or_indirect RPAREN
rule 160 motion_modifier: DOT swallow_newlines TIME_SEGMENT LPAREN time COMMA time_seg_actions RPAREN
rule 161 motion_modifier: DOT swallow_newlines SKIP LPAREN label optional_lpos_arg RPAREN
rule 162 motion_modifier: DOT swallow_newlines valid_motion_statements
rule 163 motion_modifier: DOT swallow_newlines single_argument_motion_modifiers LPAREN int_or_var RPAREN
rule 164 valid_motion_statements: COORD
rule 165 valid_motion_statements: MROT
rule 166 valid_motion_statements: PTH
rule 167 valid_motion_statements: INC
rule 168 valid_motion_statements: WJNT
rule 169 valid_motion_statements: BREAK
rule 170 valid_motion_statements: RTCP
rule 171 valid_motion_statements: FPLIN
rule 172 single_argument_motion_modifiers: CD
rule 173 single_argument_motion_modifiers: EV
rule 174 single_argument_motion_modifiers: INDEV
rule 175 single_argument_motion_modifiers: RT_LD
rule 176 single_argument_motion_modifiers: AP_LD
rule 177 single_argument_motion_modifiers: PSPD
rule 178 single_argument_motion_modifiers: CTV
rule 179 valid_terminations: integer
rule 180 valid_terminations: var
rule 181 valid_terminations: MINUS DIGIT
rule 182 optional_lpos_arg: COMMA var
rule 183 optional_lpos_arg: 
rule 184 indirectable: number
rule 185 indirectable: var
rule 186 optional_arg: number
rule 187 optional_arg: var
rule 188 optional_arg: 
rule 189 time_seg_actions: program_call
rule 190 time_seg_actions: io_method
rule 191 time: var
rule 192 time: number
rule 193 speed: indirectable COMMA STRING
rule 194 speed: STRING
rule 195 label_definition: label
rule 196 definition: WORD ASSIGN definable
rule 197 assignment: var_or_indirect EQUAL expression
rule 198 assignment: var_or_indirect PLUS EQUAL expression
rule 199 assignment: var_or_indirect MINUS EQUAL expression
rule 200 assignment: var_or_indirect STAR EQUAL expression
rule 201 assignment: var_or_indirect SLASH EQUAL expression
rule 202 position_assignment: DEFAULTPOS var_method_modifiers ARROW array
rule 203 position_assignment: var_or_indirect ARROW array
rule 204 position_assignment: LPAREN assignable_range RPAREN var_method_modifiers ARROW array
rule 205 position_assignment: assignable_range EQUAL assignable_range
rule 206 position_assignment: assignable_range EQUAL LPAREN assignable_range RPAREN pose_range_modifiers
rule 207 assignable_range: var RANGE var
rule 208 assignable_range: var
rule 209 var: var_without_namespaces
rule 210 var: var_with_namespaces
rule 211 var_without_namespaces: WORD
rule 212 var_without_namespaces: WORD var_method_modifiers
rule 213 var_with_namespaces: namespaces var_without_namespaces
rule 214 var_method_modifiers: var_method_modifier
rule 215 var_method_modifiers: var_method_modifiers var_method_modifier
rule 216 pose_range_modifiers: pose_range_modifier
rule 217 pose_range_modifiers: pose_range_modifiers pose_range_modifier
rule 218 pose_range_modifier: DOT swallow_newlines POSEREVERSE
rule 219 coord_system: SPHERE
rule 220 coord_system: POLAR
rule 221 coord_system: ORIGIN
rule 222 var_method_modifier: DOT swallow_newlines WORD
rule 223 var_method_modifier: DOT swallow_newlines group_statement
rule 224 var_method_modifier: DOT swallow_newlines POSEATTR
rule 225 var_method_modifier: DOT swallow_newlines OFFSET
rule 226 var_method_modifier: DOT swallow_newlines coord_system
rule 227 var_method_modifier: DOT swallow_newlines FIX
rule 228 var_system: SYSTEM WORD var_system_modifers
rule 229 var_system: SYSTEM WORD LBRACK integer RBRACK var_system_modifers
rule 230 var_system_modifers: var_system_modifer
rule 231 var_system_modifers: var_system_modifers var_system_modifer
rule 232 var_system_modifers: 
rule 233 var_system_modifer: DOT var_system
rule 234 namespaces: ns
rule 235 namespaces: namespaces ns
rule 236 ns: WORD COLON COLON
rule 237 expression: unary_expression
rule 238 expression: binary_expression
rule 239 unary_expression: factor
rule 240 unary_expression: address
rule 241 unary_expression: BANG factor
rule 242 binary_expression: expression operator expression
rule 243 operator: EEQUAL
rule 244 operator: NOTEQUAL
rule 245 operator: LT
rule 246 operator: GT
rule 247 operator: GTE
rule 248 operator: LTE
rule 249 operator: PLUS
rule 250 operator: MINUS
rule 251 operator: OR
rule 252 operator: STAR
rule 253 operator: SLASH
rule 254 operator: DIV
rule 255 operator: MOD
rule 256 operator: AND
rule 257 factor: number
rule 258 factor: signed_number
rule 259 factor: operation
rule 260 factor: var
rule 261 factor: signed_var
rule 262 factor: var_system
rule 263 factor: indirect_thing
rule 264 factor: paren_expr
rule 265 factor: booleans
rule 266 booleans: TRUE_FALSE
rule 267 booleans: ON_OFF
rule 268 paren_expr: LPAREN expression RPAREN
rule 269 indirect_thing: INDIRECT LPAREN STRING COMMA indirectable RPAREN
rule 270 indirect_thing: INDIRECT LPAREN STRING COMMA indirectable RPAREN var_method_modifiers
rule 271 signed_number: sign DIGIT
rule 272 signed_number: sign REAL
rule 273 signed_var: sign var
rule 274 sign: MINUS
rule 275 number: integer
rule 276 number: REAL
rule 277 integer: DIGIT
rule 278 definable: reg
rule 279 definable: number
rule 280 definable: signed_number
rule 281 definable: string
rule 282 definable: framereg
rule 283 definable: booleans
rule 284 definable_range: DIGIT RANGE DIGIT
rule 285 definable_range: DIGIT
rule 286 reg_types: SREG
rule 287 reg_types: UALM
rule 288 reg_types: TIMER
rule 289 reg_types: ARG
rule 290 reg_types: VREG
rule 291 reg_types: POSITION
rule 292 reg_types: NUMREG
rule 293 reg_types: POSREG
rule 294 reg_types: INPUT
rule 295 reg_types: OUTPUT
rule 296 reg: reg_types LBRACK definable_range RBRACK
rule 297 frametype: TOOLREG
rule 298 frametype: FRAMEREG
rule 299 framereg: frametype LBRACK DIGIT RBRACK
rule 300 operation: OPERATION LBRACK var_or_indirect RBRACK
rule 301 operation: OPERATION LBRACK var_or_indirect COMMA var_or_indirect RBRACK
rule 302 operation: OPERATION LBRACK signed_number RBRACK
rule 303 operation: OPERATION LBRACK number RBRACK
rule 304 address: ADDRESS var
rule 305 comment: COMMENT
rule 306 message: MESSAGE LPAREN STRING RPAREN
rule 307 warning: WARNING LPAREN STRING RPAREN
rule 308 terminator: NEWLINE
rule 309 terminator: comment optional_newline
rule 310 terminator: false
rule 311 terminator: 
rule 312 swallow_newlines: NEWLINE
rule 313 swallow_newlines: 
rule 314 position_data: POSITION_DATA sn hash sn END
rule 315 sn: swallow_newlines
rule 316 hash: LBRACE sn hash_attributes sn RBRACE
rule 317 hash: LBRACE sn RBRACE
rule 318 hash_attributes: hash_attribute
rule 319 hash_attributes: hash_attributes COMMA sn hash_attribute
rule 320 hash_attribute: STRING COLON hash_value
rule 321 hash_value: STRING
rule 322 hash_value: WORD
rule 323 hash_value: hash
rule 324 hash_value: array
rule 325 hash_value: optional_sign DIGIT
rule 326 hash_value: optional_sign REAL
rule 327 hash_value: TRUE_FALSE
rule 328 optional_sign: sign
rule 329 optional_sign: 
rule 330 array: LBRACK sn array_values sn RBRACK
rule 331 array_values: array_value
rule 332 array_values: array_values COMMA sn array_value
rule 333 array_value: hash_value

------- Symbols -------

**Nonterminals, with rules where they appear

  $start (133)
    on right: 
    on left : 
  program (134)
    on right: 
    on left : 1 2
  statements (135)
    on right: 1 4 5
    on left : 3 4
  statement (136)
    on right: 3 4
    on left : 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42
  terminator (137)
    on right: 3 4
    on left : 308 309 310 311
  block (138)
    on right: 102 103 104 108 112 113 114 115 125 126 127 128 129 133 136 147
    on left : 5
  optional_newline (139)
    on right: 309
    on left : 6 7
  comment (140)
    on right: 8 309
    on left : 305
  message (141)
    on right: 9
    on left : 306
  definition (142)
    on right: 10
    on left : 196
  namespace (143)
    on right: 11
    on left : 125
  motion_statement (144)
    on right: 12
    on left : 149 150
  position_assignment (145)
    on right: 13
    on left : 202 203 204 205 206
  label_definition (146)
    on right: 14
    on left : 195
  address (147)
    on right: 15 87 240
    on left : 304
  conditional (148)
    on right: 16
    on left : 102 103
  inline_conditional (149)
    on right: 17
    on left : 140 141 142
  conditional_block (150)
    on right: 18
    on left : 104
  forloop (151)
    on right: 19
    on left : 113 114
  while_loop (152)
    on right: 20
    on left : 115
  use_statement (153)
    on right: 21
    on left : 69 70 71
  set_skip_statement (154)
    on right: 22
    on left : 73
  wait_statement (155)
    on right: 23
    on left : 59 60 61 62
  case_statement (156)
    on right: 24
    on left : 130
  fanuc_eval (157)
    on right: 25
    on left : 58
  timer_method (158)
    on right: 26
    on left : 57
  position_data (159)
    on right: 27
    on left : 314
  raise (160)
    on right: 28
    on left : 56
  tp_header_definition (161)
    on right: 29
    on left : 46
  lpos_or_jpos (162)
    on right: 30
    on left : 43 44
  empty_stmt (163)
    on right: 31
    on left : 45
  warning (164)
    on right: 32
    on left : 307
  var_system (165)
    on right: 33 100 233 262
    on left : 228 229
  return_statement (166)
    on right: 36
    on left : 92 93
  collguard_statement (167)
    on right: 37
    on left : 72
  function (168)
    on right: 38
    on left : 126 127 128 129
  tp_application_definition (169)
    on right: 39
    on left : 55
  using_statement (170)
    on right: 40
    on left : 122
  import_statement (171)
    on right: 41
    on left : 124
  compile_statement (172)
    on right: 42
    on left : 123
  var_or_indirect (173)
    on right: 43 44 56 57 79 95 96 97 149 150 159 197 198 199 200 201 203 300 301
    on left : 98 99 100
  tp_header_value (174)
    on right: 46
    on left : 47 48 49
  tp_tool_methods (175)
    on right: 55
    on left : 50 51
  sn (176)
    on right: 50 51 53 55 314 316 317 319 330 332
    on left : 315
  tp_tool_attributes (177)
    on right: 50 53
    on left : 52 53
  tp_tool_attribute (178)
    on right: 52 53
    on left : 54
  hash_value (179)
    on right: 54 320 333
    on left : 321 322 323 324 325 326 327
  indirectable (180)
    on right: 59 66 69 70 71 193 269 270
    on left : 184 185
  expression (181)
    on right: 60 61 62 73 92 102 103 104 108 112 115 141 142 197 198 199 200 201 242 268
    on left : 237 238
  wait_modifier (182)
    on right: 61 62
    on left : 63 64
  timeout_modifier (183)
    on right: 63
    on left : 65
  after_modifier (184)
    on right: 64
    on left : 66
  swallow_newlines (185)
    on right: 65 66 130 149 150 155 156 157 158 159 160 161 162 163 218 222 223 224 225 226 227 315
    on left : 312 313
  label (186)
    on right: 65 101 161 195
    on left : 67
  group_statement (187)
    on right: 71 223
    on left : 68
  integer (188)
    on right: 68 116 179 229 275
    on left : 277
  optional_arg (189)
    on right: 72
    on left : 186 187 188
  function_call (190)
    on right: 76 77 79
    on left : 74 75
  namespaces (191)
    on right: 75 213 235
    on left : 234 235
  program_call (192)
    on right: 138 146 189
    on left : 76 77 78 79
  args (193)
    on right: 76 77 78 79 81
    on left : 80 81 82
  var (194)
    on right: 78 85 98 113 114 117 130 135 180 182 185 187 191 207 208 260 273 304
    on left : 209 210
  arg (195)
    on right: 80 81
    on left : 83 84 85 86 87
  number (196)
    on right: 83 97 134 184 186 192 257 279 303
    on left : 275 276
  signed_number (197)
    on right: 84 258 280 302
    on left : 271 272
  string (198)
    on right: 86 281
    on left : 94
  program_vars (199)
    on right: 89 126 127 128 129
    on left : 88 89 90
  program_var (200)
    on right: 88 89
    on left : 91
  io_method (201)
    on right: 145 190
    on left : 95 96 97
  indirect_thing (202)
    on right: 99 263
    on left : 269 270
  jump (203)
    on right: 139 143
    on left : 101
  elsif_conditions (204)
    on right: 102 106
    on left : 105 106 107
  else_block (205)
    on right: 102 103 104
    on left : 147 148
  elsif_block (206)
    on right: 104 110
    on left : 109 110 111
  elsif_condition (207)
    on right: 105 106
    on left : 108
  elsif_block_condition (208)
    on right: 109 110
    on left : 112
  int_or_var (209)
    on right: 113 114 156 163
    on left : 116 117
  word_list (210)
    on right: 119 122 123 124
    on left : 118 119
  word_tuple (211)
    on right: 118 119
    on left : 120 121
  case_conditions (212)
    on right: 130 132
    on left : 131 132
  case_else (213)
    on right: 130
    on left : 136 137
  case_condition (214)
    on right: 131 132
    on left : 133
  case_allowed_condition (215)
    on right: 133
    on left : 134 135
  case_allowed_statement (216)
    on right: 
    on left : 138 139
  inlineable (217)
    on right: 140 141 142
    on left : 143 144 145 146
  assignment (218)
    on right: 144
    on left : 197 198 199 200 201
  motion_modifiers (219)
    on right: 149 150 152
    on left : 151 152
  motion_modifier (220)
    on right: 151 152
    on left : 155 156 157 158 159 160 161 162 163
  motion_arguements (221)
    on right: 157
    on left : 153 154
  valid_terminations (222)
    on right: 153 154 158
    on left : 179 180 181
  speed (223)
    on right: 155
    on left : 193 194
  time (224)
    on right: 160
    on left : 191 192
  time_seg_actions (225)
    on right: 160
    on left : 189 190
  optional_lpos_arg (226)
    on right: 161
    on left : 182 183
  valid_motion_statements (227)
    on right: 162
    on left : 164 165 166 167 168 169 170 171
  single_argument_motion_modifiers (228)
    on right: 163
    on left : 172 173 174 175 176 177 178
  definable (229)
    on right: 196
    on left : 278 279 280 281 282 283
  var_method_modifiers (230)
    on right: 202 204 212 215 270
    on left : 214 215
  array (231)
    on right: 202 203 204 324
    on left : 330
  assignable_range (232)
    on right: 204 205 206
    on left : 207 208
  pose_range_modifiers (233)
    on right: 206 217
    on left : 216 217
  var_without_namespaces (234)
    on right: 209 213
    on left : 211 212
  var_with_namespaces (235)
    on right: 210
    on left : 213
  var_method_modifier (236)
    on right: 214 215
    on left : 222 223 224 225 226 227
  pose_range_modifier (237)
    on right: 216 217
    on left : 218
  coord_system (238)
    on right: 226
    on left : 219 220 221
  var_system_modifers (239)
    on right: 228 229 231
    on left : 230 231 232
  var_system_modifer (240)
    on right: 230 231
    on left : 233
  ns (241)
    on right: 234 235
    on left : 236
  unary_expression (242)
    on right: 237
    on left : 239 240 241
  binary_expression (243)
    on right: 238
    on left : 242
  factor (244)
    on right: 239 241
    on left : 257 258 259 260 261 262 263 264 265
  operator (245)
    on right: 242
    on left : 243 244 245 246 247 248 249 250 251 252 253 254 255 256
  operation (246)
    on right: 259
    on left : 300 301 302 303
  signed_var (247)
    on right: 261
    on left : 273
  paren_expr (248)
    on right: 264
    on left : 268
  booleans (249)
    on right: 265 283
    on left : 266 267
  sign (250)
    on right: 271 272 273 328
    on left : 274
  reg (251)
    on right: 278
    on left : 296
  framereg (252)
    on right: 282
    on left : 299
  definable_range (253)
    on right: 296
    on left : 284 285
  reg_types (254)
    on right: 296
    on left : 286 287 288 289 290 291 292 293 294 295
  frametype (255)
    on right: 299
    on left : 297 298
  hash (256)
    on right: 314 323
    on left : 316 317
  hash_attributes (257)
    on right: 316 319
    on left : 318 319
  hash_attribute (258)
    on right: 318 319
    on left : 320
  optional_sign (259)
    on right: 325 326
    on left : 328 329
  array_values (260)
    on right: 330 332
    on left : 331 332
  array_value (261)
    on right: 331 332
    on left : 333

**Terminals, with rules where they appear

  $end (0) 
  error (1) 
  ASSIGN (2) 196
  AT_SYM (3) 
  COMMENT (4) 305
  MESSAGE (5) 306
  WARNING (6) 307
  JUMP (7) 101
  IO_METHOD (8) 95 96 97
  INPUT (9) 294
  OUTPUT (10) 295
  NUMREG (11) 292
  POSREG (12) 293
  VREG (13) 290
  SREG (14) 286
  TIME_SEGMENT (15) 160
  ARG (16) 289
  UALM (17) 287
  TOOLREG (18) 297
  FRAMEREG (19) 298
  MOVE (20) 149 150
  DOT (21) 61 62 149 150 155 156 157 158 159 160 161 162 163 218 222 223 224 225 226 227 233
  TO (22) 113 149 150
  DOWNTO (23) 114
  MID (24) 150
  AT (25) 155
  ACC (26) 156
  TERM (27) 158
  OFFSET (28) 159 225
  SKIP (29) 161
  GROUP (30) 68
  COORD (31) 164
  MROT (32) 165
  PTH (33) 166
  WJNT (34) 168
  INC (35) 167
  BREAK (36) 169
  RTCP (37) 170
  FPLIN (38) 171
  AP_LD (39) 176
  RT_LD (40) 175
  CD (41) 172
  CR (42) 157
  INDEV (43) 174
  EV (44) 173
  PSPD (45) 177
  CTV (46) 178
  SEMICOLON (47) 
  NEWLINE (48) 5 6 45 308 312
  STRING (49) 47 58 59 66 94 97 193 194 269 270 306 307 320 321
  REAL (50) 272 276 326
  DIGIT (51) 181 271 277 284 285 299 325
  WORD (52) 54 74 75 91 120 121 125 126 127 128 129 196 211 212 222 228 229 236 322
  EQUAL (53) 46 55 79 197 198 199 200 201 205 206
  RANGE (54) 207 284
  EEQUAL (55) 243
  NOTEQUAL (56) 244
  GTE (57) 247
  LTE (58) 248
  LT (59) 245
  GT (60) 246
  BANG (61) 241
  PLUS (62) 198 249
  MINUS (63) 181 199 250 274
  STAR (64) 200 252
  SLASH (65) 201 253
  DIV (66) 254
  AND (67) 256
  OR (68) 251
  MOD (69) 255
  IF (70) 102 104 141
  THEN (71) 104 112
  ELSE (72) 136 147
  ELSIF (73) 108 112
  END (74) 102 103 104 113 114 115 125 126 127 128 129 130 314
  UNLESS (75) 103 142
  FOR (76) 113 114
  IN (77) 113 114
  WHILE (78) 115
  WAIT_FOR (79) 59
  WAIT_UNTIL (80) 60 61 62
  TIMEOUT (81) 65
  AFTER (82) 66
  FANUC_USE (83) 69 70 71
  COLL_GUARD (84) 72
  SET_SKIP_CONDITION (85) 73
  NAMESPACE (86) 125
  CASE (87) 130
  WHEN (88) 133
  INDIRECT (89) 269 270
  POSITION (90) 291
  EVAL (91) 58
  TIMER (92) 288
  TIMER_METHOD (93) 57
  RAISE (94) 56
  ABORT (95) 35
  RETURN (96) 92 93
  POSITION_DATA (97) 314
  TRUE_FALSE (98) 48 266 327
  ON_OFF (99) 49 267
  CALL (100) 78
  RUN (101) 77
  PAUSE (102) 34
  TP_HEADER (103) 46
  TP_APPLICATION_TYPE (104) 55
  LPAREN (105) 43 44 59 60 61 62 65 66 68 70 71 76 77 78 79 92 96 97 113 114 126 127 128 129 149 150 155 156 157 158 159 160 161 163 204 206 268 269 270 306 307
  RPAREN (106) 43 44 59 60 61 62 65 66 68 70 71 76 77 78 79 92 96 97 113 114 126 127 128 129 149 150 155 156 157 158 159 160 161 163 204 206 268 269 270 306 307
  COLON (107) 54 127 129 236 320
  COMMA (108) 53 59 66 71 81 89 97 120 154 160 182 193 269 270 301 319 332
  LBRACK (109) 229 296 299 300 301 302 303 330
  RBRACK (110) 229 296 299 300 301 302 303 330
  LBRACE (111) 50 51 316 317
  RBRACE (112) 50 51 316 317
  LABEL (113) 67
  SYSTEM (114) 228 229
  ADDRESS (115) 304
  LPOS (116) 43
  JPOS (117) 44
  false (118) 310
  FUNCTION (119) 126 127 128 129
  OPERATION (120) 300 301 302 303
  USING (121) 122
  IMPORT (122) 123 124
  COMPILE (123) 123
  INLINE (124) 126 127
  ARROW (125) 202 203 204
  DEFAULTPOS (126) 202
  POSEATTR (127) 224
  POSEREVERSE (128) 218
  SPHERE (129) 219
  POLAR (130) 220
  ORIGIN (131) 221
  FIX (132) 227

--------- State ---------

state 0


  COMMENT       shift, and go to state 91
  MESSAGE       shift, and go to state 92
  WARNING       shift, and go to state 93
  JUMP          shift, and go to state 63
  IO_METHOD     shift, and go to state 60
  MOVE          shift, and go to state 80
  NEWLINE       shift, and go to state 41
  WORD          shift, and go to state 53
  IF            shift, and go to state 64
  UNLESS        shift, and go to state 65
  FOR           shift, and go to state 66
  WHILE         shift, and go to state 67
  WAIT_FOR      shift, and go to state 47
  WAIT_UNTIL    shift, and go to state 48
  FANUC_USE     shift, and go to state 50
  COLL_GUARD    shift, and go to state 51
  SET_SKIP_CONDITION  shift, and go to state 52
  NAMESPACE     shift, and go to state 71
  CASE          shift, and go to state 74
  INDIRECT      shift, and go to state 89
  EVAL          shift, and go to state 46
  TIMER_METHOD  shift, and go to state 45
  RAISE         shift, and go to state 44
  ABORT         shift, and go to state 31
  RETURN        shift, and go to state 59
  POSITION_DATA  shift, and go to state 94
  CALL          shift, and go to state 57
  RUN           shift, and go to state 56
  PAUSE         shift, and go to state 30
  TP_HEADER     shift, and go to state 42
  TP_APPLICATION_TYPE  shift, and go to state 43
  LPAREN        shift, and go to state 83
  LABEL         shift, and go to state 49
  SYSTEM        shift, and go to state 87
  ADDRESS       shift, and go to state 90
  LPOS          shift, and go to state 39
  JPOS          shift, and go to state 40
  FUNCTION      shift, and go to state 73
  USING         shift, and go to state 68
  IMPORT        shift, and go to state 70
  COMPILE       shift, and go to state 69
  INLINE        shift, and go to state 72
  DEFAULTPOS    shift, and go to state 82
  $default      reduce using rule 2 (program)

  program       go to state 1
  statements    go to state 2
  statement     go to state 3
  comment       go to state 4
  message       go to state 5
  definition    go to state 6
  namespace     go to state 7
  motion_statement  go to state 8
  position_assignment  go to state 9
  label_definition  go to state 10
  address       go to state 11
  conditional   go to state 12
  inline_conditional  go to state 13
  conditional_block  go to state 14
  forloop       go to state 15
  while_loop    go to state 16
  use_statement  go to state 17
  set_skip_statement  go to state 18
  wait_statement  go to state 19
  case_statement  go to state 20
  fanuc_eval    go to state 21
  timer_method  go to state 22
  position_data  go to state 23
  raise         go to state 24
  tp_header_definition  go to state 25
  lpos_or_jpos  go to state 26
  empty_stmt    go to state 27
  warning       go to state 28
  var_system    go to state 29
  return_statement  go to state 32
  collguard_statement  go to state 33
  function      go to state 34
  tp_application_definition  go to state 35
  using_statement  go to state 36
  import_statement  go to state 37
  compile_statement  go to state 38
  namespaces    go to state 54
  function_call  go to state 55
  var_or_indirect  go to state 58
  var           go to state 61
  indirect_thing  go to state 62
  inlineable    go to state 75
  jump          go to state 76
  assignment    go to state 77
  io_method     go to state 78
  program_call  go to state 79
  label         go to state 81
  assignable_range  go to state 84
  var_without_namespaces  go to state 85
  var_with_namespaces  go to state 86
  ns            go to state 88

state 1


  $end          shift, and go to state 95


state 2

   1) program : statements _
   4) statements : statements _ statement terminator

  COMMENT       shift, and go to state 91
  MESSAGE       shift, and go to state 92
  WARNING       shift, and go to state 93
  JUMP          shift, and go to state 63
  IO_METHOD     shift, and go to state 60
  MOVE          shift, and go to state 80
  NEWLINE       shift, and go to state 41
  WORD          shift, and go to state 53
  IF            shift, and go to state 64
  UNLESS        shift, and go to state 65
  FOR           shift, and go to state 66
  WHILE         shift, and go to state 67
  WAIT_FOR      shift, and go to state 47
  WAIT_UNTIL    shift, and go to state 48
  FANUC_USE     shift, and go to state 50
  COLL_GUARD    shift, and go to state 51
  SET_SKIP_CONDITION  shift, and go to state 52
  NAMESPACE     shift, and go to state 71
  CASE          shift, and go to state 74
  INDIRECT      shift, and go to state 89
  EVAL          shift, and go to state 46
  TIMER_METHOD  shift, and go to state 45
  RAISE         shift, and go to state 44
  ABORT         shift, and go to state 31
  RETURN        shift, and go to state 59
  POSITION_DATA  shift, and go to state 94
  CALL          shift, and go to state 57
  RUN           shift, and go to state 56
  PAUSE         shift, and go to state 30
  TP_HEADER     shift, and go to state 42
  TP_APPLICATION_TYPE  shift, and go to state 43
  LPAREN        shift, and go to state 83
  LABEL         shift, and go to state 49
  SYSTEM        shift, and go to state 87
  ADDRESS       shift, and go to state 90
  LPOS          shift, and go to state 39
  JPOS          shift, and go to state 40
  FUNCTION      shift, and go to state 73
  USING         shift, and go to state 68
  IMPORT        shift, and go to state 70
  COMPILE       shift, and go to state 69
  INLINE        shift, and go to state 72
  DEFAULTPOS    shift, and go to state 82
  $default      reduce using rule 1 (program)

  statement     go to state 96
  comment       go to state 4
  message       go to state 5
  definition    go to state 6
  namespace     go to state 7
  motion_statement  go to state 8
  position_assignment  go to state 9
  label_definition  go to state 10
  address       go to state 11
  conditional   go to state 12
  inline_conditional  go to state 13
  conditional_block  go to state 14
  forloop       go to state 15
  while_loop    go to state 16
  use_statement  go to state 17
  set_skip_statement  go to state 18
  wait_statement  go to state 19
  case_statement  go to state 20
  fanuc_eval    go to state 21
  timer_method  go to state 22
  position_data  go to state 23
  raise         go to state 24
  tp_header_definition  go to state 25
  lpos_or_jpos  go to state 26
  empty_stmt    go to state 27
  warning       go to state 28
  var_system    go to state 29
  return_statement  go to state 32
  collguard_statement  go to state 33
  function      go to state 34
  tp_application_definition  go to state 35
  using_statement  go to state 36
  import_statement  go to state 37
  compile_statement  go to state 38
  namespaces    go to state 54
  function_call  go to state 55
  var_or_indirect  go to state 58
  var           go to state 61
  indirect_thing  go to state 62
  inlineable    go to state 75
  jump          go to state 76
  assignment    go to state 77
  io_method     go to state 78
  program_call  go to state 79
  label         go to state 81
  assignable_range  go to state 84
  var_without_namespaces  go to state 85
  var_with_namespaces  go to state 86
  ns            go to state 88

state 3

   3) statements : statement _ terminator

  COMMENT       shift, and go to state 91
  COMMENT       [reduce using rule 311 (terminator)]
  NEWLINE       shift, and go to state 98
  NEWLINE       [reduce using rule 311 (terminator)]
  false         shift, and go to state 100
  $default      reduce using rule 311 (terminator)

  terminator    go to state 97
  comment       go to state 99

state 4

   8) statement : comment _

  $default      reduce using rule 8 (statement)


state 5

   9) statement : message _

  $default      reduce using rule 9 (statement)


state 6

  10) statement : definition _

  $default      reduce using rule 10 (statement)


state 7

  11) statement : namespace _

  $default      reduce using rule 11 (statement)


state 8

  12) statement : motion_statement _

  $default      reduce using rule 12 (statement)


state 9

  13) statement : position_assignment _

  $default      reduce using rule 13 (statement)


state 10

  14) statement : label_definition _

  $default      reduce using rule 14 (statement)


state 11

  15) statement : address _

  $default      reduce using rule 15 (statement)


state 12

  16) statement : conditional _

  $default      reduce using rule 16 (statement)


state 13

  17) statement : inline_conditional _

  $default      reduce using rule 17 (statement)


state 14

  18) statement : conditional_block _

  $default      reduce using rule 18 (statement)


state 15

  19) statement : forloop _

  $default      reduce using rule 19 (statement)


state 16

  20) statement : while_loop _

  $default      reduce using rule 20 (statement)


state 17

  21) statement : use_statement _

  $default      reduce using rule 21 (statement)


state 18

  22) statement : set_skip_statement _

  $default      reduce using rule 22 (statement)


state 19

  23) statement : wait_statement _

  $default      reduce using rule 23 (statement)


state 20

  24) statement : case_statement _

  $default      reduce using rule 24 (statement)


state 21

  25) statement : fanuc_eval _

  $default      reduce using rule 25 (statement)


state 22

  26) statement : timer_method _

  $default      reduce using rule 26 (statement)


state 23

  27) statement : position_data _

  $default      reduce using rule 27 (statement)


state 24

  28) statement : raise _

  $default      reduce using rule 28 (statement)


state 25

  29) statement : tp_header_definition _

  $default      reduce using rule 29 (statement)


state 26

  30) statement : lpos_or_jpos _

  $default      reduce using rule 30 (statement)


state 27

  31) statement : empty_stmt _

  $default      reduce using rule 31 (statement)


state 28

  32) statement : warning _

  $default      reduce using rule 32 (statement)


state 29

  33) statement : var_system _
 100) var_or_indirect : var_system _

  EQUAL         reduce using rule 100 (var_or_indirect)
  PLUS          reduce using rule 100 (var_or_indirect)
  MINUS         reduce using rule 100 (var_or_indirect)
  STAR          reduce using rule 100 (var_or_indirect)
  SLASH         reduce using rule 100 (var_or_indirect)
  ARROW         reduce using rule 100 (var_or_indirect)
  $default      reduce using rule 33 (statement)


state 30

  34) statement : PAUSE _

  $default      reduce using rule 34 (statement)


state 31

  35) statement : ABORT _

  $default      reduce using rule 35 (statement)


state 32

  36) statement : return_statement _

  $default      reduce using rule 36 (statement)


state 33

  37) statement : collguard_statement _

  $default      reduce using rule 37 (statement)


state 34

  38) statement : function _

  $default      reduce using rule 38 (statement)


state 35

  39) statement : tp_application_definition _

  $default      reduce using rule 39 (statement)


state 36

  40) statement : using_statement _

  $default      reduce using rule 40 (statement)


state 37

  41) statement : import_statement _

  $default      reduce using rule 41 (statement)


state 38

  42) statement : compile_statement _

  $default      reduce using rule 42 (statement)


state 39

  43) lpos_or_jpos : LPOS _ LPAREN var_or_indirect RPAREN

  LPAREN        shift, and go to state 101


state 40

  44) lpos_or_jpos : JPOS _ LPAREN var_or_indirect RPAREN

  LPAREN        shift, and go to state 102


state 41

  45) empty_stmt : NEWLINE _

  $default      reduce using rule 45 (empty_stmt)


state 42

  46) tp_header_definition : TP_HEADER _ EQUAL tp_header_value

  EQUAL         shift, and go to state 103


state 43

  55) tp_application_definition : TP_APPLICATION_TYPE _ EQUAL sn tp_tool_methods

  EQUAL         shift, and go to state 104


state 44

  56) raise : RAISE _ var_or_indirect

  WORD          shift, and go to state 108
  INDIRECT      shift, and go to state 89
  SYSTEM        shift, and go to state 87

  var_or_indirect  go to state 105
  var           go to state 106
  indirect_thing  go to state 62
  var_system    go to state 107
  var_without_namespaces  go to state 85
  var_with_namespaces  go to state 86
  namespaces    go to state 109
  ns            go to state 88

state 45

  57) timer_method : TIMER_METHOD _ var_or_indirect

  WORD          shift, and go to state 108
  INDIRECT      shift, and go to state 89
  SYSTEM        shift, and go to state 87

  var_or_indirect  go to state 110
  var           go to state 106
  indirect_thing  go to state 62
  var_system    go to state 107
  var_without_namespaces  go to state 85
  var_with_namespaces  go to state 86
  namespaces    go to state 109
  ns            go to state 88

state 46

  58) fanuc_eval : EVAL _ STRING

  STRING        shift, and go to state 111


state 47

  59) wait_statement : WAIT_FOR _ LPAREN indirectable COMMA STRING RPAREN

  LPAREN        shift, and go to state 112


state 48

  60) wait_statement : WAIT_UNTIL _ LPAREN expression RPAREN
  61) wait_statement : WAIT_UNTIL _ LPAREN expression RPAREN DOT wait_modifier
  62) wait_statement : WAIT_UNTIL _ LPAREN expression RPAREN DOT wait_modifier DOT wait_modifier

  LPAREN        shift, and go to state 113


state 49

  67) label : LABEL _

  $default      reduce using rule 67 (label)


state 50

  69) use_statement : FANUC_USE _ indirectable
  70) use_statement : FANUC_USE _ LPAREN indirectable RPAREN
  71) use_statement : FANUC_USE _ LPAREN indirectable COMMA group_statement RPAREN

  REAL          shift, and go to state 119
  DIGIT         shift, and go to state 120
  WORD          shift, and go to state 108
  LPAREN        shift, and go to state 115

  indirectable  go to state 114
  number        go to state 116
  var           go to state 117
  var_without_namespaces  go to state 85
  var_with_namespaces  go to state 86
  namespaces    go to state 109
  ns            go to state 88
  integer       go to state 118

state 51

  72) collguard_statement : COLL_GUARD _ optional_arg

  REAL          shift, and go to state 119
  DIGIT         shift, and go to state 120
  WORD          shift, and go to state 108
  WORD          [reduce using rule 188 (optional_arg)]
  $default      reduce using rule 188 (optional_arg)

  optional_arg  go to state 121
  number        go to state 122
  var           go to state 123
  var_without_namespaces  go to state 85
  var_with_namespaces  go to state 86
  namespaces    go to state 109
  ns            go to state 88
  integer       go to state 118

state 52

  73) set_skip_statement : SET_SKIP_CONDITION _ expression

  REAL          shift, and go to state 119
  DIGIT         shift, and go to state 120
  WORD          shift, and go to state 108
  BANG          shift, and go to state 129
  MINUS         shift, and go to state 143
  INDIRECT      shift, and go to state 89
  TRUE_FALSE    shift, and go to state 139
  ON_OFF        shift, and go to state 140
  LPAREN        shift, and go to state 141
  SYSTEM        shift, and go to state 87
  ADDRESS       shift, and go to state 90
  OPERATION     shift, and go to state 144

  expression    go to state 124
  var_without_namespaces  go to state 85
  var_with_namespaces  go to state 86
  namespaces    go to state 109
  ns            go to state 88
  unary_expression  go to state 125
  binary_expression  go to state 126
  factor        go to state 127
  address       go to state 128
  number        go to state 130
  signed_number  go to state 131
  operation     go to state 132
  var           go to state 133
  signed_var    go to state 134
  var_system    go to state 135
  indirect_thing  go to state 136
  paren_expr    go to state 137
  booleans      go to state 138
  sign          go to state 142
  integer       go to state 118

state 53

  74) function_call : WORD _
 196) definition : WORD _ ASSIGN definable
 211) var_without_namespaces : WORD _
 212) var_without_namespaces : WORD _ var_method_modifiers
 236) ns : WORD _ COLON COLON

  ASSIGN        shift, and go to state 145
  DOT           shift, and go to state 148
  COLON         shift, and go to state 149
  LPAREN        reduce using rule 74 (function_call)
  $default      reduce using rule 211 (var_without_namespaces)

  var_method_modifiers  go to state 146
  var_method_modifier  go to state 147

state 54

  75) function_call : namespaces _ WORD
 213) var_with_namespaces : namespaces _ var_without_namespaces
 235) namespaces : namespaces _ ns

  WORD          shift, and go to state 150

  var_without_namespaces  go to state 151
  ns            go to state 152

state 55

  76) program_call : function_call _ LPAREN args RPAREN

  LPAREN        shift, and go to state 153


state 56

  77) program_call : RUN _ function_call LPAREN args RPAREN

  WORD          shift, and go to state 154

  namespaces    go to state 155
  function_call  go to state 156
  ns            go to state 88

state 57

  78) program_call : CALL _ var LPAREN args RPAREN

  WORD          shift, and go to state 108

  var           go to state 157
  var_without_namespaces  go to state 85
  var_with_namespaces  go to state 86
  namespaces    go to state 109
  ns            go to state 88

state 58

  79) program_call : var_or_indirect _ EQUAL function_call LPAREN args RPAREN
 197) assignment : var_or_indirect _ EQUAL expression
 198) assignment : var_or_indirect _ PLUS EQUAL expression
 199) assignment : var_or_indirect _ MINUS EQUAL expression
 200) assignment : var_or_indirect _ STAR EQUAL expression
 201) assignment : var_or_indirect _ SLASH EQUAL expression
 203) position_assignment : var_or_indirect _ ARROW array

  EQUAL         shift, and go to state 158
  PLUS          shift, and go to state 159
  MINUS         shift, and go to state 160
  STAR          shift, and go to state 161
  SLASH         shift, and go to state 162
  ARROW         shift, and go to state 163


state 59

  92) return_statement : RETURN _ LPAREN expression RPAREN
  93) return_statement : RETURN _

  LPAREN        shift, and go to state 164
  LPAREN        [reduce using rule 93 (return_statement)]
  $default      reduce using rule 93 (return_statement)


state 60

  95) io_method : IO_METHOD _ var_or_indirect
  96) io_method : IO_METHOD _ LPAREN var_or_indirect RPAREN
  97) io_method : IO_METHOD _ LPAREN var_or_indirect COMMA number COMMA STRING RPAREN

  WORD          shift, and go to state 108
  INDIRECT      shift, and go to state 89
  LPAREN        shift, and go to state 166
  SYSTEM        shift, and go to state 87

  var_or_indirect  go to state 165
  var           go to state 106
  indirect_thing  go to state 62
  var_system    go to state 107
  var_without_namespaces  go to state 85
  var_with_namespaces  go to state 86
  namespaces    go to state 109
  ns            go to state 88

state 61

  98) var_or_indirect : var _
 207) assignable_range : var _ RANGE var
 208) assignable_range : var _

  RANGE         shift, and go to state 167
  EQUAL         [reduce using rule 208 (assignable_range)]
  $default      reduce using rule 98 (var_or_indirect)


state 62

  99) var_or_indirect : indirect_thing _

  $default      reduce using rule 99 (var_or_indirect)


state 63

 101) jump : JUMP _ label

  LABEL         shift, and go to state 49

  label         go to state 168

state 64

 102) conditional : IF _ expression block elsif_conditions else_block END
 104) conditional_block : IF _ expression THEN block elsif_block else_block END

  REAL          shift, and go to state 119
  DIGIT         shift, and go to state 120
  WORD          shift, and go to state 108
  BANG          shift, and go to state 129
  MINUS         shift, and go to state 143
  INDIRECT      shift, and go to state 89
  TRUE_FALSE    shift, and go to state 139
  ON_OFF        shift, and go to state 140
  LPAREN        shift, and go to state 141
  SYSTEM        shift, and go to state 87
  ADDRESS       shift, and go to state 90
  OPERATION     shift, and go to state 144

  expression    go to state 169
  var_without_namespaces  go to state 85
  var_with_namespaces  go to state 86
  namespaces    go to state 109
  ns            go to state 88
  unary_expression  go to state 125
  binary_expression  go to state 126
  factor        go to state 127
  address       go to state 128
  number        go to state 130
  signed_number  go to state 131
  operation     go to state 132
  var           go to state 133
  signed_var    go to state 134
  var_system    go to state 135
  indirect_thing  go to state 136
  paren_expr    go to state 137
  booleans      go to state 138
  sign          go to state 142
  integer       go to state 118

state 65

 103) conditional : UNLESS _ expression block else_block END

  REAL          shift, and go to state 119
  DIGIT         shift, and go to state 120
  WORD          shift, and go to state 108
  BANG          shift, and go to state 129
  MINUS         shift, and go to state 143
  INDIRECT      shift, and go to state 89
  TRUE_FALSE    shift, and go to state 139
  ON_OFF        shift, and go to state 140
  LPAREN        shift, and go to state 141
  SYSTEM        shift, and go to state 87
  ADDRESS       shift, and go to state 90
  OPERATION     shift, and go to state 144

  expression    go to state 170
  var_without_namespaces  go to state 85
  var_with_namespaces  go to state 86
  namespaces    go to state 109
  ns            go to state 88
  unary_expression  go to state 125
  binary_expression  go to state 126
  factor        go to state 127
  address       go to state 128
  number        go to state 130
  signed_number  go to state 131
  operation     go to state 132
  var           go to state 133
  signed_var    go to state 134
  var_system    go to state 135
  indirect_thing  go to state 136
  paren_expr    go to state 137
  booleans      go to state 138
  sign          go to state 142
  integer       go to state 118

state 66

 113) forloop : FOR _ var IN LPAREN int_or_var TO int_or_var RPAREN block END
 114) forloop : FOR _ var IN LPAREN int_or_var DOWNTO int_or_var RPAREN block END

  WORD          shift, and go to state 108

  var           go to state 171
  var_without_namespaces  go to state 85
  var_with_namespaces  go to state 86
  namespaces    go to state 109
  ns            go to state 88

state 67

 115) while_loop : WHILE _ expression block END

  REAL          shift, and go to state 119
  DIGIT         shift, and go to state 120
  WORD          shift, and go to state 108
  BANG          shift, and go to state 129
  MINUS         shift, and go to state 143
  INDIRECT      shift, and go to state 89
  TRUE_FALSE    shift, and go to state 139
  ON_OFF        shift, and go to state 140
  LPAREN        shift, and go to state 141
  SYSTEM        shift, and go to state 87
  ADDRESS       shift, and go to state 90
  OPERATION     shift, and go to state 144

  expression    go to state 172
  var_without_namespaces  go to state 85
  var_with_namespaces  go to state 86
  namespaces    go to state 109
  ns            go to state 88
  unary_expression  go to state 125
  binary_expression  go to state 126
  factor        go to state 127
  address       go to state 128
  number        go to state 130
  signed_number  go to state 131
  operation     go to state 132
  var           go to state 133
  signed_var    go to state 134
  var_system    go to state 135
  indirect_thing  go to state 136
  paren_expr    go to state 137
  booleans      go to state 138
  sign          go to state 142
  integer       go to state 118

state 68

 122) using_statement : USING _ word_list

  WORD          shift, and go to state 176
  COMMA         shift, and go to state 175

  word_tuple    go to state 173
  word_list     go to state 174

state 69

 123) compile_statement : COMPILE _ IMPORT word_list

  IMPORT        shift, and go to state 177


state 70

 124) import_statement : IMPORT _ word_list

  WORD          shift, and go to state 176
  COMMA         shift, and go to state 175

  word_tuple    go to state 173
  word_list     go to state 178

state 71

 125) namespace : NAMESPACE _ WORD block END

  WORD          shift, and go to state 179


state 72

 126) function : INLINE _ FUNCTION WORD LPAREN program_vars RPAREN block END
 127) function : INLINE _ FUNCTION WORD LPAREN program_vars RPAREN COLON WORD block END

  FUNCTION      shift, and go to state 180


state 73

 128) function : FUNCTION _ WORD LPAREN program_vars RPAREN block END
 129) function : FUNCTION _ WORD LPAREN program_vars RPAREN COLON WORD block END

  WORD          shift, and go to state 181


state 74

 130) case_statement : CASE _ var swallow_newlines case_conditions case_else END

  WORD          shift, and go to state 108

  var           go to state 182
  var_without_namespaces  go to state 85
  var_with_namespaces  go to state 86
  namespaces    go to state 109
  ns            go to state 88

state 75

 140) inline_conditional : inlineable _
 141) inline_conditional : inlineable _ IF expression
 142) inline_conditional : inlineable _ UNLESS expression

  IF            shift, and go to state 183
  IF            [reduce using rule 140 (inline_conditional)]
  UNLESS        shift, and go to state 184
  UNLESS        [reduce using rule 140 (inline_conditional)]
  $default      reduce using rule 140 (inline_conditional)


state 76

 143) inlineable : jump _

  $default      reduce using rule 143 (inlineable)


state 77

 144) inlineable : assignment _

  $default      reduce using rule 144 (inlineable)


state 78

 145) inlineable : io_method _

  $default      reduce using rule 145 (inlineable)


state 79

 146) inlineable : program_call _

  $default      reduce using rule 146 (inlineable)


state 80

 149) motion_statement : MOVE _ DOT swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers
 150) motion_statement : MOVE _ DOT swallow_newlines MID LPAREN var_or_indirect RPAREN DOT swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers

  DOT           shift, and go to state 185


state 81

 195) label_definition : label _

  $default      reduce using rule 195 (label_definition)


state 82

 202) position_assignment : DEFAULTPOS _ var_method_modifiers ARROW array

  DOT           shift, and go to state 148

  var_method_modifiers  go to state 186
  var_method_modifier  go to state 147

state 83

 204) position_assignment : LPAREN _ assignable_range RPAREN var_method_modifiers ARROW array

  WORD          shift, and go to state 108

  assignable_range  go to state 187
  var           go to state 188
  var_without_namespaces  go to state 85
  var_with_namespaces  go to state 86
  namespaces    go to state 109
  ns            go to state 88

state 84

 205) position_assignment : assignable_range _ EQUAL assignable_range
 206) position_assignment : assignable_range _ EQUAL LPAREN assignable_range RPAREN pose_range_modifiers

  EQUAL         shift, and go to state 189


state 85

 209) var : var_without_namespaces _

  $default      reduce using rule 209 (var)


state 86

 210) var : var_with_namespaces _

  $default      reduce using rule 210 (var)


state 87

 228) var_system : SYSTEM _ WORD var_system_modifers
 229) var_system : SYSTEM _ WORD LBRACK integer RBRACK var_system_modifers

  WORD          shift, and go to state 190


state 88

 234) namespaces : ns _

  $default      reduce using rule 234 (namespaces)


state 89

 269) indirect_thing : INDIRECT _ LPAREN STRING COMMA indirectable RPAREN
 270) indirect_thing : INDIRECT _ LPAREN STRING COMMA indirectable RPAREN var_method_modifiers

  LPAREN        shift, and go to state 191


state 90

 304) address : ADDRESS _ var

  WORD          shift, and go to state 108

  var_without_namespaces  go to state 85
  var_with_namespaces  go to state 86
  namespaces    go to state 109
  ns            go to state 88
  var           go to state 192

state 91

 305) comment : COMMENT _

  $default      reduce using rule 305 (comment)


state 92

 306) message : MESSAGE _ LPAREN STRING RPAREN

  LPAREN        shift, and go to state 193


state 93

 307) warning : WARNING _ LPAREN STRING RPAREN

  LPAREN        shift, and go to state 194


state 94

 314) position_data : POSITION_DATA _ sn hash sn END

  NEWLINE       shift, and go to state 195
  $default      reduce using rule 313 (swallow_newlines)

  sn            go to state 196
  swallow_newlines  go to state 197

state 95


  $end          shift, and go to state 198


state 96

   4) statements : statements statement _ terminator

  COMMENT       shift, and go to state 91
  COMMENT       [reduce using rule 311 (terminator)]
  NEWLINE       shift, and go to state 98
  NEWLINE       [reduce using rule 311 (terminator)]
  false         shift, and go to state 100
  $default      reduce using rule 311 (terminator)

  terminator    go to state 199
  comment       go to state 99

state 97

   3) statements : statement terminator _

  $default      reduce using rule 3 (statements)


state 98

 308) terminator : NEWLINE _

  $default      reduce using rule 308 (terminator)


state 99

 309) terminator : comment _ optional_newline

  NEWLINE       shift, and go to state 200
  NEWLINE       [reduce using rule 7 (optional_newline)]
  $default      reduce using rule 7 (optional_newline)

  optional_newline  go to state 201

state 100

 310) terminator : false _

  $default      reduce using rule 310 (terminator)


state 101

  43) lpos_or_jpos : LPOS LPAREN _ var_or_indirect RPAREN

  WORD          shift, and go to state 108
  INDIRECT      shift, and go to state 89
  SYSTEM        shift, and go to state 87

  var_or_indirect  go to state 202
  var           go to state 106
  indirect_thing  go to state 62
  var_system    go to state 107
  var_without_namespaces  go to state 85
  var_with_namespaces  go to state 86
  namespaces    go to state 109
  ns            go to state 88

state 102

  44) lpos_or_jpos : JPOS LPAREN _ var_or_indirect RPAREN

  WORD          shift, and go to state 108
  INDIRECT      shift, and go to state 89
  SYSTEM        shift, and go to state 87

  var_or_indirect  go to state 203
  var           go to state 106
  indirect_thing  go to state 62
  var_system    go to state 107
  var_without_namespaces  go to state 85
  var_with_namespaces  go to state 86
  namespaces    go to state 109
  ns            go to state 88

state 103

  46) tp_header_definition : TP_HEADER EQUAL _ tp_header_value

  STRING        shift, and go to state 205
  TRUE_FALSE    shift, and go to state 206
  ON_OFF        shift, and go to state 207

  tp_header_value  go to state 204

state 104

  55) tp_application_definition : TP_APPLICATION_TYPE EQUAL _ sn tp_tool_methods

  NEWLINE       shift, and go to state 195
  $default      reduce using rule 313 (swallow_newlines)

  sn            go to state 208
  swallow_newlines  go to state 197

state 105

  56) raise : RAISE var_or_indirect _

  $default      reduce using rule 56 (raise)


state 106

  98) var_or_indirect : var _

  $default      reduce using rule 98 (var_or_indirect)


state 107

 100) var_or_indirect : var_system _

  $default      reduce using rule 100 (var_or_indirect)


state 108

 211) var_without_namespaces : WORD _
 212) var_without_namespaces : WORD _ var_method_modifiers
 236) ns : WORD _ COLON COLON

  DOT           shift, and go to state 148
  COLON         shift, and go to state 149
  $default      reduce using rule 211 (var_without_namespaces)

  var_method_modifiers  go to state 146
  var_method_modifier  go to state 147

state 109

 213) var_with_namespaces : namespaces _ var_without_namespaces
 235) namespaces : namespaces _ ns

  WORD          shift, and go to state 108

  var_without_namespaces  go to state 151
  ns            go to state 152

state 110

  57) timer_method : TIMER_METHOD var_or_indirect _

  $default      reduce using rule 57 (timer_method)


state 111

  58) fanuc_eval : EVAL STRING _

  $default      reduce using rule 58 (fanuc_eval)


state 112

  59) wait_statement : WAIT_FOR LPAREN _ indirectable COMMA STRING RPAREN

  REAL          shift, and go to state 119
  DIGIT         shift, and go to state 120
  WORD          shift, and go to state 108

  indirectable  go to state 209
  number        go to state 116
  var           go to state 117
  var_without_namespaces  go to state 85
  var_with_namespaces  go to state 86
  namespaces    go to state 109
  ns            go to state 88
  integer       go to state 118

state 113

  60) wait_statement : WAIT_UNTIL LPAREN _ expression RPAREN
  61) wait_statement : WAIT_UNTIL LPAREN _ expression RPAREN DOT wait_modifier
  62) wait_statement : WAIT_UNTIL LPAREN _ expression RPAREN DOT wait_modifier DOT wait_modifier

  REAL          shift, and go to state 119
  DIGIT         shift, and go to state 120
  WORD          shift, and go to state 108
  BANG          shift, and go to state 129
  MINUS         shift, and go to state 143
  INDIRECT      shift, and go to state 89
  TRUE_FALSE    shift, and go to state 139
  ON_OFF        shift, and go to state 140
  LPAREN        shift, and go to state 141
  SYSTEM        shift, and go to state 87
  ADDRESS       shift, and go to state 90
  OPERATION     shift, and go to state 144

  expression    go to state 210
  var_without_namespaces  go to state 85
  var_with_namespaces  go to state 86
  namespaces    go to state 109
  ns            go to state 88
  unary_expression  go to state 125
  binary_expression  go to state 126
  factor        go to state 127
  address       go to state 128
  number        go to state 130
  signed_number  go to state 131
  operation     go to state 132
  var           go to state 133
  signed_var    go to state 134
  var_system    go to state 135
  indirect_thing  go to state 136
  paren_expr    go to state 137
  booleans      go to state 138
  sign          go to state 142
  integer       go to state 118

state 114

  69) use_statement : FANUC_USE indirectable _

  $default      reduce using rule 69 (use_statement)


state 115

  70) use_statement : FANUC_USE LPAREN _ indirectable RPAREN
  71) use_statement : FANUC_USE LPAREN _ indirectable COMMA group_statement RPAREN

  REAL          shift, and go to state 119
  DIGIT         shift, and go to state 120
  WORD          shift, and go to state 108

  indirectable  go to state 211
  number        go to state 116
  var           go to state 117
  var_without_namespaces  go to state 85
  var_with_namespaces  go to state 86
  namespaces    go to state 109
  ns            go to state 88
  integer       go to state 118

state 116

 184) indirectable : number _

  $default      reduce using rule 184 (indirectable)


state 117

 185) indirectable : var _

  $default      reduce using rule 185 (indirectable)


state 118

 275) number : integer _

  $default      reduce using rule 275 (number)


state 119

 276) number : REAL _

  $default      reduce using rule 276 (number)


state 120

 277) integer : DIGIT _

  $default      reduce using rule 277 (integer)


state 121

  72) collguard_statement : COLL_GUARD optional_arg _

  $default      reduce using rule 72 (collguard_statement)


state 122

 186) optional_arg : number _

  $default      reduce using rule 186 (optional_arg)


state 123

 187) optional_arg : var _

  $default      reduce using rule 187 (optional_arg)


state 124

  73) set_skip_statement : SET_SKIP_CONDITION expression _
 242) binary_expression : expression _ operator expression

  EEQUAL        shift, and go to state 213
  NOTEQUAL      shift, and go to state 214
  GTE           shift, and go to state 217
  LTE           shift, and go to state 218
  LT            shift, and go to state 215
  GT            shift, and go to state 216
  PLUS          shift, and go to state 219
  MINUS         shift, and go to state 220
  STAR          shift, and go to state 222
  SLASH         shift, and go to state 223
  DIV           shift, and go to state 224
  AND           shift, and go to state 226
  OR            shift, and go to state 221
  MOD           shift, and go to state 225
  $default      reduce using rule 73 (set_skip_statement)

  operator      go to state 212

state 125

 237) expression : unary_expression _

  $default      reduce using rule 237 (expression)


state 126

 238) expression : binary_expression _

  $default      reduce using rule 238 (expression)


state 127

 239) unary_expression : factor _

  $default      reduce using rule 239 (unary_expression)


state 128

 240) unary_expression : address _

  $default      reduce using rule 240 (unary_expression)


state 129

 241) unary_expression : BANG _ factor

  REAL          shift, and go to state 119
  DIGIT         shift, and go to state 120
  WORD          shift, and go to state 108
  MINUS         shift, and go to state 143
  INDIRECT      shift, and go to state 89
  TRUE_FALSE    shift, and go to state 139
  ON_OFF        shift, and go to state 140
  LPAREN        shift, and go to state 141
  SYSTEM        shift, and go to state 87
  OPERATION     shift, and go to state 144

  var_without_namespaces  go to state 85
  var_with_namespaces  go to state 86
  namespaces    go to state 109
  ns            go to state 88
  factor        go to state 227
  number        go to state 130
  signed_number  go to state 131
  operation     go to state 132
  var           go to state 133
  signed_var    go to state 134
  var_system    go to state 135
  indirect_thing  go to state 136
  paren_expr    go to state 137
  booleans      go to state 138
  sign          go to state 142
  integer       go to state 118

state 130

 257) factor : number _

  $default      reduce using rule 257 (factor)


state 131

 258) factor : signed_number _

  $default      reduce using rule 258 (factor)


state 132

 259) factor : operation _

  $default      reduce using rule 259 (factor)


state 133

 260) factor : var _

  $default      reduce using rule 260 (factor)


state 134

 261) factor : signed_var _

  $default      reduce using rule 261 (factor)


state 135

 262) factor : var_system _

  $default      reduce using rule 262 (factor)


state 136

 263) factor : indirect_thing _

  $default      reduce using rule 263 (factor)


state 137

 264) factor : paren_expr _

  $default      reduce using rule 264 (factor)


state 138

 265) factor : booleans _

  $default      reduce using rule 265 (factor)


state 139

 266) booleans : TRUE_FALSE _

  $default      reduce using rule 266 (booleans)


state 140

 267) booleans : ON_OFF _

  $default      reduce using rule 267 (booleans)


state 141

 268) paren_expr : LPAREN _ expression RPAREN

  REAL          shift, and go to state 119
  DIGIT         shift, and go to state 120
  WORD          shift, and go to state 108
  BANG          shift, and go to state 129
  MINUS         shift, and go to state 143
  INDIRECT      shift, and go to state 89
  TRUE_FALSE    shift, and go to state 139
  ON_OFF        shift, and go to state 140
  LPAREN        shift, and go to state 141
  SYSTEM        shift, and go to state 87
  ADDRESS       shift, and go to state 90
  OPERATION     shift, and go to state 144

  var_without_namespaces  go to state 85
  var_with_namespaces  go to state 86
  namespaces    go to state 109
  ns            go to state 88
  unary_expression  go to state 125
  binary_expression  go to state 126
  factor        go to state 127
  address       go to state 128
  expression    go to state 228
  number        go to state 130
  signed_number  go to state 131
  operation     go to state 132
  var           go to state 133
  signed_var    go to state 134
  var_system    go to state 135
  indirect_thing  go to state 136
  paren_expr    go to state 137
  booleans      go to state 138
  sign          go to state 142
  integer       go to state 118

state 142

 271) signed_number : sign _ DIGIT
 272) signed_number : sign _ REAL
 273) signed_var : sign _ var

  REAL          shift, and go to state 230
  DIGIT         shift, and go to state 229
  WORD          shift, and go to state 108

  var_without_namespaces  go to state 85
  var_with_namespaces  go to state 86
  namespaces    go to state 109
  ns            go to state 88
  var           go to state 231

state 143

 274) sign : MINUS _

  $default      reduce using rule 274 (sign)


state 144

 300) operation : OPERATION _ LBRACK var_or_indirect RBRACK
 301) operation : OPERATION _ LBRACK var_or_indirect COMMA var_or_indirect RBRACK
 302) operation : OPERATION _ LBRACK signed_number RBRACK
 303) operation : OPERATION _ LBRACK number RBRACK

  LBRACK        shift, and go to state 232


state 145

 196) definition : WORD ASSIGN _ definable

  INPUT         shift, and go to state 250
  OUTPUT        shift, and go to state 251
  NUMREG        shift, and go to state 248
  POSREG        shift, and go to state 249
  VREG          shift, and go to state 246
  SREG          shift, and go to state 242
  ARG           shift, and go to state 245
  UALM          shift, and go to state 243
  TOOLREG       shift, and go to state 253
  FRAMEREG      shift, and go to state 254
  STRING        shift, and go to state 233
  REAL          shift, and go to state 119
  DIGIT         shift, and go to state 120
  MINUS         shift, and go to state 143
  POSITION      shift, and go to state 247
  TIMER         shift, and go to state 244
  TRUE_FALSE    shift, and go to state 139
  ON_OFF        shift, and go to state 140

  definable     go to state 234
  sign          go to state 235
  integer       go to state 118
  reg           go to state 236
  number        go to state 237
  signed_number  go to state 238
  string        go to state 239
  framereg      go to state 240
  booleans      go to state 241
  reg_types     go to state 252
  frametype     go to state 255

state 146

 212) var_without_namespaces : WORD var_method_modifiers _
 215) var_method_modifiers : var_method_modifiers _ var_method_modifier

  DOT           shift, and go to state 148
  $default      reduce using rule 212 (var_without_namespaces)

  var_method_modifier  go to state 256

state 147

 214) var_method_modifiers : var_method_modifier _

  $default      reduce using rule 214 (var_method_modifiers)


state 148

 222) var_method_modifier : DOT _ swallow_newlines WORD
 223) var_method_modifier : DOT _ swallow_newlines group_statement
 224) var_method_modifier : DOT _ swallow_newlines POSEATTR
 225) var_method_modifier : DOT _ swallow_newlines OFFSET
 226) var_method_modifier : DOT _ swallow_newlines coord_system
 227) var_method_modifier : DOT _ swallow_newlines FIX

  NEWLINE       shift, and go to state 195
  $default      reduce using rule 313 (swallow_newlines)

  swallow_newlines  go to state 257

state 149

 236) ns : WORD COLON _ COLON

  COLON         shift, and go to state 258


state 150

  75) function_call : namespaces WORD _
 211) var_without_namespaces : WORD _
 212) var_without_namespaces : WORD _ var_method_modifiers
 236) ns : WORD _ COLON COLON

  DOT           shift, and go to state 148
  COLON         shift, and go to state 149
  LPAREN        reduce using rule 75 (function_call)
  LPAREN        [reduce using rule 211 (var_without_namespaces)]
  $default      reduce using rule 211 (var_without_namespaces)

  var_method_modifiers  go to state 146
  var_method_modifier  go to state 147

state 151

 213) var_with_namespaces : namespaces var_without_namespaces _

  $default      reduce using rule 213 (var_with_namespaces)


state 152

 235) namespaces : namespaces ns _

  $default      reduce using rule 235 (namespaces)


state 153

  76) program_call : function_call LPAREN _ args RPAREN

  STRING        shift, and go to state 233
  REAL          shift, and go to state 119
  DIGIT         shift, and go to state 120
  WORD          shift, and go to state 108
  MINUS         shift, and go to state 143
  ADDRESS       shift, and go to state 90
  $default      reduce using rule 82 (args)

  args          go to state 259
  arg           go to state 260
  number        go to state 261
  signed_number  go to state 262
  var           go to state 263
  string        go to state 264
  address       go to state 265
  var_without_namespaces  go to state 85
  var_with_namespaces  go to state 86
  namespaces    go to state 109
  ns            go to state 88
  sign          go to state 235
  integer       go to state 118

state 154

  74) function_call : WORD _
 236) ns : WORD _ COLON COLON

  COLON         shift, and go to state 149
  $default      reduce using rule 74 (function_call)


state 155

  75) function_call : namespaces _ WORD
 235) namespaces : namespaces _ ns

  WORD          shift, and go to state 266

  ns            go to state 152

state 156

  77) program_call : RUN function_call _ LPAREN args RPAREN

  LPAREN        shift, and go to state 267


state 157

  78) program_call : CALL var _ LPAREN args RPAREN

  LPAREN        shift, and go to state 268


state 158

  79) program_call : var_or_indirect EQUAL _ function_call LPAREN args RPAREN
 197) assignment : var_or_indirect EQUAL _ expression

  REAL          shift, and go to state 119
  DIGIT         shift, and go to state 120
  WORD          shift, and go to state 269
  BANG          shift, and go to state 129
  MINUS         shift, and go to state 143
  INDIRECT      shift, and go to state 89
  TRUE_FALSE    shift, and go to state 139
  ON_OFF        shift, and go to state 140
  LPAREN        shift, and go to state 141
  SYSTEM        shift, and go to state 87
  ADDRESS       shift, and go to state 90
  OPERATION     shift, and go to state 144

  namespaces    go to state 54
  function_call  go to state 270
  expression    go to state 271
  var_without_namespaces  go to state 85
  var_with_namespaces  go to state 86
  ns            go to state 88
  unary_expression  go to state 125
  binary_expression  go to state 126
  factor        go to state 127
  address       go to state 128
  number        go to state 130
  signed_number  go to state 131
  operation     go to state 132
  var           go to state 133
  signed_var    go to state 134
  var_system    go to state 135
  indirect_thing  go to state 136
  paren_expr    go to state 137
  booleans      go to state 138
  sign          go to state 142
  integer       go to state 118

state 159

 198) assignment : var_or_indirect PLUS _ EQUAL expression

  EQUAL         shift, and go to state 272


state 160

 199) assignment : var_or_indirect MINUS _ EQUAL expression

  EQUAL         shift, and go to state 273


state 161

 200) assignment : var_or_indirect STAR _ EQUAL expression

  EQUAL         shift, and go to state 274


state 162

 201) assignment : var_or_indirect SLASH _ EQUAL expression

  EQUAL         shift, and go to state 275


state 163

 203) position_assignment : var_or_indirect ARROW _ array

  LBRACK        shift, and go to state 277

  array         go to state 276

state 164

  92) return_statement : RETURN LPAREN _ expression RPAREN

  REAL          shift, and go to state 119
  DIGIT         shift, and go to state 120
  WORD          shift, and go to state 108
  BANG          shift, and go to state 129
  MINUS         shift, and go to state 143
  INDIRECT      shift, and go to state 89
  TRUE_FALSE    shift, and go to state 139
  ON_OFF        shift, and go to state 140
  LPAREN        shift, and go to state 141
  SYSTEM        shift, and go to state 87
  ADDRESS       shift, and go to state 90
  OPERATION     shift, and go to state 144

  expression    go to state 278
  var_without_namespaces  go to state 85
  var_with_namespaces  go to state 86
  namespaces    go to state 109
  ns            go to state 88
  unary_expression  go to state 125
  binary_expression  go to state 126
  factor        go to state 127
  address       go to state 128
  number        go to state 130
  signed_number  go to state 131
  operation     go to state 132
  var           go to state 133
  signed_var    go to state 134
  var_system    go to state 135
  indirect_thing  go to state 136
  paren_expr    go to state 137
  booleans      go to state 138
  sign          go to state 142
  integer       go to state 118

state 165

  95) io_method : IO_METHOD var_or_indirect _

  $default      reduce using rule 95 (io_method)


state 166

  96) io_method : IO_METHOD LPAREN _ var_or_indirect RPAREN
  97) io_method : IO_METHOD LPAREN _ var_or_indirect COMMA number COMMA STRING RPAREN

  WORD          shift, and go to state 108
  INDIRECT      shift, and go to state 89
  SYSTEM        shift, and go to state 87

  var_or_indirect  go to state 279
  var           go to state 106
  indirect_thing  go to state 62
  var_system    go to state 107
  var_without_namespaces  go to state 85
  var_with_namespaces  go to state 86
  namespaces    go to state 109
  ns            go to state 88

state 167

 207) assignable_range : var RANGE _ var

  WORD          shift, and go to state 108

  var           go to state 280
  var_without_namespaces  go to state 85
  var_with_namespaces  go to state 86
  namespaces    go to state 109
  ns            go to state 88

state 168

 101) jump : JUMP label _

  $default      reduce using rule 101 (jump)


state 169

 102) conditional : IF expression _ block elsif_conditions else_block END
 104) conditional_block : IF expression _ THEN block elsif_block else_block END
 242) binary_expression : expression _ operator expression

  NEWLINE       shift, and go to state 281
  EEQUAL        shift, and go to state 213
  NOTEQUAL      shift, and go to state 214
  GTE           shift, and go to state 217
  LTE           shift, and go to state 218
  LT            shift, and go to state 215
  GT            shift, and go to state 216
  PLUS          shift, and go to state 219
  MINUS         shift, and go to state 220
  STAR          shift, and go to state 222
  SLASH         shift, and go to state 223
  DIV           shift, and go to state 224
  AND           shift, and go to state 226
  OR            shift, and go to state 221
  MOD           shift, and go to state 225
  THEN          shift, and go to state 283

  block         go to state 282
  operator      go to state 212

state 170

 103) conditional : UNLESS expression _ block else_block END
 242) binary_expression : expression _ operator expression

  NEWLINE       shift, and go to state 281
  EEQUAL        shift, and go to state 213
  NOTEQUAL      shift, and go to state 214
  GTE           shift, and go to state 217
  LTE           shift, and go to state 218
  LT            shift, and go to state 215
  GT            shift, and go to state 216
  PLUS          shift, and go to state 219
  MINUS         shift, and go to state 220
  STAR          shift, and go to state 222
  SLASH         shift, and go to state 223
  DIV           shift, and go to state 224
  AND           shift, and go to state 226
  OR            shift, and go to state 221
  MOD           shift, and go to state 225

  block         go to state 284
  operator      go to state 212

state 171

 113) forloop : FOR var _ IN LPAREN int_or_var TO int_or_var RPAREN block END
 114) forloop : FOR var _ IN LPAREN int_or_var DOWNTO int_or_var RPAREN block END

  IN            shift, and go to state 285


state 172

 115) while_loop : WHILE expression _ block END
 242) binary_expression : expression _ operator expression

  NEWLINE       shift, and go to state 281
  EEQUAL        shift, and go to state 213
  NOTEQUAL      shift, and go to state 214
  GTE           shift, and go to state 217
  LTE           shift, and go to state 218
  LT            shift, and go to state 215
  GT            shift, and go to state 216
  PLUS          shift, and go to state 219
  MINUS         shift, and go to state 220
  STAR          shift, and go to state 222
  SLASH         shift, and go to state 223
  DIV           shift, and go to state 224
  AND           shift, and go to state 226
  OR            shift, and go to state 221
  MOD           shift, and go to state 225

  block         go to state 286
  operator      go to state 212

state 173

 118) word_list : word_tuple _

  $default      reduce using rule 118 (word_list)


state 174

 119) word_list : word_list _ word_tuple
 122) using_statement : USING word_list _

  WORD          shift, and go to state 176
  WORD          [reduce using rule 122 (using_statement)]
  COMMA         shift, and go to state 175
  $default      reduce using rule 122 (using_statement)

  word_tuple    go to state 287

state 175

 120) word_tuple : COMMA _ WORD

  WORD          shift, and go to state 288


state 176

 121) word_tuple : WORD _

  $default      reduce using rule 121 (word_tuple)


state 177

 123) compile_statement : COMPILE IMPORT _ word_list

  WORD          shift, and go to state 176
  COMMA         shift, and go to state 175

  word_tuple    go to state 173
  word_list     go to state 289

state 178

 119) word_list : word_list _ word_tuple
 124) import_statement : IMPORT word_list _

  WORD          shift, and go to state 176
  WORD          [reduce using rule 124 (import_statement)]
  COMMA         shift, and go to state 175
  $default      reduce using rule 124 (import_statement)

  word_tuple    go to state 287

state 179

 125) namespace : NAMESPACE WORD _ block END

  NEWLINE       shift, and go to state 281

  block         go to state 290

state 180

 126) function : INLINE FUNCTION _ WORD LPAREN program_vars RPAREN block END
 127) function : INLINE FUNCTION _ WORD LPAREN program_vars RPAREN COLON WORD block END

  WORD          shift, and go to state 291


state 181

 128) function : FUNCTION WORD _ LPAREN program_vars RPAREN block END
 129) function : FUNCTION WORD _ LPAREN program_vars RPAREN COLON WORD block END

  LPAREN        shift, and go to state 292


state 182

 130) case_statement : CASE var _ swallow_newlines case_conditions case_else END

  NEWLINE       shift, and go to state 195
  $default      reduce using rule 313 (swallow_newlines)

  swallow_newlines  go to state 293

state 183

 141) inline_conditional : inlineable IF _ expression

  REAL          shift, and go to state 119
  DIGIT         shift, and go to state 120
  WORD          shift, and go to state 108
  BANG          shift, and go to state 129
  MINUS         shift, and go to state 143
  INDIRECT      shift, and go to state 89
  TRUE_FALSE    shift, and go to state 139
  ON_OFF        shift, and go to state 140
  LPAREN        shift, and go to state 141
  SYSTEM        shift, and go to state 87
  ADDRESS       shift, and go to state 90
  OPERATION     shift, and go to state 144

  expression    go to state 294
  var_without_namespaces  go to state 85
  var_with_namespaces  go to state 86
  namespaces    go to state 109
  ns            go to state 88
  unary_expression  go to state 125
  binary_expression  go to state 126
  factor        go to state 127
  address       go to state 128
  number        go to state 130
  signed_number  go to state 131
  operation     go to state 132
  var           go to state 133
  signed_var    go to state 134
  var_system    go to state 135
  indirect_thing  go to state 136
  paren_expr    go to state 137
  booleans      go to state 138
  sign          go to state 142
  integer       go to state 118

state 184

 142) inline_conditional : inlineable UNLESS _ expression

  REAL          shift, and go to state 119
  DIGIT         shift, and go to state 120
  WORD          shift, and go to state 108
  BANG          shift, and go to state 129
  MINUS         shift, and go to state 143
  INDIRECT      shift, and go to state 89
  TRUE_FALSE    shift, and go to state 139
  ON_OFF        shift, and go to state 140
  LPAREN        shift, and go to state 141
  SYSTEM        shift, and go to state 87
  ADDRESS       shift, and go to state 90
  OPERATION     shift, and go to state 144

  expression    go to state 295
  var_without_namespaces  go to state 85
  var_with_namespaces  go to state 86
  namespaces    go to state 109
  ns            go to state 88
  unary_expression  go to state 125
  binary_expression  go to state 126
  factor        go to state 127
  address       go to state 128
  number        go to state 130
  signed_number  go to state 131
  operation     go to state 132
  var           go to state 133
  signed_var    go to state 134
  var_system    go to state 135
  indirect_thing  go to state 136
  paren_expr    go to state 137
  booleans      go to state 138
  sign          go to state 142
  integer       go to state 118

state 185

 149) motion_statement : MOVE DOT _ swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers
 150) motion_statement : MOVE DOT _ swallow_newlines MID LPAREN var_or_indirect RPAREN DOT swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers

  NEWLINE       shift, and go to state 195
  $default      reduce using rule 313 (swallow_newlines)

  swallow_newlines  go to state 296

state 186

 202) position_assignment : DEFAULTPOS var_method_modifiers _ ARROW array
 215) var_method_modifiers : var_method_modifiers _ var_method_modifier

  DOT           shift, and go to state 148
  ARROW         shift, and go to state 297

  var_method_modifier  go to state 256

state 187

 204) position_assignment : LPAREN assignable_range _ RPAREN var_method_modifiers ARROW array

  RPAREN        shift, and go to state 298


state 188

 207) assignable_range : var _ RANGE var
 208) assignable_range : var _

  RANGE         shift, and go to state 167
  $default      reduce using rule 208 (assignable_range)


state 189

 205) position_assignment : assignable_range EQUAL _ assignable_range
 206) position_assignment : assignable_range EQUAL _ LPAREN assignable_range RPAREN pose_range_modifiers

  WORD          shift, and go to state 108
  LPAREN        shift, and go to state 300

  assignable_range  go to state 299
  var           go to state 188
  var_without_namespaces  go to state 85
  var_with_namespaces  go to state 86
  namespaces    go to state 109
  ns            go to state 88

state 190

 228) var_system : SYSTEM WORD _ var_system_modifers
 229) var_system : SYSTEM WORD _ LBRACK integer RBRACK var_system_modifers

  DOT           shift, and go to state 304
  DOT           [reduce using rule 232 (var_system_modifers)]
  LBRACK        shift, and go to state 302
  $default      reduce using rule 232 (var_system_modifers)

  var_system_modifers  go to state 301
  var_system_modifer  go to state 303

state 191

 269) indirect_thing : INDIRECT LPAREN _ STRING COMMA indirectable RPAREN
 270) indirect_thing : INDIRECT LPAREN _ STRING COMMA indirectable RPAREN var_method_modifiers

  STRING        shift, and go to state 305


state 192

 304) address : ADDRESS var _

  $default      reduce using rule 304 (address)


state 193

 306) message : MESSAGE LPAREN _ STRING RPAREN

  STRING        shift, and go to state 306


state 194

 307) warning : WARNING LPAREN _ STRING RPAREN

  STRING        shift, and go to state 307


state 195

 312) swallow_newlines : NEWLINE _

  $default      reduce using rule 312 (swallow_newlines)


state 196

 314) position_data : POSITION_DATA sn _ hash sn END

  LBRACE        shift, and go to state 309

  hash          go to state 308

state 197

 315) sn : swallow_newlines _

  $default      reduce using rule 315 (sn)


state 198


  $default      accept


state 199

   4) statements : statements statement terminator _

  $default      reduce using rule 4 (statements)


state 200

   6) optional_newline : NEWLINE _

  $default      reduce using rule 6 (optional_newline)


state 201

 309) terminator : comment optional_newline _

  $default      reduce using rule 309 (terminator)


state 202

  43) lpos_or_jpos : LPOS LPAREN var_or_indirect _ RPAREN

  RPAREN        shift, and go to state 310


state 203

  44) lpos_or_jpos : JPOS LPAREN var_or_indirect _ RPAREN

  RPAREN        shift, and go to state 311


state 204

  46) tp_header_definition : TP_HEADER EQUAL tp_header_value _

  $default      reduce using rule 46 (tp_header_definition)


state 205

  47) tp_header_value : STRING _

  $default      reduce using rule 47 (tp_header_value)


state 206

  48) tp_header_value : TRUE_FALSE _

  $default      reduce using rule 48 (tp_header_value)


state 207

  49) tp_header_value : ON_OFF _

  $default      reduce using rule 49 (tp_header_value)


state 208

  55) tp_application_definition : TP_APPLICATION_TYPE EQUAL sn _ tp_tool_methods

  LBRACE        shift, and go to state 312

  tp_tool_methods  go to state 313

state 209

  59) wait_statement : WAIT_FOR LPAREN indirectable _ COMMA STRING RPAREN

  COMMA         shift, and go to state 314


state 210

  60) wait_statement : WAIT_UNTIL LPAREN expression _ RPAREN
  61) wait_statement : WAIT_UNTIL LPAREN expression _ RPAREN DOT wait_modifier
  62) wait_statement : WAIT_UNTIL LPAREN expression _ RPAREN DOT wait_modifier DOT wait_modifier
 242) binary_expression : expression _ operator expression

  EEQUAL        shift, and go to state 213
  NOTEQUAL      shift, and go to state 214
  GTE           shift, and go to state 217
  LTE           shift, and go to state 218
  LT            shift, and go to state 215
  GT            shift, and go to state 216
  PLUS          shift, and go to state 219
  MINUS         shift, and go to state 220
  STAR          shift, and go to state 222
  SLASH         shift, and go to state 223
  DIV           shift, and go to state 224
  AND           shift, and go to state 226
  OR            shift, and go to state 221
  MOD           shift, and go to state 225
  RPAREN        shift, and go to state 315

  operator      go to state 212

state 211

  70) use_statement : FANUC_USE LPAREN indirectable _ RPAREN
  71) use_statement : FANUC_USE LPAREN indirectable _ COMMA group_statement RPAREN

  RPAREN        shift, and go to state 316
  COMMA         shift, and go to state 317


state 212

 242) binary_expression : expression operator _ expression

  REAL          shift, and go to state 119
  DIGIT         shift, and go to state 120
  WORD          shift, and go to state 108
  BANG          shift, and go to state 129
  MINUS         shift, and go to state 143
  INDIRECT      shift, and go to state 89
  TRUE_FALSE    shift, and go to state 139
  ON_OFF        shift, and go to state 140
  LPAREN        shift, and go to state 141
  SYSTEM        shift, and go to state 87
  ADDRESS       shift, and go to state 90
  OPERATION     shift, and go to state 144

  var_without_namespaces  go to state 85
  var_with_namespaces  go to state 86
  namespaces    go to state 109
  ns            go to state 88
  unary_expression  go to state 125
  binary_expression  go to state 126
  factor        go to state 127
  address       go to state 128
  expression    go to state 318
  number        go to state 130
  signed_number  go to state 131
  operation     go to state 132
  var           go to state 133
  signed_var    go to state 134
  var_system    go to state 135
  indirect_thing  go to state 136
  paren_expr    go to state 137
  booleans      go to state 138
  sign          go to state 142
  integer       go to state 118

state 213

 243) operator : EEQUAL _

  $default      reduce using rule 243 (operator)


state 214

 244) operator : NOTEQUAL _

  $default      reduce using rule 244 (operator)


state 215

 245) operator : LT _

  $default      reduce using rule 245 (operator)


state 216

 246) operator : GT _

  $default      reduce using rule 246 (operator)


state 217

 247) operator : GTE _

  $default      reduce using rule 247 (operator)


state 218

 248) operator : LTE _

  $default      reduce using rule 248 (operator)


state 219

 249) operator : PLUS _

  $default      reduce using rule 249 (operator)


state 220

 250) operator : MINUS _

  $default      reduce using rule 250 (operator)


state 221

 251) operator : OR _

  $default      reduce using rule 251 (operator)


state 222

 252) operator : STAR _

  $default      reduce using rule 252 (operator)


state 223

 253) operator : SLASH _

  $default      reduce using rule 253 (operator)


state 224

 254) operator : DIV _

  $default      reduce using rule 254 (operator)


state 225

 255) operator : MOD _

  $default      reduce using rule 255 (operator)


state 226

 256) operator : AND _

  $default      reduce using rule 256 (operator)


state 227

 241) unary_expression : BANG factor _

  $default      reduce using rule 241 (unary_expression)


state 228

 242) binary_expression : expression _ operator expression
 268) paren_expr : LPAREN expression _ RPAREN

  EEQUAL        shift, and go to state 213
  NOTEQUAL      shift, and go to state 214
  GTE           shift, and go to state 217
  LTE           shift, and go to state 218
  LT            shift, and go to state 215
  GT            shift, and go to state 216
  PLUS          shift, and go to state 219
  MINUS         shift, and go to state 220
  STAR          shift, and go to state 222
  SLASH         shift, and go to state 223
  DIV           shift, and go to state 224
  AND           shift, and go to state 226
  OR            shift, and go to state 221
  MOD           shift, and go to state 225
  RPAREN        shift, and go to state 319

  operator      go to state 212

state 229

 271) signed_number : sign DIGIT _

  $default      reduce using rule 271 (signed_number)


state 230

 272) signed_number : sign REAL _

  $default      reduce using rule 272 (signed_number)


state 231

 273) signed_var : sign var _

  $default      reduce using rule 273 (signed_var)


state 232

 300) operation : OPERATION LBRACK _ var_or_indirect RBRACK
 301) operation : OPERATION LBRACK _ var_or_indirect COMMA var_or_indirect RBRACK
 302) operation : OPERATION LBRACK _ signed_number RBRACK
 303) operation : OPERATION LBRACK _ number RBRACK

  REAL          shift, and go to state 119
  DIGIT         shift, and go to state 120
  WORD          shift, and go to state 108
  MINUS         shift, and go to state 143
  INDIRECT      shift, and go to state 89
  SYSTEM        shift, and go to state 87

  var           go to state 106
  indirect_thing  go to state 62
  var_system    go to state 107
  var_without_namespaces  go to state 85
  var_with_namespaces  go to state 86
  namespaces    go to state 109
  ns            go to state 88
  sign          go to state 235
  integer       go to state 118
  var_or_indirect  go to state 320
  signed_number  go to state 321
  number        go to state 322

state 233

  94) string : STRING _

  $default      reduce using rule 94 (string)


state 234

 196) definition : WORD ASSIGN definable _

  $default      reduce using rule 196 (definition)


state 235

 271) signed_number : sign _ DIGIT
 272) signed_number : sign _ REAL

  REAL          shift, and go to state 230
  DIGIT         shift, and go to state 229


state 236

 278) definable : reg _

  $default      reduce using rule 278 (definable)


state 237

 279) definable : number _

  $default      reduce using rule 279 (definable)


state 238

 280) definable : signed_number _

  $default      reduce using rule 280 (definable)


state 239

 281) definable : string _

  $default      reduce using rule 281 (definable)


state 240

 282) definable : framereg _

  $default      reduce using rule 282 (definable)


state 241

 283) definable : booleans _

  $default      reduce using rule 283 (definable)


state 242

 286) reg_types : SREG _

  $default      reduce using rule 286 (reg_types)


state 243

 287) reg_types : UALM _

  $default      reduce using rule 287 (reg_types)


state 244

 288) reg_types : TIMER _

  $default      reduce using rule 288 (reg_types)


state 245

 289) reg_types : ARG _

  $default      reduce using rule 289 (reg_types)


state 246

 290) reg_types : VREG _

  $default      reduce using rule 290 (reg_types)


state 247

 291) reg_types : POSITION _

  $default      reduce using rule 291 (reg_types)


state 248

 292) reg_types : NUMREG _

  $default      reduce using rule 292 (reg_types)


state 249

 293) reg_types : POSREG _

  $default      reduce using rule 293 (reg_types)


state 250

 294) reg_types : INPUT _

  $default      reduce using rule 294 (reg_types)


state 251

 295) reg_types : OUTPUT _

  $default      reduce using rule 295 (reg_types)


state 252

 296) reg : reg_types _ LBRACK definable_range RBRACK

  LBRACK        shift, and go to state 323


state 253

 297) frametype : TOOLREG _

  $default      reduce using rule 297 (frametype)


state 254

 298) frametype : FRAMEREG _

  $default      reduce using rule 298 (frametype)


state 255

 299) framereg : frametype _ LBRACK DIGIT RBRACK

  LBRACK        shift, and go to state 324


state 256

 215) var_method_modifiers : var_method_modifiers var_method_modifier _

  $default      reduce using rule 215 (var_method_modifiers)


state 257

 222) var_method_modifier : DOT swallow_newlines _ WORD
 223) var_method_modifier : DOT swallow_newlines _ group_statement
 224) var_method_modifier : DOT swallow_newlines _ POSEATTR
 225) var_method_modifier : DOT swallow_newlines _ OFFSET
 226) var_method_modifier : DOT swallow_newlines _ coord_system
 227) var_method_modifier : DOT swallow_newlines _ FIX

  OFFSET        shift, and go to state 332
  GROUP         shift, and go to state 325
  WORD          shift, and go to state 329
  POSEATTR      shift, and go to state 331
  SPHERE        shift, and go to state 326
  POLAR         shift, and go to state 327
  ORIGIN        shift, and go to state 328
  FIX           shift, and go to state 334

  group_statement  go to state 330
  coord_system  go to state 333

state 258

 236) ns : WORD COLON COLON _

  $default      reduce using rule 236 (ns)


state 259

  76) program_call : function_call LPAREN args _ RPAREN
  81) args : args _ COMMA arg

  RPAREN        shift, and go to state 335
  COMMA         shift, and go to state 336


state 260

  80) args : arg _

  $default      reduce using rule 80 (args)


state 261

  83) arg : number _

  $default      reduce using rule 83 (arg)


state 262

  84) arg : signed_number _

  $default      reduce using rule 84 (arg)


state 263

  85) arg : var _

  $default      reduce using rule 85 (arg)


state 264

  86) arg : string _

  $default      reduce using rule 86 (arg)


state 265

  87) arg : address _

  $default      reduce using rule 87 (arg)


state 266

  75) function_call : namespaces WORD _
 236) ns : WORD _ COLON COLON

  COLON         shift, and go to state 149
  $default      reduce using rule 75 (function_call)


state 267

  77) program_call : RUN function_call LPAREN _ args RPAREN

  STRING        shift, and go to state 233
  REAL          shift, and go to state 119
  DIGIT         shift, and go to state 120
  WORD          shift, and go to state 108
  MINUS         shift, and go to state 143
  ADDRESS       shift, and go to state 90
  $default      reduce using rule 82 (args)

  args          go to state 337
  arg           go to state 260
  number        go to state 261
  signed_number  go to state 262
  var           go to state 263
  string        go to state 264
  address       go to state 265
  var_without_namespaces  go to state 85
  var_with_namespaces  go to state 86
  namespaces    go to state 109
  ns            go to state 88
  sign          go to state 235
  integer       go to state 118

state 268

  78) program_call : CALL var LPAREN _ args RPAREN

  STRING        shift, and go to state 233
  REAL          shift, and go to state 119
  DIGIT         shift, and go to state 120
  WORD          shift, and go to state 108
  MINUS         shift, and go to state 143
  ADDRESS       shift, and go to state 90
  $default      reduce using rule 82 (args)

  args          go to state 338
  arg           go to state 260
  number        go to state 261
  signed_number  go to state 262
  var           go to state 263
  string        go to state 264
  address       go to state 265
  var_without_namespaces  go to state 85
  var_with_namespaces  go to state 86
  namespaces    go to state 109
  ns            go to state 88
  sign          go to state 235
  integer       go to state 118

state 269

  74) function_call : WORD _
 211) var_without_namespaces : WORD _
 212) var_without_namespaces : WORD _ var_method_modifiers
 236) ns : WORD _ COLON COLON

  DOT           shift, and go to state 148
  COLON         shift, and go to state 149
  LPAREN        reduce using rule 74 (function_call)
  LPAREN        [reduce using rule 211 (var_without_namespaces)]
  $default      reduce using rule 211 (var_without_namespaces)

  var_method_modifiers  go to state 146
  var_method_modifier  go to state 147

state 270

  79) program_call : var_or_indirect EQUAL function_call _ LPAREN args RPAREN

  LPAREN        shift, and go to state 339


state 271

 197) assignment : var_or_indirect EQUAL expression _
 242) binary_expression : expression _ operator expression

  EEQUAL        shift, and go to state 213
  NOTEQUAL      shift, and go to state 214
  GTE           shift, and go to state 217
  LTE           shift, and go to state 218
  LT            shift, and go to state 215
  GT            shift, and go to state 216
  PLUS          shift, and go to state 219
  MINUS         shift, and go to state 220
  STAR          shift, and go to state 222
  SLASH         shift, and go to state 223
  DIV           shift, and go to state 224
  AND           shift, and go to state 226
  OR            shift, and go to state 221
  MOD           shift, and go to state 225
  $default      reduce using rule 197 (assignment)

  operator      go to state 212

state 272

 198) assignment : var_or_indirect PLUS EQUAL _ expression

  REAL          shift, and go to state 119
  DIGIT         shift, and go to state 120
  WORD          shift, and go to state 108
  BANG          shift, and go to state 129
  MINUS         shift, and go to state 143
  INDIRECT      shift, and go to state 89
  TRUE_FALSE    shift, and go to state 139
  ON_OFF        shift, and go to state 140
  LPAREN        shift, and go to state 141
  SYSTEM        shift, and go to state 87
  ADDRESS       shift, and go to state 90
  OPERATION     shift, and go to state 144

  expression    go to state 340
  var_without_namespaces  go to state 85
  var_with_namespaces  go to state 86
  namespaces    go to state 109
  ns            go to state 88
  unary_expression  go to state 125
  binary_expression  go to state 126
  factor        go to state 127
  address       go to state 128
  number        go to state 130
  signed_number  go to state 131
  operation     go to state 132
  var           go to state 133
  signed_var    go to state 134
  var_system    go to state 135
  indirect_thing  go to state 136
  paren_expr    go to state 137
  booleans      go to state 138
  sign          go to state 142
  integer       go to state 118

state 273

 199) assignment : var_or_indirect MINUS EQUAL _ expression

  REAL          shift, and go to state 119
  DIGIT         shift, and go to state 120
  WORD          shift, and go to state 108
  BANG          shift, and go to state 129
  MINUS         shift, and go to state 143
  INDIRECT      shift, and go to state 89
  TRUE_FALSE    shift, and go to state 139
  ON_OFF        shift, and go to state 140
  LPAREN        shift, and go to state 141
  SYSTEM        shift, and go to state 87
  ADDRESS       shift, and go to state 90
  OPERATION     shift, and go to state 144

  expression    go to state 341
  var_without_namespaces  go to state 85
  var_with_namespaces  go to state 86
  namespaces    go to state 109
  ns            go to state 88
  unary_expression  go to state 125
  binary_expression  go to state 126
  factor        go to state 127
  address       go to state 128
  number        go to state 130
  signed_number  go to state 131
  operation     go to state 132
  var           go to state 133
  signed_var    go to state 134
  var_system    go to state 135
  indirect_thing  go to state 136
  paren_expr    go to state 137
  booleans      go to state 138
  sign          go to state 142
  integer       go to state 118

state 274

 200) assignment : var_or_indirect STAR EQUAL _ expression

  REAL          shift, and go to state 119
  DIGIT         shift, and go to state 120
  WORD          shift, and go to state 108
  BANG          shift, and go to state 129
  MINUS         shift, and go to state 143
  INDIRECT      shift, and go to state 89
  TRUE_FALSE    shift, and go to state 139
  ON_OFF        shift, and go to state 140
  LPAREN        shift, and go to state 141
  SYSTEM        shift, and go to state 87
  ADDRESS       shift, and go to state 90
  OPERATION     shift, and go to state 144

  expression    go to state 342
  var_without_namespaces  go to state 85
  var_with_namespaces  go to state 86
  namespaces    go to state 109
  ns            go to state 88
  unary_expression  go to state 125
  binary_expression  go to state 126
  factor        go to state 127
  address       go to state 128
  number        go to state 130
  signed_number  go to state 131
  operation     go to state 132
  var           go to state 133
  signed_var    go to state 134
  var_system    go to state 135
  indirect_thing  go to state 136
  paren_expr    go to state 137
  booleans      go to state 138
  sign          go to state 142
  integer       go to state 118

state 275

 201) assignment : var_or_indirect SLASH EQUAL _ expression

  REAL          shift, and go to state 119
  DIGIT         shift, and go to state 120
  WORD          shift, and go to state 108
  BANG          shift, and go to state 129
  MINUS         shift, and go to state 143
  INDIRECT      shift, and go to state 89
  TRUE_FALSE    shift, and go to state 139
  ON_OFF        shift, and go to state 140
  LPAREN        shift, and go to state 141
  SYSTEM        shift, and go to state 87
  ADDRESS       shift, and go to state 90
  OPERATION     shift, and go to state 144

  expression    go to state 343
  var_without_namespaces  go to state 85
  var_with_namespaces  go to state 86
  namespaces    go to state 109
  ns            go to state 88
  unary_expression  go to state 125
  binary_expression  go to state 126
  factor        go to state 127
  address       go to state 128
  number        go to state 130
  signed_number  go to state 131
  operation     go to state 132
  var           go to state 133
  signed_var    go to state 134
  var_system    go to state 135
  indirect_thing  go to state 136
  paren_expr    go to state 137
  booleans      go to state 138
  sign          go to state 142
  integer       go to state 118

state 276

 203) position_assignment : var_or_indirect ARROW array _

  $default      reduce using rule 203 (position_assignment)


state 277

 330) array : LBRACK _ sn array_values sn RBRACK

  NEWLINE       shift, and go to state 195
  $default      reduce using rule 313 (swallow_newlines)

  swallow_newlines  go to state 197
  sn            go to state 344

state 278

  92) return_statement : RETURN LPAREN expression _ RPAREN
 242) binary_expression : expression _ operator expression

  EEQUAL        shift, and go to state 213
  NOTEQUAL      shift, and go to state 214
  GTE           shift, and go to state 217
  LTE           shift, and go to state 218
  LT            shift, and go to state 215
  GT            shift, and go to state 216
  PLUS          shift, and go to state 219
  MINUS         shift, and go to state 220
  STAR          shift, and go to state 222
  SLASH         shift, and go to state 223
  DIV           shift, and go to state 224
  AND           shift, and go to state 226
  OR            shift, and go to state 221
  MOD           shift, and go to state 225
  RPAREN        shift, and go to state 345

  operator      go to state 212

state 279

  96) io_method : IO_METHOD LPAREN var_or_indirect _ RPAREN
  97) io_method : IO_METHOD LPAREN var_or_indirect _ COMMA number COMMA STRING RPAREN

  RPAREN        shift, and go to state 346
  COMMA         shift, and go to state 347


state 280

 207) assignable_range : var RANGE var _

  $default      reduce using rule 207 (assignable_range)


state 281

   5) block : NEWLINE _ statements

  COMMENT       shift, and go to state 91
  MESSAGE       shift, and go to state 92
  WARNING       shift, and go to state 93
  JUMP          shift, and go to state 63
  IO_METHOD     shift, and go to state 60
  MOVE          shift, and go to state 80
  NEWLINE       shift, and go to state 41
  WORD          shift, and go to state 53
  IF            shift, and go to state 64
  UNLESS        shift, and go to state 65
  FOR           shift, and go to state 66
  WHILE         shift, and go to state 67
  WAIT_FOR      shift, and go to state 47
  WAIT_UNTIL    shift, and go to state 48
  FANUC_USE     shift, and go to state 50
  COLL_GUARD    shift, and go to state 51
  SET_SKIP_CONDITION  shift, and go to state 52
  NAMESPACE     shift, and go to state 71
  CASE          shift, and go to state 74
  INDIRECT      shift, and go to state 89
  EVAL          shift, and go to state 46
  TIMER_METHOD  shift, and go to state 45
  RAISE         shift, and go to state 44
  ABORT         shift, and go to state 31
  RETURN        shift, and go to state 59
  POSITION_DATA  shift, and go to state 94
  CALL          shift, and go to state 57
  RUN           shift, and go to state 56
  PAUSE         shift, and go to state 30
  TP_HEADER     shift, and go to state 42
  TP_APPLICATION_TYPE  shift, and go to state 43
  LPAREN        shift, and go to state 83
  LABEL         shift, and go to state 49
  SYSTEM        shift, and go to state 87
  ADDRESS       shift, and go to state 90
  LPOS          shift, and go to state 39
  JPOS          shift, and go to state 40
  FUNCTION      shift, and go to state 73
  USING         shift, and go to state 68
  IMPORT        shift, and go to state 70
  COMPILE       shift, and go to state 69
  INLINE        shift, and go to state 72
  DEFAULTPOS    shift, and go to state 82

  statement     go to state 3
  statements    go to state 348
  comment       go to state 4
  message       go to state 5
  definition    go to state 6
  namespace     go to state 7
  motion_statement  go to state 8
  position_assignment  go to state 9
  label_definition  go to state 10
  address       go to state 11
  conditional   go to state 12
  inline_conditional  go to state 13
  conditional_block  go to state 14
  forloop       go to state 15
  while_loop    go to state 16
  use_statement  go to state 17
  set_skip_statement  go to state 18
  wait_statement  go to state 19
  case_statement  go to state 20
  fanuc_eval    go to state 21
  timer_method  go to state 22
  position_data  go to state 23
  raise         go to state 24
  tp_header_definition  go to state 25
  lpos_or_jpos  go to state 26
  empty_stmt    go to state 27
  warning       go to state 28
  var_system    go to state 29
  return_statement  go to state 32
  collguard_statement  go to state 33
  function      go to state 34
  tp_application_definition  go to state 35
  using_statement  go to state 36
  import_statement  go to state 37
  compile_statement  go to state 38
  namespaces    go to state 54
  function_call  go to state 55
  var_or_indirect  go to state 58
  var           go to state 61
  indirect_thing  go to state 62
  inlineable    go to state 75
  jump          go to state 76
  assignment    go to state 77
  io_method     go to state 78
  program_call  go to state 79
  label         go to state 81
  assignable_range  go to state 84
  var_without_namespaces  go to state 85
  var_with_namespaces  go to state 86
  ns            go to state 88

state 282

 102) conditional : IF expression block _ elsif_conditions else_block END

  ELSIF         shift, and go to state 351
  ELSIF         [reduce using rule 107 (elsif_conditions)]
  $default      reduce using rule 107 (elsif_conditions)

  elsif_conditions  go to state 349
  elsif_condition  go to state 350

state 283

 104) conditional_block : IF expression THEN _ block elsif_block else_block END

  NEWLINE       shift, and go to state 281

  block         go to state 352

state 284

 103) conditional : UNLESS expression block _ else_block END

  ELSE          shift, and go to state 354
  $default      reduce using rule 148 (else_block)

  else_block    go to state 353

state 285

 113) forloop : FOR var IN _ LPAREN int_or_var TO int_or_var RPAREN block END
 114) forloop : FOR var IN _ LPAREN int_or_var DOWNTO int_or_var RPAREN block END

  LPAREN        shift, and go to state 355


state 286

 115) while_loop : WHILE expression block _ END

  END           shift, and go to state 356


state 287

 119) word_list : word_list word_tuple _

  $default      reduce using rule 119 (word_list)


state 288

 120) word_tuple : COMMA WORD _

  $default      reduce using rule 120 (word_tuple)


state 289

 119) word_list : word_list _ word_tuple
 123) compile_statement : COMPILE IMPORT word_list _

  WORD          shift, and go to state 176
  WORD          [reduce using rule 123 (compile_statement)]
  COMMA         shift, and go to state 175
  $default      reduce using rule 123 (compile_statement)

  word_tuple    go to state 287

state 290

 125) namespace : NAMESPACE WORD block _ END

  END           shift, and go to state 357


state 291

 126) function : INLINE FUNCTION WORD _ LPAREN program_vars RPAREN block END
 127) function : INLINE FUNCTION WORD _ LPAREN program_vars RPAREN COLON WORD block END

  LPAREN        shift, and go to state 358


state 292

 128) function : FUNCTION WORD LPAREN _ program_vars RPAREN block END
 129) function : FUNCTION WORD LPAREN _ program_vars RPAREN COLON WORD block END

  WORD          shift, and go to state 361
  $default      reduce using rule 90 (program_vars)

  program_var   go to state 359
  program_vars  go to state 360

state 293

 130) case_statement : CASE var swallow_newlines _ case_conditions case_else END

  WHEN          shift, and go to state 364

  case_conditions  go to state 362
  case_condition  go to state 363

state 294

 141) inline_conditional : inlineable IF expression _
 242) binary_expression : expression _ operator expression

  EEQUAL        shift, and go to state 213
  NOTEQUAL      shift, and go to state 214
  GTE           shift, and go to state 217
  LTE           shift, and go to state 218
  LT            shift, and go to state 215
  GT            shift, and go to state 216
  PLUS          shift, and go to state 219
  MINUS         shift, and go to state 220
  STAR          shift, and go to state 222
  SLASH         shift, and go to state 223
  DIV           shift, and go to state 224
  AND           shift, and go to state 226
  OR            shift, and go to state 221
  MOD           shift, and go to state 225
  $default      reduce using rule 141 (inline_conditional)

  operator      go to state 212

state 295

 142) inline_conditional : inlineable UNLESS expression _
 242) binary_expression : expression _ operator expression

  EEQUAL        shift, and go to state 213
  NOTEQUAL      shift, and go to state 214
  GTE           shift, and go to state 217
  LTE           shift, and go to state 218
  LT            shift, and go to state 215
  GT            shift, and go to state 216
  PLUS          shift, and go to state 219
  MINUS         shift, and go to state 220
  STAR          shift, and go to state 222
  SLASH         shift, and go to state 223
  DIV           shift, and go to state 224
  AND           shift, and go to state 226
  OR            shift, and go to state 221
  MOD           shift, and go to state 225
  $default      reduce using rule 142 (inline_conditional)

  operator      go to state 212

state 296

 149) motion_statement : MOVE DOT swallow_newlines _ TO LPAREN var_or_indirect RPAREN motion_modifiers
 150) motion_statement : MOVE DOT swallow_newlines _ MID LPAREN var_or_indirect RPAREN DOT swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers

  TO            shift, and go to state 365
  MID           shift, and go to state 366


state 297

 202) position_assignment : DEFAULTPOS var_method_modifiers ARROW _ array

  LBRACK        shift, and go to state 277

  array         go to state 367

state 298

 204) position_assignment : LPAREN assignable_range RPAREN _ var_method_modifiers ARROW array

  DOT           shift, and go to state 148

  var_method_modifiers  go to state 368
  var_method_modifier  go to state 147

state 299

 205) position_assignment : assignable_range EQUAL assignable_range _

  $default      reduce using rule 205 (position_assignment)


state 300

 206) position_assignment : assignable_range EQUAL LPAREN _ assignable_range RPAREN pose_range_modifiers

  WORD          shift, and go to state 108

  assignable_range  go to state 369
  var           go to state 188
  var_without_namespaces  go to state 85
  var_with_namespaces  go to state 86
  namespaces    go to state 109
  ns            go to state 88

state 301

 228) var_system : SYSTEM WORD var_system_modifers _
 231) var_system_modifers : var_system_modifers _ var_system_modifer

  DOT           shift, and go to state 304
  DOT           [reduce using rule 228 (var_system)]
  $default      reduce using rule 228 (var_system)

  var_system_modifer  go to state 370

state 302

 229) var_system : SYSTEM WORD LBRACK _ integer RBRACK var_system_modifers

  DIGIT         shift, and go to state 120

  integer       go to state 371

state 303

 230) var_system_modifers : var_system_modifer _

  $default      reduce using rule 230 (var_system_modifers)


state 304

 233) var_system_modifer : DOT _ var_system

  SYSTEM        shift, and go to state 87

  var_system    go to state 372

state 305

 269) indirect_thing : INDIRECT LPAREN STRING _ COMMA indirectable RPAREN
 270) indirect_thing : INDIRECT LPAREN STRING _ COMMA indirectable RPAREN var_method_modifiers

  COMMA         shift, and go to state 373


state 306

 306) message : MESSAGE LPAREN STRING _ RPAREN

  RPAREN        shift, and go to state 374


state 307

 307) warning : WARNING LPAREN STRING _ RPAREN

  RPAREN        shift, and go to state 375


state 308

 314) position_data : POSITION_DATA sn hash _ sn END

  NEWLINE       shift, and go to state 195
  $default      reduce using rule 313 (swallow_newlines)

  sn            go to state 376
  swallow_newlines  go to state 197

state 309

 316) hash : LBRACE _ sn hash_attributes sn RBRACE
 317) hash : LBRACE _ sn RBRACE

  NEWLINE       shift, and go to state 195
  $default      reduce using rule 313 (swallow_newlines)

  swallow_newlines  go to state 197
  sn            go to state 377

state 310

  43) lpos_or_jpos : LPOS LPAREN var_or_indirect RPAREN _

  $default      reduce using rule 43 (lpos_or_jpos)


state 311

  44) lpos_or_jpos : JPOS LPAREN var_or_indirect RPAREN _

  $default      reduce using rule 44 (lpos_or_jpos)


state 312

  50) tp_tool_methods : LBRACE _ sn tp_tool_attributes sn RBRACE
  51) tp_tool_methods : LBRACE _ sn RBRACE

  NEWLINE       shift, and go to state 195
  $default      reduce using rule 313 (swallow_newlines)

  sn            go to state 378
  swallow_newlines  go to state 197

state 313

  55) tp_application_definition : TP_APPLICATION_TYPE EQUAL sn tp_tool_methods _

  $default      reduce using rule 55 (tp_application_definition)


state 314

  59) wait_statement : WAIT_FOR LPAREN indirectable COMMA _ STRING RPAREN

  STRING        shift, and go to state 379


state 315

  60) wait_statement : WAIT_UNTIL LPAREN expression RPAREN _
  61) wait_statement : WAIT_UNTIL LPAREN expression RPAREN _ DOT wait_modifier
  62) wait_statement : WAIT_UNTIL LPAREN expression RPAREN _ DOT wait_modifier DOT wait_modifier

  DOT           shift, and go to state 380
  $default      reduce using rule 60 (wait_statement)


state 316

  70) use_statement : FANUC_USE LPAREN indirectable RPAREN _

  $default      reduce using rule 70 (use_statement)


state 317

  71) use_statement : FANUC_USE LPAREN indirectable COMMA _ group_statement RPAREN

  GROUP         shift, and go to state 325

  group_statement  go to state 381

state 318

 242) binary_expression : expression _ operator expression
 242) binary_expression : expression operator expression _

  EEQUAL        shift, and go to state 213
  EEQUAL        [reduce using rule 242 (binary_expression)]
  NOTEQUAL      shift, and go to state 214
  NOTEQUAL      [reduce using rule 242 (binary_expression)]
  GTE           shift, and go to state 217
  GTE           [reduce using rule 242 (binary_expression)]
  LTE           shift, and go to state 218
  LTE           [reduce using rule 242 (binary_expression)]
  LT            shift, and go to state 215
  LT            [reduce using rule 242 (binary_expression)]
  GT            shift, and go to state 216
  GT            [reduce using rule 242 (binary_expression)]
  PLUS          shift, and go to state 219
  PLUS          [reduce using rule 242 (binary_expression)]
  MINUS         shift, and go to state 220
  MINUS         [reduce using rule 242 (binary_expression)]
  STAR          shift, and go to state 222
  STAR          [reduce using rule 242 (binary_expression)]
  SLASH         shift, and go to state 223
  SLASH         [reduce using rule 242 (binary_expression)]
  DIV           shift, and go to state 224
  DIV           [reduce using rule 242 (binary_expression)]
  AND           shift, and go to state 226
  AND           [reduce using rule 242 (binary_expression)]
  OR            shift, and go to state 221
  OR            [reduce using rule 242 (binary_expression)]
  MOD           shift, and go to state 225
  MOD           [reduce using rule 242 (binary_expression)]
  $default      reduce using rule 242 (binary_expression)

  operator      go to state 212

state 319

 268) paren_expr : LPAREN expression RPAREN _

  $default      reduce using rule 268 (paren_expr)


state 320

 300) operation : OPERATION LBRACK var_or_indirect _ RBRACK
 301) operation : OPERATION LBRACK var_or_indirect _ COMMA var_or_indirect RBRACK

  COMMA         shift, and go to state 383
  RBRACK        shift, and go to state 382


state 321

 302) operation : OPERATION LBRACK signed_number _ RBRACK

  RBRACK        shift, and go to state 384


state 322

 303) operation : OPERATION LBRACK number _ RBRACK

  RBRACK        shift, and go to state 385


state 323

 296) reg : reg_types LBRACK _ definable_range RBRACK

  DIGIT         shift, and go to state 386

  definable_range  go to state 387

state 324

 299) framereg : frametype LBRACK _ DIGIT RBRACK

  DIGIT         shift, and go to state 388


state 325

  68) group_statement : GROUP _ LPAREN integer RPAREN

  LPAREN        shift, and go to state 389


state 326

 219) coord_system : SPHERE _

  $default      reduce using rule 219 (coord_system)


state 327

 220) coord_system : POLAR _

  $default      reduce using rule 220 (coord_system)


state 328

 221) coord_system : ORIGIN _

  $default      reduce using rule 221 (coord_system)


state 329

 222) var_method_modifier : DOT swallow_newlines WORD _

  $default      reduce using rule 222 (var_method_modifier)


state 330

 223) var_method_modifier : DOT swallow_newlines group_statement _

  $default      reduce using rule 223 (var_method_modifier)


state 331

 224) var_method_modifier : DOT swallow_newlines POSEATTR _

  $default      reduce using rule 224 (var_method_modifier)


state 332

 225) var_method_modifier : DOT swallow_newlines OFFSET _

  $default      reduce using rule 225 (var_method_modifier)


state 333

 226) var_method_modifier : DOT swallow_newlines coord_system _

  $default      reduce using rule 226 (var_method_modifier)


state 334

 227) var_method_modifier : DOT swallow_newlines FIX _

  $default      reduce using rule 227 (var_method_modifier)


state 335

  76) program_call : function_call LPAREN args RPAREN _

  $default      reduce using rule 76 (program_call)


state 336

  81) args : args COMMA _ arg

  STRING        shift, and go to state 233
  REAL          shift, and go to state 119
  DIGIT         shift, and go to state 120
  WORD          shift, and go to state 108
  MINUS         shift, and go to state 143
  ADDRESS       shift, and go to state 90

  arg           go to state 390
  number        go to state 261
  signed_number  go to state 262
  var           go to state 263
  string        go to state 264
  address       go to state 265
  var_without_namespaces  go to state 85
  var_with_namespaces  go to state 86
  namespaces    go to state 109
  ns            go to state 88
  sign          go to state 235
  integer       go to state 118

state 337

  77) program_call : RUN function_call LPAREN args _ RPAREN
  81) args : args _ COMMA arg

  RPAREN        shift, and go to state 391
  COMMA         shift, and go to state 336


state 338

  78) program_call : CALL var LPAREN args _ RPAREN
  81) args : args _ COMMA arg

  RPAREN        shift, and go to state 392
  COMMA         shift, and go to state 336


state 339

  79) program_call : var_or_indirect EQUAL function_call LPAREN _ args RPAREN

  STRING        shift, and go to state 233
  REAL          shift, and go to state 119
  DIGIT         shift, and go to state 120
  WORD          shift, and go to state 108
  MINUS         shift, and go to state 143
  ADDRESS       shift, and go to state 90
  $default      reduce using rule 82 (args)

  args          go to state 393
  arg           go to state 260
  number        go to state 261
  signed_number  go to state 262
  var           go to state 263
  string        go to state 264
  address       go to state 265
  var_without_namespaces  go to state 85
  var_with_namespaces  go to state 86
  namespaces    go to state 109
  ns            go to state 88
  sign          go to state 235
  integer       go to state 118

state 340

 198) assignment : var_or_indirect PLUS EQUAL expression _
 242) binary_expression : expression _ operator expression

  EEQUAL        shift, and go to state 213
  NOTEQUAL      shift, and go to state 214
  GTE           shift, and go to state 217
  LTE           shift, and go to state 218
  LT            shift, and go to state 215
  GT            shift, and go to state 216
  PLUS          shift, and go to state 219
  MINUS         shift, and go to state 220
  STAR          shift, and go to state 222
  SLASH         shift, and go to state 223
  DIV           shift, and go to state 224
  AND           shift, and go to state 226
  OR            shift, and go to state 221
  MOD           shift, and go to state 225
  $default      reduce using rule 198 (assignment)

  operator      go to state 212

state 341

 199) assignment : var_or_indirect MINUS EQUAL expression _
 242) binary_expression : expression _ operator expression

  EEQUAL        shift, and go to state 213
  NOTEQUAL      shift, and go to state 214
  GTE           shift, and go to state 217
  LTE           shift, and go to state 218
  LT            shift, and go to state 215
  GT            shift, and go to state 216
  PLUS          shift, and go to state 219
  MINUS         shift, and go to state 220
  STAR          shift, and go to state 222
  SLASH         shift, and go to state 223
  DIV           shift, and go to state 224
  AND           shift, and go to state 226
  OR            shift, and go to state 221
  MOD           shift, and go to state 225
  $default      reduce using rule 199 (assignment)

  operator      go to state 212

state 342

 200) assignment : var_or_indirect STAR EQUAL expression _
 242) binary_expression : expression _ operator expression

  EEQUAL        shift, and go to state 213
  NOTEQUAL      shift, and go to state 214
  GTE           shift, and go to state 217
  LTE           shift, and go to state 218
  LT            shift, and go to state 215
  GT            shift, and go to state 216
  PLUS          shift, and go to state 219
  MINUS         shift, and go to state 220
  STAR          shift, and go to state 222
  SLASH         shift, and go to state 223
  DIV           shift, and go to state 224
  AND           shift, and go to state 226
  OR            shift, and go to state 221
  MOD           shift, and go to state 225
  $default      reduce using rule 200 (assignment)

  operator      go to state 212

state 343

 201) assignment : var_or_indirect SLASH EQUAL expression _
 242) binary_expression : expression _ operator expression

  EEQUAL        shift, and go to state 213
  NOTEQUAL      shift, and go to state 214
  GTE           shift, and go to state 217
  LTE           shift, and go to state 218
  LT            shift, and go to state 215
  GT            shift, and go to state 216
  PLUS          shift, and go to state 219
  MINUS         shift, and go to state 220
  STAR          shift, and go to state 222
  SLASH         shift, and go to state 223
  DIV           shift, and go to state 224
  AND           shift, and go to state 226
  OR            shift, and go to state 221
  MOD           shift, and go to state 225
  $default      reduce using rule 201 (assignment)

  operator      go to state 212

state 344

 330) array : LBRACK sn _ array_values sn RBRACK

  STRING        shift, and go to state 394
  WORD          shift, and go to state 395
  MINUS         shift, and go to state 143
  TRUE_FALSE    shift, and go to state 399
  LBRACK        shift, and go to state 277
  LBRACE        shift, and go to state 309
  $default      reduce using rule 329 (optional_sign)

  hash          go to state 396
  array         go to state 397
  optional_sign  go to state 398
  sign          go to state 400
  array_values  go to state 401
  array_value   go to state 402
  hash_value    go to state 403

state 345

  92) return_statement : RETURN LPAREN expression RPAREN _

  $default      reduce using rule 92 (return_statement)


state 346

  96) io_method : IO_METHOD LPAREN var_or_indirect RPAREN _

  $default      reduce using rule 96 (io_method)


state 347

  97) io_method : IO_METHOD LPAREN var_or_indirect COMMA _ number COMMA STRING RPAREN

  REAL          shift, and go to state 119
  DIGIT         shift, and go to state 120

  number        go to state 404
  integer       go to state 118

state 348

   4) statements : statements _ statement terminator
   5) block : NEWLINE statements _

  COMMENT       shift, and go to state 91
  MESSAGE       shift, and go to state 92
  WARNING       shift, and go to state 93
  JUMP          shift, and go to state 63
  IO_METHOD     shift, and go to state 60
  MOVE          shift, and go to state 80
  NEWLINE       shift, and go to state 41
  WORD          shift, and go to state 53
  IF            shift, and go to state 64
  UNLESS        shift, and go to state 65
  FOR           shift, and go to state 66
  WHILE         shift, and go to state 67
  WAIT_FOR      shift, and go to state 47
  WAIT_UNTIL    shift, and go to state 48
  FANUC_USE     shift, and go to state 50
  COLL_GUARD    shift, and go to state 51
  SET_SKIP_CONDITION  shift, and go to state 52
  NAMESPACE     shift, and go to state 71
  CASE          shift, and go to state 74
  INDIRECT      shift, and go to state 89
  EVAL          shift, and go to state 46
  TIMER_METHOD  shift, and go to state 45
  RAISE         shift, and go to state 44
  ABORT         shift, and go to state 31
  RETURN        shift, and go to state 59
  POSITION_DATA  shift, and go to state 94
  CALL          shift, and go to state 57
  RUN           shift, and go to state 56
  PAUSE         shift, and go to state 30
  TP_HEADER     shift, and go to state 42
  TP_APPLICATION_TYPE  shift, and go to state 43
  LPAREN        shift, and go to state 83
  LABEL         shift, and go to state 49
  SYSTEM        shift, and go to state 87
  ADDRESS       shift, and go to state 90
  LPOS          shift, and go to state 39
  JPOS          shift, and go to state 40
  FUNCTION      shift, and go to state 73
  USING         shift, and go to state 68
  IMPORT        shift, and go to state 70
  COMPILE       shift, and go to state 69
  INLINE        shift, and go to state 72
  DEFAULTPOS    shift, and go to state 82
  $default      reduce using rule 5 (block)

  statement     go to state 96
  comment       go to state 4
  message       go to state 5
  definition    go to state 6
  namespace     go to state 7
  motion_statement  go to state 8
  position_assignment  go to state 9
  label_definition  go to state 10
  address       go to state 11
  conditional   go to state 12
  inline_conditional  go to state 13
  conditional_block  go to state 14
  forloop       go to state 15
  while_loop    go to state 16
  use_statement  go to state 17
  set_skip_statement  go to state 18
  wait_statement  go to state 19
  case_statement  go to state 20
  fanuc_eval    go to state 21
  timer_method  go to state 22
  position_data  go to state 23
  raise         go to state 24
  tp_header_definition  go to state 25
  lpos_or_jpos  go to state 26
  empty_stmt    go to state 27
  warning       go to state 28
  var_system    go to state 29
  return_statement  go to state 32
  collguard_statement  go to state 33
  function      go to state 34
  tp_application_definition  go to state 35
  using_statement  go to state 36
  import_statement  go to state 37
  compile_statement  go to state 38
  namespaces    go to state 54
  function_call  go to state 55
  var_or_indirect  go to state 58
  var           go to state 61
  indirect_thing  go to state 62
  inlineable    go to state 75
  jump          go to state 76
  assignment    go to state 77
  io_method     go to state 78
  program_call  go to state 79
  label         go to state 81
  assignable_range  go to state 84
  var_without_namespaces  go to state 85
  var_with_namespaces  go to state 86
  ns            go to state 88

state 349

 102) conditional : IF expression block elsif_conditions _ else_block END
 106) elsif_conditions : elsif_conditions _ elsif_condition

  ELSE          shift, and go to state 354
  ELSIF         shift, and go to state 351
  $default      reduce using rule 148 (else_block)

  else_block    go to state 405
  elsif_condition  go to state 406

state 350

 105) elsif_conditions : elsif_condition _

  $default      reduce using rule 105 (elsif_conditions)


state 351

 108) elsif_condition : ELSIF _ expression block

  REAL          shift, and go to state 119
  DIGIT         shift, and go to state 120
  WORD          shift, and go to state 108
  BANG          shift, and go to state 129
  MINUS         shift, and go to state 143
  INDIRECT      shift, and go to state 89
  TRUE_FALSE    shift, and go to state 139
  ON_OFF        shift, and go to state 140
  LPAREN        shift, and go to state 141
  SYSTEM        shift, and go to state 87
  ADDRESS       shift, and go to state 90
  OPERATION     shift, and go to state 144

  expression    go to state 407
  var_without_namespaces  go to state 85
  var_with_namespaces  go to state 86
  namespaces    go to state 109
  ns            go to state 88
  unary_expression  go to state 125
  binary_expression  go to state 126
  factor        go to state 127
  address       go to state 128
  number        go to state 130
  signed_number  go to state 131
  operation     go to state 132
  var           go to state 133
  signed_var    go to state 134
  var_system    go to state 135
  indirect_thing  go to state 136
  paren_expr    go to state 137
  booleans      go to state 138
  sign          go to state 142
  integer       go to state 118

state 352

 104) conditional_block : IF expression THEN block _ elsif_block else_block END

  ELSIF         shift, and go to state 410
  ELSIF         [reduce using rule 111 (elsif_block)]
  $default      reduce using rule 111 (elsif_block)

  elsif_block   go to state 408
  elsif_block_condition  go to state 409

state 353

 103) conditional : UNLESS expression block else_block _ END

  END           shift, and go to state 411


state 354

 147) else_block : ELSE _ block

  NEWLINE       shift, and go to state 281

  block         go to state 412

state 355

 113) forloop : FOR var IN LPAREN _ int_or_var TO int_or_var RPAREN block END
 114) forloop : FOR var IN LPAREN _ int_or_var DOWNTO int_or_var RPAREN block END

  DIGIT         shift, and go to state 120
  WORD          shift, and go to state 108

  int_or_var    go to state 413
  integer       go to state 414
  var           go to state 415
  var_without_namespaces  go to state 85
  var_with_namespaces  go to state 86
  namespaces    go to state 109
  ns            go to state 88

state 356

 115) while_loop : WHILE expression block END _

  $default      reduce using rule 115 (while_loop)


state 357

 125) namespace : NAMESPACE WORD block END _

  $default      reduce using rule 125 (namespace)


state 358

 126) function : INLINE FUNCTION WORD LPAREN _ program_vars RPAREN block END
 127) function : INLINE FUNCTION WORD LPAREN _ program_vars RPAREN COLON WORD block END

  WORD          shift, and go to state 361
  $default      reduce using rule 90 (program_vars)

  program_var   go to state 359
  program_vars  go to state 416

state 359

  88) program_vars : program_var _

  $default      reduce using rule 88 (program_vars)


state 360

  89) program_vars : program_vars _ COMMA program_var
 128) function : FUNCTION WORD LPAREN program_vars _ RPAREN block END
 129) function : FUNCTION WORD LPAREN program_vars _ RPAREN COLON WORD block END

  RPAREN        shift, and go to state 418
  COMMA         shift, and go to state 417


state 361

  91) program_var : WORD _

  $default      reduce using rule 91 (program_var)


state 362

 130) case_statement : CASE var swallow_newlines case_conditions _ case_else END
 132) case_conditions : case_conditions _ case_condition

  ELSE          shift, and go to state 421
  WHEN          shift, and go to state 364
  $default      reduce using rule 137 (case_else)

  case_else     go to state 419
  case_condition  go to state 420

state 363

 131) case_conditions : case_condition _

  $default      reduce using rule 131 (case_conditions)


state 364

 133) case_condition : WHEN _ case_allowed_condition block

  REAL          shift, and go to state 119
  DIGIT         shift, and go to state 120
  WORD          shift, and go to state 108

  case_allowed_condition  go to state 422
  number        go to state 423
  var           go to state 424
  var_without_namespaces  go to state 85
  var_with_namespaces  go to state 86
  namespaces    go to state 109
  ns            go to state 88
  integer       go to state 118

state 365

 149) motion_statement : MOVE DOT swallow_newlines TO _ LPAREN var_or_indirect RPAREN motion_modifiers

  LPAREN        shift, and go to state 425


state 366

 150) motion_statement : MOVE DOT swallow_newlines MID _ LPAREN var_or_indirect RPAREN DOT swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers

  LPAREN        shift, and go to state 426


state 367

 202) position_assignment : DEFAULTPOS var_method_modifiers ARROW array _

  $default      reduce using rule 202 (position_assignment)


state 368

 204) position_assignment : LPAREN assignable_range RPAREN var_method_modifiers _ ARROW array
 215) var_method_modifiers : var_method_modifiers _ var_method_modifier

  DOT           shift, and go to state 148
  ARROW         shift, and go to state 427

  var_method_modifier  go to state 256

state 369

 206) position_assignment : assignable_range EQUAL LPAREN assignable_range _ RPAREN pose_range_modifiers

  RPAREN        shift, and go to state 428


state 370

 231) var_system_modifers : var_system_modifers var_system_modifer _

  $default      reduce using rule 231 (var_system_modifers)


state 371

 229) var_system : SYSTEM WORD LBRACK integer _ RBRACK var_system_modifers

  RBRACK        shift, and go to state 429


state 372

 233) var_system_modifer : DOT var_system _

  $default      reduce using rule 233 (var_system_modifer)


state 373

 269) indirect_thing : INDIRECT LPAREN STRING COMMA _ indirectable RPAREN
 270) indirect_thing : INDIRECT LPAREN STRING COMMA _ indirectable RPAREN var_method_modifiers

  REAL          shift, and go to state 119
  DIGIT         shift, and go to state 120
  WORD          shift, and go to state 108

  number        go to state 116
  var           go to state 117
  var_without_namespaces  go to state 85
  var_with_namespaces  go to state 86
  namespaces    go to state 109
  ns            go to state 88
  indirectable  go to state 430
  integer       go to state 118

state 374

 306) message : MESSAGE LPAREN STRING RPAREN _

  $default      reduce using rule 306 (message)


state 375

 307) warning : WARNING LPAREN STRING RPAREN _

  $default      reduce using rule 307 (warning)


state 376

 314) position_data : POSITION_DATA sn hash sn _ END

  END           shift, and go to state 431


state 377

 316) hash : LBRACE sn _ hash_attributes sn RBRACE
 317) hash : LBRACE sn _ RBRACE

  STRING        shift, and go to state 435
  RBRACE        shift, and go to state 433

  hash_attributes  go to state 432
  hash_attribute  go to state 434

state 378

  50) tp_tool_methods : LBRACE sn _ tp_tool_attributes sn RBRACE
  51) tp_tool_methods : LBRACE sn _ RBRACE

  WORD          shift, and go to state 439
  RBRACE        shift, and go to state 437

  tp_tool_attributes  go to state 436
  tp_tool_attribute  go to state 438

state 379

  59) wait_statement : WAIT_FOR LPAREN indirectable COMMA STRING _ RPAREN

  RPAREN        shift, and go to state 440


state 380

  61) wait_statement : WAIT_UNTIL LPAREN expression RPAREN DOT _ wait_modifier
  62) wait_statement : WAIT_UNTIL LPAREN expression RPAREN DOT _ wait_modifier DOT wait_modifier

  NEWLINE       shift, and go to state 195
  $default      reduce using rule 313 (swallow_newlines)

  wait_modifier  go to state 441
  timeout_modifier  go to state 442
  after_modifier  go to state 443
  swallow_newlines  go to state 444

state 381

  71) use_statement : FANUC_USE LPAREN indirectable COMMA group_statement _ RPAREN

  RPAREN        shift, and go to state 445


state 382

 300) operation : OPERATION LBRACK var_or_indirect RBRACK _

  $default      reduce using rule 300 (operation)


state 383

 301) operation : OPERATION LBRACK var_or_indirect COMMA _ var_or_indirect RBRACK

  WORD          shift, and go to state 108
  INDIRECT      shift, and go to state 89
  SYSTEM        shift, and go to state 87

  var           go to state 106
  indirect_thing  go to state 62
  var_system    go to state 107
  var_without_namespaces  go to state 85
  var_with_namespaces  go to state 86
  namespaces    go to state 109
  ns            go to state 88
  var_or_indirect  go to state 446

state 384

 302) operation : OPERATION LBRACK signed_number RBRACK _

  $default      reduce using rule 302 (operation)


state 385

 303) operation : OPERATION LBRACK number RBRACK _

  $default      reduce using rule 303 (operation)


state 386

 284) definable_range : DIGIT _ RANGE DIGIT
 285) definable_range : DIGIT _

  RANGE         shift, and go to state 447
  $default      reduce using rule 285 (definable_range)


state 387

 296) reg : reg_types LBRACK definable_range _ RBRACK

  RBRACK        shift, and go to state 448


state 388

 299) framereg : frametype LBRACK DIGIT _ RBRACK

  RBRACK        shift, and go to state 449


state 389

  68) group_statement : GROUP LPAREN _ integer RPAREN

  DIGIT         shift, and go to state 120

  integer       go to state 450

state 390

  81) args : args COMMA arg _

  $default      reduce using rule 81 (args)


state 391

  77) program_call : RUN function_call LPAREN args RPAREN _

  $default      reduce using rule 77 (program_call)


state 392

  78) program_call : CALL var LPAREN args RPAREN _

  $default      reduce using rule 78 (program_call)


state 393

  79) program_call : var_or_indirect EQUAL function_call LPAREN args _ RPAREN
  81) args : args _ COMMA arg

  RPAREN        shift, and go to state 451
  COMMA         shift, and go to state 336


state 394

 321) hash_value : STRING _

  $default      reduce using rule 321 (hash_value)


state 395

 322) hash_value : WORD _

  $default      reduce using rule 322 (hash_value)


state 396

 323) hash_value : hash _

  $default      reduce using rule 323 (hash_value)


state 397

 324) hash_value : array _

  $default      reduce using rule 324 (hash_value)


state 398

 325) hash_value : optional_sign _ DIGIT
 326) hash_value : optional_sign _ REAL

  REAL          shift, and go to state 453
  DIGIT         shift, and go to state 452


state 399

 327) hash_value : TRUE_FALSE _

  $default      reduce using rule 327 (hash_value)


state 400

 328) optional_sign : sign _

  $default      reduce using rule 328 (optional_sign)


state 401

 330) array : LBRACK sn array_values _ sn RBRACK
 332) array_values : array_values _ COMMA sn array_value

  NEWLINE       shift, and go to state 195
  COMMA         shift, and go to state 455
  $default      reduce using rule 313 (swallow_newlines)

  swallow_newlines  go to state 197
  sn            go to state 454

state 402

 331) array_values : array_value _

  $default      reduce using rule 331 (array_values)


state 403

 333) array_value : hash_value _

  $default      reduce using rule 333 (array_value)


state 404

  97) io_method : IO_METHOD LPAREN var_or_indirect COMMA number _ COMMA STRING RPAREN

  COMMA         shift, and go to state 456


state 405

 102) conditional : IF expression block elsif_conditions else_block _ END

  END           shift, and go to state 457


state 406

 106) elsif_conditions : elsif_conditions elsif_condition _

  $default      reduce using rule 106 (elsif_conditions)


state 407

 108) elsif_condition : ELSIF expression _ block
 242) binary_expression : expression _ operator expression

  NEWLINE       shift, and go to state 281
  EEQUAL        shift, and go to state 213
  NOTEQUAL      shift, and go to state 214
  GTE           shift, and go to state 217
  LTE           shift, and go to state 218
  LT            shift, and go to state 215
  GT            shift, and go to state 216
  PLUS          shift, and go to state 219
  MINUS         shift, and go to state 220
  STAR          shift, and go to state 222
  SLASH         shift, and go to state 223
  DIV           shift, and go to state 224
  AND           shift, and go to state 226
  OR            shift, and go to state 221
  MOD           shift, and go to state 225

  block         go to state 458
  operator      go to state 212

state 408

 104) conditional_block : IF expression THEN block elsif_block _ else_block END
 110) elsif_block : elsif_block _ elsif_block_condition

  ELSE          shift, and go to state 354
  ELSIF         shift, and go to state 410
  $default      reduce using rule 148 (else_block)

  else_block    go to state 459
  elsif_block_condition  go to state 460

state 409

 109) elsif_block : elsif_block_condition _

  $default      reduce using rule 109 (elsif_block)


state 410

 112) elsif_block_condition : ELSIF _ expression THEN block

  REAL          shift, and go to state 119
  DIGIT         shift, and go to state 120
  WORD          shift, and go to state 108
  BANG          shift, and go to state 129
  MINUS         shift, and go to state 143
  INDIRECT      shift, and go to state 89
  TRUE_FALSE    shift, and go to state 139
  ON_OFF        shift, and go to state 140
  LPAREN        shift, and go to state 141
  SYSTEM        shift, and go to state 87
  ADDRESS       shift, and go to state 90
  OPERATION     shift, and go to state 144

  expression    go to state 461
  var_without_namespaces  go to state 85
  var_with_namespaces  go to state 86
  namespaces    go to state 109
  ns            go to state 88
  unary_expression  go to state 125
  binary_expression  go to state 126
  factor        go to state 127
  address       go to state 128
  number        go to state 130
  signed_number  go to state 131
  operation     go to state 132
  var           go to state 133
  signed_var    go to state 134
  var_system    go to state 135
  indirect_thing  go to state 136
  paren_expr    go to state 137
  booleans      go to state 138
  sign          go to state 142
  integer       go to state 118

state 411

 103) conditional : UNLESS expression block else_block END _

  $default      reduce using rule 103 (conditional)


state 412

 147) else_block : ELSE block _

  $default      reduce using rule 147 (else_block)


state 413

 113) forloop : FOR var IN LPAREN int_or_var _ TO int_or_var RPAREN block END
 114) forloop : FOR var IN LPAREN int_or_var _ DOWNTO int_or_var RPAREN block END

  TO            shift, and go to state 462
  DOWNTO        shift, and go to state 463


state 414

 116) int_or_var : integer _

  $default      reduce using rule 116 (int_or_var)


state 415

 117) int_or_var : var _

  $default      reduce using rule 117 (int_or_var)


state 416

  89) program_vars : program_vars _ COMMA program_var
 126) function : INLINE FUNCTION WORD LPAREN program_vars _ RPAREN block END
 127) function : INLINE FUNCTION WORD LPAREN program_vars _ RPAREN COLON WORD block END

  RPAREN        shift, and go to state 464
  COMMA         shift, and go to state 417


state 417

  89) program_vars : program_vars COMMA _ program_var

  WORD          shift, and go to state 361

  program_var   go to state 465

state 418

 128) function : FUNCTION WORD LPAREN program_vars RPAREN _ block END
 129) function : FUNCTION WORD LPAREN program_vars RPAREN _ COLON WORD block END

  NEWLINE       shift, and go to state 281
  COLON         shift, and go to state 467

  block         go to state 466

state 419

 130) case_statement : CASE var swallow_newlines case_conditions case_else _ END

  END           shift, and go to state 468


state 420

 132) case_conditions : case_conditions case_condition _

  $default      reduce using rule 132 (case_conditions)


state 421

 136) case_else : ELSE _ block

  NEWLINE       shift, and go to state 281

  block         go to state 469

state 422

 133) case_condition : WHEN case_allowed_condition _ block

  NEWLINE       shift, and go to state 281

  block         go to state 470

state 423

 134) case_allowed_condition : number _

  $default      reduce using rule 134 (case_allowed_condition)


state 424

 135) case_allowed_condition : var _

  $default      reduce using rule 135 (case_allowed_condition)


state 425

 149) motion_statement : MOVE DOT swallow_newlines TO LPAREN _ var_or_indirect RPAREN motion_modifiers

  WORD          shift, and go to state 108
  INDIRECT      shift, and go to state 89
  SYSTEM        shift, and go to state 87

  var           go to state 106
  indirect_thing  go to state 62
  var_system    go to state 107
  var_or_indirect  go to state 471
  var_without_namespaces  go to state 85
  var_with_namespaces  go to state 86
  namespaces    go to state 109
  ns            go to state 88

state 426

 150) motion_statement : MOVE DOT swallow_newlines MID LPAREN _ var_or_indirect RPAREN DOT swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers

  WORD          shift, and go to state 108
  INDIRECT      shift, and go to state 89
  SYSTEM        shift, and go to state 87

  var           go to state 106
  indirect_thing  go to state 62
  var_system    go to state 107
  var_or_indirect  go to state 472
  var_without_namespaces  go to state 85
  var_with_namespaces  go to state 86
  namespaces    go to state 109
  ns            go to state 88

state 427

 204) position_assignment : LPAREN assignable_range RPAREN var_method_modifiers ARROW _ array

  LBRACK        shift, and go to state 277

  array         go to state 473

state 428

 206) position_assignment : assignable_range EQUAL LPAREN assignable_range RPAREN _ pose_range_modifiers

  DOT           shift, and go to state 476

  pose_range_modifiers  go to state 474
  pose_range_modifier  go to state 475

state 429

 229) var_system : SYSTEM WORD LBRACK integer RBRACK _ var_system_modifers

  DOT           shift, and go to state 304
  DOT           [reduce using rule 232 (var_system_modifers)]
  $default      reduce using rule 232 (var_system_modifers)

  var_system_modifers  go to state 477
  var_system_modifer  go to state 303

state 430

 269) indirect_thing : INDIRECT LPAREN STRING COMMA indirectable _ RPAREN
 270) indirect_thing : INDIRECT LPAREN STRING COMMA indirectable _ RPAREN var_method_modifiers

  RPAREN        shift, and go to state 478


state 431

 314) position_data : POSITION_DATA sn hash sn END _

  $default      reduce using rule 314 (position_data)


state 432

 316) hash : LBRACE sn hash_attributes _ sn RBRACE
 319) hash_attributes : hash_attributes _ COMMA sn hash_attribute

  NEWLINE       shift, and go to state 195
  COMMA         shift, and go to state 480
  $default      reduce using rule 313 (swallow_newlines)

  swallow_newlines  go to state 197
  sn            go to state 479

state 433

 317) hash : LBRACE sn RBRACE _

  $default      reduce using rule 317 (hash)


state 434

 318) hash_attributes : hash_attribute _

  $default      reduce using rule 318 (hash_attributes)


state 435

 320) hash_attribute : STRING _ COLON hash_value

  COLON         shift, and go to state 481


state 436

  50) tp_tool_methods : LBRACE sn tp_tool_attributes _ sn RBRACE
  53) tp_tool_attributes : tp_tool_attributes _ COMMA sn tp_tool_attribute

  NEWLINE       shift, and go to state 195
  COMMA         shift, and go to state 483
  $default      reduce using rule 313 (swallow_newlines)

  sn            go to state 482
  swallow_newlines  go to state 197

state 437

  51) tp_tool_methods : LBRACE sn RBRACE _

  $default      reduce using rule 51 (tp_tool_methods)


state 438

  52) tp_tool_attributes : tp_tool_attribute _

  $default      reduce using rule 52 (tp_tool_attributes)


state 439

  54) tp_tool_attribute : WORD _ COLON hash_value

  COLON         shift, and go to state 484


state 440

  59) wait_statement : WAIT_FOR LPAREN indirectable COMMA STRING RPAREN _

  $default      reduce using rule 59 (wait_statement)


state 441

  61) wait_statement : WAIT_UNTIL LPAREN expression RPAREN DOT wait_modifier _
  62) wait_statement : WAIT_UNTIL LPAREN expression RPAREN DOT wait_modifier _ DOT wait_modifier

  DOT           shift, and go to state 485
  $default      reduce using rule 61 (wait_statement)


state 442

  63) wait_modifier : timeout_modifier _

  $default      reduce using rule 63 (wait_modifier)


state 443

  64) wait_modifier : after_modifier _

  $default      reduce using rule 64 (wait_modifier)


state 444

  65) timeout_modifier : swallow_newlines _ TIMEOUT LPAREN label RPAREN
  66) after_modifier : swallow_newlines _ AFTER LPAREN indirectable COMMA STRING RPAREN

  TIMEOUT       shift, and go to state 486
  AFTER         shift, and go to state 487


state 445

  71) use_statement : FANUC_USE LPAREN indirectable COMMA group_statement RPAREN _

  $default      reduce using rule 71 (use_statement)


state 446

 301) operation : OPERATION LBRACK var_or_indirect COMMA var_or_indirect _ RBRACK

  RBRACK        shift, and go to state 488


state 447

 284) definable_range : DIGIT RANGE _ DIGIT

  DIGIT         shift, and go to state 489


state 448

 296) reg : reg_types LBRACK definable_range RBRACK _

  $default      reduce using rule 296 (reg)


state 449

 299) framereg : frametype LBRACK DIGIT RBRACK _

  $default      reduce using rule 299 (framereg)


state 450

  68) group_statement : GROUP LPAREN integer _ RPAREN

  RPAREN        shift, and go to state 490


state 451

  79) program_call : var_or_indirect EQUAL function_call LPAREN args RPAREN _

  $default      reduce using rule 79 (program_call)


state 452

 325) hash_value : optional_sign DIGIT _

  $default      reduce using rule 325 (hash_value)


state 453

 326) hash_value : optional_sign REAL _

  $default      reduce using rule 326 (hash_value)


state 454

 330) array : LBRACK sn array_values sn _ RBRACK

  RBRACK        shift, and go to state 491


state 455

 332) array_values : array_values COMMA _ sn array_value

  NEWLINE       shift, and go to state 195
  $default      reduce using rule 313 (swallow_newlines)

  swallow_newlines  go to state 197
  sn            go to state 492

state 456

  97) io_method : IO_METHOD LPAREN var_or_indirect COMMA number COMMA _ STRING RPAREN

  STRING        shift, and go to state 493


state 457

 102) conditional : IF expression block elsif_conditions else_block END _

  $default      reduce using rule 102 (conditional)


state 458

 108) elsif_condition : ELSIF expression block _

  $default      reduce using rule 108 (elsif_condition)


state 459

 104) conditional_block : IF expression THEN block elsif_block else_block _ END

  END           shift, and go to state 494


state 460

 110) elsif_block : elsif_block elsif_block_condition _

  $default      reduce using rule 110 (elsif_block)


state 461

 112) elsif_block_condition : ELSIF expression _ THEN block
 242) binary_expression : expression _ operator expression

  EEQUAL        shift, and go to state 213
  NOTEQUAL      shift, and go to state 214
  GTE           shift, and go to state 217
  LTE           shift, and go to state 218
  LT            shift, and go to state 215
  GT            shift, and go to state 216
  PLUS          shift, and go to state 219
  MINUS         shift, and go to state 220
  STAR          shift, and go to state 222
  SLASH         shift, and go to state 223
  DIV           shift, and go to state 224
  AND           shift, and go to state 226
  OR            shift, and go to state 221
  MOD           shift, and go to state 225
  THEN          shift, and go to state 495

  operator      go to state 212

state 462

 113) forloop : FOR var IN LPAREN int_or_var TO _ int_or_var RPAREN block END

  DIGIT         shift, and go to state 120
  WORD          shift, and go to state 108

  int_or_var    go to state 496
  integer       go to state 414
  var           go to state 415
  var_without_namespaces  go to state 85
  var_with_namespaces  go to state 86
  namespaces    go to state 109
  ns            go to state 88

state 463

 114) forloop : FOR var IN LPAREN int_or_var DOWNTO _ int_or_var RPAREN block END

  DIGIT         shift, and go to state 120
  WORD          shift, and go to state 108

  int_or_var    go to state 497
  integer       go to state 414
  var           go to state 415
  var_without_namespaces  go to state 85
  var_with_namespaces  go to state 86
  namespaces    go to state 109
  ns            go to state 88

state 464

 126) function : INLINE FUNCTION WORD LPAREN program_vars RPAREN _ block END
 127) function : INLINE FUNCTION WORD LPAREN program_vars RPAREN _ COLON WORD block END

  NEWLINE       shift, and go to state 281
  COLON         shift, and go to state 499

  block         go to state 498

state 465

  89) program_vars : program_vars COMMA program_var _

  $default      reduce using rule 89 (program_vars)


state 466

 128) function : FUNCTION WORD LPAREN program_vars RPAREN block _ END

  END           shift, and go to state 500


state 467

 129) function : FUNCTION WORD LPAREN program_vars RPAREN COLON _ WORD block END

  WORD          shift, and go to state 501


state 468

 130) case_statement : CASE var swallow_newlines case_conditions case_else END _

  $default      reduce using rule 130 (case_statement)


state 469

 136) case_else : ELSE block _

  $default      reduce using rule 136 (case_else)


state 470

 133) case_condition : WHEN case_allowed_condition block _

  $default      reduce using rule 133 (case_condition)


state 471

 149) motion_statement : MOVE DOT swallow_newlines TO LPAREN var_or_indirect _ RPAREN motion_modifiers

  RPAREN        shift, and go to state 502


state 472

 150) motion_statement : MOVE DOT swallow_newlines MID LPAREN var_or_indirect _ RPAREN DOT swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers

  RPAREN        shift, and go to state 503


state 473

 204) position_assignment : LPAREN assignable_range RPAREN var_method_modifiers ARROW array _

  $default      reduce using rule 204 (position_assignment)


state 474

 206) position_assignment : assignable_range EQUAL LPAREN assignable_range RPAREN pose_range_modifiers _
 217) pose_range_modifiers : pose_range_modifiers _ pose_range_modifier

  DOT           shift, and go to state 476
  $default      reduce using rule 206 (position_assignment)

  pose_range_modifier  go to state 504

state 475

 216) pose_range_modifiers : pose_range_modifier _

  $default      reduce using rule 216 (pose_range_modifiers)


state 476

 218) pose_range_modifier : DOT _ swallow_newlines POSEREVERSE

  NEWLINE       shift, and go to state 195
  $default      reduce using rule 313 (swallow_newlines)

  swallow_newlines  go to state 505

state 477

 229) var_system : SYSTEM WORD LBRACK integer RBRACK var_system_modifers _
 231) var_system_modifers : var_system_modifers _ var_system_modifer

  DOT           shift, and go to state 304
  DOT           [reduce using rule 229 (var_system)]
  $default      reduce using rule 229 (var_system)

  var_system_modifer  go to state 370

state 478

 269) indirect_thing : INDIRECT LPAREN STRING COMMA indirectable RPAREN _
 270) indirect_thing : INDIRECT LPAREN STRING COMMA indirectable RPAREN _ var_method_modifiers

  DOT           shift, and go to state 148
  $default      reduce using rule 269 (indirect_thing)

  var_method_modifier  go to state 147
  var_method_modifiers  go to state 506

state 479

 316) hash : LBRACE sn hash_attributes sn _ RBRACE

  RBRACE        shift, and go to state 507


state 480

 319) hash_attributes : hash_attributes COMMA _ sn hash_attribute

  NEWLINE       shift, and go to state 195
  $default      reduce using rule 313 (swallow_newlines)

  swallow_newlines  go to state 197
  sn            go to state 508

state 481

 320) hash_attribute : STRING COLON _ hash_value

  STRING        shift, and go to state 394
  WORD          shift, and go to state 395
  MINUS         shift, and go to state 143
  TRUE_FALSE    shift, and go to state 399
  LBRACK        shift, and go to state 277
  LBRACE        shift, and go to state 309
  $default      reduce using rule 329 (optional_sign)

  hash_value    go to state 509
  hash          go to state 396
  array         go to state 397
  optional_sign  go to state 398
  sign          go to state 400

state 482

  50) tp_tool_methods : LBRACE sn tp_tool_attributes sn _ RBRACE

  RBRACE        shift, and go to state 510


state 483

  53) tp_tool_attributes : tp_tool_attributes COMMA _ sn tp_tool_attribute

  NEWLINE       shift, and go to state 195
  $default      reduce using rule 313 (swallow_newlines)

  sn            go to state 511
  swallow_newlines  go to state 197

state 484

  54) tp_tool_attribute : WORD COLON _ hash_value

  STRING        shift, and go to state 394
  WORD          shift, and go to state 395
  MINUS         shift, and go to state 143
  TRUE_FALSE    shift, and go to state 399
  LBRACK        shift, and go to state 277
  LBRACE        shift, and go to state 309
  $default      reduce using rule 329 (optional_sign)

  hash_value    go to state 512
  hash          go to state 396
  array         go to state 397
  optional_sign  go to state 398
  sign          go to state 400

state 485

  62) wait_statement : WAIT_UNTIL LPAREN expression RPAREN DOT wait_modifier DOT _ wait_modifier

  NEWLINE       shift, and go to state 195
  $default      reduce using rule 313 (swallow_newlines)

  wait_modifier  go to state 513
  timeout_modifier  go to state 442
  after_modifier  go to state 443
  swallow_newlines  go to state 444

state 486

  65) timeout_modifier : swallow_newlines TIMEOUT _ LPAREN label RPAREN

  LPAREN        shift, and go to state 514


state 487

  66) after_modifier : swallow_newlines AFTER _ LPAREN indirectable COMMA STRING RPAREN

  LPAREN        shift, and go to state 515


state 488

 301) operation : OPERATION LBRACK var_or_indirect COMMA var_or_indirect RBRACK _

  $default      reduce using rule 301 (operation)


state 489

 284) definable_range : DIGIT RANGE DIGIT _

  $default      reduce using rule 284 (definable_range)


state 490

  68) group_statement : GROUP LPAREN integer RPAREN _

  $default      reduce using rule 68 (group_statement)


state 491

 330) array : LBRACK sn array_values sn RBRACK _

  $default      reduce using rule 330 (array)


state 492

 332) array_values : array_values COMMA sn _ array_value

  STRING        shift, and go to state 394
  WORD          shift, and go to state 395
  MINUS         shift, and go to state 143
  TRUE_FALSE    shift, and go to state 399
  LBRACK        shift, and go to state 277
  LBRACE        shift, and go to state 309
  $default      reduce using rule 329 (optional_sign)

  hash          go to state 396
  array         go to state 397
  optional_sign  go to state 398
  sign          go to state 400
  array_value   go to state 516
  hash_value    go to state 403

state 493

  97) io_method : IO_METHOD LPAREN var_or_indirect COMMA number COMMA STRING _ RPAREN

  RPAREN        shift, and go to state 517


state 494

 104) conditional_block : IF expression THEN block elsif_block else_block END _

  $default      reduce using rule 104 (conditional_block)


state 495

 112) elsif_block_condition : ELSIF expression THEN _ block

  NEWLINE       shift, and go to state 281

  block         go to state 518

state 496

 113) forloop : FOR var IN LPAREN int_or_var TO int_or_var _ RPAREN block END

  RPAREN        shift, and go to state 519


state 497

 114) forloop : FOR var IN LPAREN int_or_var DOWNTO int_or_var _ RPAREN block END

  RPAREN        shift, and go to state 520


state 498

 126) function : INLINE FUNCTION WORD LPAREN program_vars RPAREN block _ END

  END           shift, and go to state 521


state 499

 127) function : INLINE FUNCTION WORD LPAREN program_vars RPAREN COLON _ WORD block END

  WORD          shift, and go to state 522


state 500

 128) function : FUNCTION WORD LPAREN program_vars RPAREN block END _

  $default      reduce using rule 128 (function)


state 501

 129) function : FUNCTION WORD LPAREN program_vars RPAREN COLON WORD _ block END

  NEWLINE       shift, and go to state 281

  block         go to state 523

state 502

 149) motion_statement : MOVE DOT swallow_newlines TO LPAREN var_or_indirect RPAREN _ motion_modifiers

  DOT           shift, and go to state 526

  motion_modifiers  go to state 524
  motion_modifier  go to state 525

state 503

 150) motion_statement : MOVE DOT swallow_newlines MID LPAREN var_or_indirect RPAREN _ DOT swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers

  DOT           shift, and go to state 527


state 504

 217) pose_range_modifiers : pose_range_modifiers pose_range_modifier _

  $default      reduce using rule 217 (pose_range_modifiers)


state 505

 218) pose_range_modifier : DOT swallow_newlines _ POSEREVERSE

  POSEREVERSE   shift, and go to state 528


state 506

 215) var_method_modifiers : var_method_modifiers _ var_method_modifier
 270) indirect_thing : INDIRECT LPAREN STRING COMMA indirectable RPAREN var_method_modifiers _

  DOT           shift, and go to state 148
  $default      reduce using rule 270 (indirect_thing)

  var_method_modifier  go to state 256

state 507

 316) hash : LBRACE sn hash_attributes sn RBRACE _

  $default      reduce using rule 316 (hash)


state 508

 319) hash_attributes : hash_attributes COMMA sn _ hash_attribute

  STRING        shift, and go to state 435

  hash_attribute  go to state 529

state 509

 320) hash_attribute : STRING COLON hash_value _

  $default      reduce using rule 320 (hash_attribute)


state 510

  50) tp_tool_methods : LBRACE sn tp_tool_attributes sn RBRACE _

  $default      reduce using rule 50 (tp_tool_methods)


state 511

  53) tp_tool_attributes : tp_tool_attributes COMMA sn _ tp_tool_attribute

  WORD          shift, and go to state 439

  tp_tool_attribute  go to state 530

state 512

  54) tp_tool_attribute : WORD COLON hash_value _

  $default      reduce using rule 54 (tp_tool_attribute)


state 513

  62) wait_statement : WAIT_UNTIL LPAREN expression RPAREN DOT wait_modifier DOT wait_modifier _

  $default      reduce using rule 62 (wait_statement)


state 514

  65) timeout_modifier : swallow_newlines TIMEOUT LPAREN _ label RPAREN

  LABEL         shift, and go to state 49

  label         go to state 531

state 515

  66) after_modifier : swallow_newlines AFTER LPAREN _ indirectable COMMA STRING RPAREN

  REAL          shift, and go to state 119
  DIGIT         shift, and go to state 120
  WORD          shift, and go to state 108

  indirectable  go to state 532
  number        go to state 116
  var           go to state 117
  var_without_namespaces  go to state 85
  var_with_namespaces  go to state 86
  namespaces    go to state 109
  ns            go to state 88
  integer       go to state 118

state 516

 332) array_values : array_values COMMA sn array_value _

  $default      reduce using rule 332 (array_values)


state 517

  97) io_method : IO_METHOD LPAREN var_or_indirect COMMA number COMMA STRING RPAREN _

  $default      reduce using rule 97 (io_method)


state 518

 112) elsif_block_condition : ELSIF expression THEN block _

  $default      reduce using rule 112 (elsif_block_condition)


state 519

 113) forloop : FOR var IN LPAREN int_or_var TO int_or_var RPAREN _ block END

  NEWLINE       shift, and go to state 281

  block         go to state 533

state 520

 114) forloop : FOR var IN LPAREN int_or_var DOWNTO int_or_var RPAREN _ block END

  NEWLINE       shift, and go to state 281

  block         go to state 534

state 521

 126) function : INLINE FUNCTION WORD LPAREN program_vars RPAREN block END _

  $default      reduce using rule 126 (function)


state 522

 127) function : INLINE FUNCTION WORD LPAREN program_vars RPAREN COLON WORD _ block END

  NEWLINE       shift, and go to state 281

  block         go to state 535

state 523

 129) function : FUNCTION WORD LPAREN program_vars RPAREN COLON WORD block _ END

  END           shift, and go to state 536


state 524

 149) motion_statement : MOVE DOT swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers _
 152) motion_modifiers : motion_modifiers _ motion_modifier

  DOT           shift, and go to state 526
  $default      reduce using rule 149 (motion_statement)

  motion_modifier  go to state 537

state 525

 151) motion_modifiers : motion_modifier _

  $default      reduce using rule 151 (motion_modifiers)


state 526

 155) motion_modifier : DOT _ swallow_newlines AT LPAREN speed RPAREN
 156) motion_modifier : DOT _ swallow_newlines ACC LPAREN int_or_var RPAREN
 157) motion_modifier : DOT _ swallow_newlines CR LPAREN motion_arguements RPAREN
 158) motion_modifier : DOT _ swallow_newlines TERM LPAREN valid_terminations RPAREN
 159) motion_modifier : DOT _ swallow_newlines OFFSET LPAREN var_or_indirect RPAREN
 160) motion_modifier : DOT _ swallow_newlines TIME_SEGMENT LPAREN time COMMA time_seg_actions RPAREN
 161) motion_modifier : DOT _ swallow_newlines SKIP LPAREN label optional_lpos_arg RPAREN
 162) motion_modifier : DOT _ swallow_newlines valid_motion_statements
 163) motion_modifier : DOT _ swallow_newlines single_argument_motion_modifiers LPAREN int_or_var RPAREN

  NEWLINE       shift, and go to state 195
  $default      reduce using rule 313 (swallow_newlines)

  swallow_newlines  go to state 538

state 527

 150) motion_statement : MOVE DOT swallow_newlines MID LPAREN var_or_indirect RPAREN DOT _ swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers

  NEWLINE       shift, and go to state 195
  $default      reduce using rule 313 (swallow_newlines)

  swallow_newlines  go to state 539

state 528

 218) pose_range_modifier : DOT swallow_newlines POSEREVERSE _

  $default      reduce using rule 218 (pose_range_modifier)


state 529

 319) hash_attributes : hash_attributes COMMA sn hash_attribute _

  $default      reduce using rule 319 (hash_attributes)


state 530

  53) tp_tool_attributes : tp_tool_attributes COMMA sn tp_tool_attribute _

  $default      reduce using rule 53 (tp_tool_attributes)


state 531

  65) timeout_modifier : swallow_newlines TIMEOUT LPAREN label _ RPAREN

  RPAREN        shift, and go to state 540


state 532

  66) after_modifier : swallow_newlines AFTER LPAREN indirectable _ COMMA STRING RPAREN

  COMMA         shift, and go to state 541


state 533

 113) forloop : FOR var IN LPAREN int_or_var TO int_or_var RPAREN block _ END

  END           shift, and go to state 542


state 534

 114) forloop : FOR var IN LPAREN int_or_var DOWNTO int_or_var RPAREN block _ END

  END           shift, and go to state 543


state 535

 127) function : INLINE FUNCTION WORD LPAREN program_vars RPAREN COLON WORD block _ END

  END           shift, and go to state 544


state 536

 129) function : FUNCTION WORD LPAREN program_vars RPAREN COLON WORD block END _

  $default      reduce using rule 129 (function)


state 537

 152) motion_modifiers : motion_modifiers motion_modifier _

  $default      reduce using rule 152 (motion_modifiers)


state 538

 155) motion_modifier : DOT swallow_newlines _ AT LPAREN speed RPAREN
 156) motion_modifier : DOT swallow_newlines _ ACC LPAREN int_or_var RPAREN
 157) motion_modifier : DOT swallow_newlines _ CR LPAREN motion_arguements RPAREN
 158) motion_modifier : DOT swallow_newlines _ TERM LPAREN valid_terminations RPAREN
 159) motion_modifier : DOT swallow_newlines _ OFFSET LPAREN var_or_indirect RPAREN
 160) motion_modifier : DOT swallow_newlines _ TIME_SEGMENT LPAREN time COMMA time_seg_actions RPAREN
 161) motion_modifier : DOT swallow_newlines _ SKIP LPAREN label optional_lpos_arg RPAREN
 162) motion_modifier : DOT swallow_newlines _ valid_motion_statements
 163) motion_modifier : DOT swallow_newlines _ single_argument_motion_modifiers LPAREN int_or_var RPAREN

  TIME_SEGMENT  shift, and go to state 550
  AT            shift, and go to state 545
  ACC           shift, and go to state 546
  TERM          shift, and go to state 548
  OFFSET        shift, and go to state 549
  SKIP          shift, and go to state 551
  COORD         shift, and go to state 554
  MROT          shift, and go to state 555
  PTH           shift, and go to state 556
  WJNT          shift, and go to state 558
  INC           shift, and go to state 557
  BREAK         shift, and go to state 559
  RTCP          shift, and go to state 560
  FPLIN         shift, and go to state 561
  AP_LD         shift, and go to state 566
  RT_LD         shift, and go to state 565
  CD            shift, and go to state 562
  CR            shift, and go to state 547
  INDEV         shift, and go to state 564
  EV            shift, and go to state 563
  PSPD          shift, and go to state 567
  CTV           shift, and go to state 568

  valid_motion_statements  go to state 552
  single_argument_motion_modifiers  go to state 553

state 539

 150) motion_statement : MOVE DOT swallow_newlines MID LPAREN var_or_indirect RPAREN DOT swallow_newlines _ TO LPAREN var_or_indirect RPAREN motion_modifiers

  TO            shift, and go to state 569


state 540

  65) timeout_modifier : swallow_newlines TIMEOUT LPAREN label RPAREN _

  $default      reduce using rule 65 (timeout_modifier)


state 541

  66) after_modifier : swallow_newlines AFTER LPAREN indirectable COMMA _ STRING RPAREN

  STRING        shift, and go to state 570


state 542

 113) forloop : FOR var IN LPAREN int_or_var TO int_or_var RPAREN block END _

  $default      reduce using rule 113 (forloop)


state 543

 114) forloop : FOR var IN LPAREN int_or_var DOWNTO int_or_var RPAREN block END _

  $default      reduce using rule 114 (forloop)


state 544

 127) function : INLINE FUNCTION WORD LPAREN program_vars RPAREN COLON WORD block END _

  $default      reduce using rule 127 (function)


state 545

 155) motion_modifier : DOT swallow_newlines AT _ LPAREN speed RPAREN

  LPAREN        shift, and go to state 571


state 546

 156) motion_modifier : DOT swallow_newlines ACC _ LPAREN int_or_var RPAREN

  LPAREN        shift, and go to state 572


state 547

 157) motion_modifier : DOT swallow_newlines CR _ LPAREN motion_arguements RPAREN

  LPAREN        shift, and go to state 573


state 548

 158) motion_modifier : DOT swallow_newlines TERM _ LPAREN valid_terminations RPAREN

  LPAREN        shift, and go to state 574


state 549

 159) motion_modifier : DOT swallow_newlines OFFSET _ LPAREN var_or_indirect RPAREN

  LPAREN        shift, and go to state 575


state 550

 160) motion_modifier : DOT swallow_newlines TIME_SEGMENT _ LPAREN time COMMA time_seg_actions RPAREN

  LPAREN        shift, and go to state 576


state 551

 161) motion_modifier : DOT swallow_newlines SKIP _ LPAREN label optional_lpos_arg RPAREN

  LPAREN        shift, and go to state 577


state 552

 162) motion_modifier : DOT swallow_newlines valid_motion_statements _

  $default      reduce using rule 162 (motion_modifier)


state 553

 163) motion_modifier : DOT swallow_newlines single_argument_motion_modifiers _ LPAREN int_or_var RPAREN

  LPAREN        shift, and go to state 578


state 554

 164) valid_motion_statements : COORD _

  $default      reduce using rule 164 (valid_motion_statements)


state 555

 165) valid_motion_statements : MROT _

  $default      reduce using rule 165 (valid_motion_statements)


state 556

 166) valid_motion_statements : PTH _

  $default      reduce using rule 166 (valid_motion_statements)


state 557

 167) valid_motion_statements : INC _

  $default      reduce using rule 167 (valid_motion_statements)


state 558

 168) valid_motion_statements : WJNT _

  $default      reduce using rule 168 (valid_motion_statements)


state 559

 169) valid_motion_statements : BREAK _

  $default      reduce using rule 169 (valid_motion_statements)


state 560

 170) valid_motion_statements : RTCP _

  $default      reduce using rule 170 (valid_motion_statements)


state 561

 171) valid_motion_statements : FPLIN _

  $default      reduce using rule 171 (valid_motion_statements)


state 562

 172) single_argument_motion_modifiers : CD _

  $default      reduce using rule 172 (single_argument_motion_modifiers)


state 563

 173) single_argument_motion_modifiers : EV _

  $default      reduce using rule 173 (single_argument_motion_modifiers)


state 564

 174) single_argument_motion_modifiers : INDEV _

  $default      reduce using rule 174 (single_argument_motion_modifiers)


state 565

 175) single_argument_motion_modifiers : RT_LD _

  $default      reduce using rule 175 (single_argument_motion_modifiers)


state 566

 176) single_argument_motion_modifiers : AP_LD _

  $default      reduce using rule 176 (single_argument_motion_modifiers)


state 567

 177) single_argument_motion_modifiers : PSPD _

  $default      reduce using rule 177 (single_argument_motion_modifiers)


state 568

 178) single_argument_motion_modifiers : CTV _

  $default      reduce using rule 178 (single_argument_motion_modifiers)


state 569

 150) motion_statement : MOVE DOT swallow_newlines MID LPAREN var_or_indirect RPAREN DOT swallow_newlines TO _ LPAREN var_or_indirect RPAREN motion_modifiers

  LPAREN        shift, and go to state 579


state 570

  66) after_modifier : swallow_newlines AFTER LPAREN indirectable COMMA STRING _ RPAREN

  RPAREN        shift, and go to state 580


state 571

 155) motion_modifier : DOT swallow_newlines AT LPAREN _ speed RPAREN

  STRING        shift, and go to state 583
  REAL          shift, and go to state 119
  DIGIT         shift, and go to state 120
  WORD          shift, and go to state 108

  speed         go to state 581
  number        go to state 116
  var           go to state 117
  indirectable  go to state 582
  var_without_namespaces  go to state 85
  var_with_namespaces  go to state 86
  namespaces    go to state 109
  ns            go to state 88
  integer       go to state 118

state 572

 156) motion_modifier : DOT swallow_newlines ACC LPAREN _ int_or_var RPAREN

  DIGIT         shift, and go to state 120
  WORD          shift, and go to state 108

  integer       go to state 414
  var           go to state 415
  int_or_var    go to state 584
  var_without_namespaces  go to state 85
  var_with_namespaces  go to state 86
  namespaces    go to state 109
  ns            go to state 88

state 573

 157) motion_modifier : DOT swallow_newlines CR LPAREN _ motion_arguements RPAREN

  DIGIT         shift, and go to state 120
  WORD          shift, and go to state 108
  MINUS         shift, and go to state 589

  valid_terminations  go to state 585
  motion_arguements  go to state 586
  integer       go to state 587
  var           go to state 588
  var_without_namespaces  go to state 85
  var_with_namespaces  go to state 86
  namespaces    go to state 109
  ns            go to state 88

state 574

 158) motion_modifier : DOT swallow_newlines TERM LPAREN _ valid_terminations RPAREN

  DIGIT         shift, and go to state 120
  WORD          shift, and go to state 108
  MINUS         shift, and go to state 589

  valid_terminations  go to state 590
  integer       go to state 587
  var           go to state 588
  var_without_namespaces  go to state 85
  var_with_namespaces  go to state 86
  namespaces    go to state 109
  ns            go to state 88

state 575

 159) motion_modifier : DOT swallow_newlines OFFSET LPAREN _ var_or_indirect RPAREN

  WORD          shift, and go to state 108
  INDIRECT      shift, and go to state 89
  SYSTEM        shift, and go to state 87

  var           go to state 106
  indirect_thing  go to state 62
  var_system    go to state 107
  var_or_indirect  go to state 591
  var_without_namespaces  go to state 85
  var_with_namespaces  go to state 86
  namespaces    go to state 109
  ns            go to state 88

state 576

 160) motion_modifier : DOT swallow_newlines TIME_SEGMENT LPAREN _ time COMMA time_seg_actions RPAREN

  REAL          shift, and go to state 119
  DIGIT         shift, and go to state 120
  WORD          shift, and go to state 108

  time          go to state 592
  var           go to state 593
  number        go to state 594
  var_without_namespaces  go to state 85
  var_with_namespaces  go to state 86
  namespaces    go to state 109
  ns            go to state 88
  integer       go to state 118

state 577

 161) motion_modifier : DOT swallow_newlines SKIP LPAREN _ label optional_lpos_arg RPAREN

  LABEL         shift, and go to state 49

  label         go to state 595

state 578

 163) motion_modifier : DOT swallow_newlines single_argument_motion_modifiers LPAREN _ int_or_var RPAREN

  DIGIT         shift, and go to state 120
  WORD          shift, and go to state 108

  integer       go to state 414
  var           go to state 415
  int_or_var    go to state 596
  var_without_namespaces  go to state 85
  var_with_namespaces  go to state 86
  namespaces    go to state 109
  ns            go to state 88

state 579

 150) motion_statement : MOVE DOT swallow_newlines MID LPAREN var_or_indirect RPAREN DOT swallow_newlines TO LPAREN _ var_or_indirect RPAREN motion_modifiers

  WORD          shift, and go to state 108
  INDIRECT      shift, and go to state 89
  SYSTEM        shift, and go to state 87

  var           go to state 106
  indirect_thing  go to state 62
  var_system    go to state 107
  var_or_indirect  go to state 597
  var_without_namespaces  go to state 85
  var_with_namespaces  go to state 86
  namespaces    go to state 109
  ns            go to state 88

state 580

  66) after_modifier : swallow_newlines AFTER LPAREN indirectable COMMA STRING RPAREN _

  $default      reduce using rule 66 (after_modifier)


state 581

 155) motion_modifier : DOT swallow_newlines AT LPAREN speed _ RPAREN

  RPAREN        shift, and go to state 598


state 582

 193) speed : indirectable _ COMMA STRING

  COMMA         shift, and go to state 599


state 583

 194) speed : STRING _

  $default      reduce using rule 194 (speed)


state 584

 156) motion_modifier : DOT swallow_newlines ACC LPAREN int_or_var _ RPAREN

  RPAREN        shift, and go to state 600


state 585

 153) motion_arguements : valid_terminations _
 154) motion_arguements : valid_terminations _ COMMA valid_terminations

  COMMA         shift, and go to state 601
  $default      reduce using rule 153 (motion_arguements)


state 586

 157) motion_modifier : DOT swallow_newlines CR LPAREN motion_arguements _ RPAREN

  RPAREN        shift, and go to state 602


state 587

 179) valid_terminations : integer _

  $default      reduce using rule 179 (valid_terminations)


state 588

 180) valid_terminations : var _

  $default      reduce using rule 180 (valid_terminations)


state 589

 181) valid_terminations : MINUS _ DIGIT

  DIGIT         shift, and go to state 603


state 590

 158) motion_modifier : DOT swallow_newlines TERM LPAREN valid_terminations _ RPAREN

  RPAREN        shift, and go to state 604


state 591

 159) motion_modifier : DOT swallow_newlines OFFSET LPAREN var_or_indirect _ RPAREN

  RPAREN        shift, and go to state 605


state 592

 160) motion_modifier : DOT swallow_newlines TIME_SEGMENT LPAREN time _ COMMA time_seg_actions RPAREN

  COMMA         shift, and go to state 606


state 593

 191) time : var _

  $default      reduce using rule 191 (time)


state 594

 192) time : number _

  $default      reduce using rule 192 (time)


state 595

 161) motion_modifier : DOT swallow_newlines SKIP LPAREN label _ optional_lpos_arg RPAREN

  COMMA         shift, and go to state 608
  $default      reduce using rule 183 (optional_lpos_arg)

  optional_lpos_arg  go to state 607

state 596

 163) motion_modifier : DOT swallow_newlines single_argument_motion_modifiers LPAREN int_or_var _ RPAREN

  RPAREN        shift, and go to state 609


state 597

 150) motion_statement : MOVE DOT swallow_newlines MID LPAREN var_or_indirect RPAREN DOT swallow_newlines TO LPAREN var_or_indirect _ RPAREN motion_modifiers

  RPAREN        shift, and go to state 610


state 598

 155) motion_modifier : DOT swallow_newlines AT LPAREN speed RPAREN _

  $default      reduce using rule 155 (motion_modifier)


state 599

 193) speed : indirectable COMMA _ STRING

  STRING        shift, and go to state 611


state 600

 156) motion_modifier : DOT swallow_newlines ACC LPAREN int_or_var RPAREN _

  $default      reduce using rule 156 (motion_modifier)


state 601

 154) motion_arguements : valid_terminations COMMA _ valid_terminations

  DIGIT         shift, and go to state 120
  WORD          shift, and go to state 108
  MINUS         shift, and go to state 589

  valid_terminations  go to state 612
  integer       go to state 587
  var           go to state 588
  var_without_namespaces  go to state 85
  var_with_namespaces  go to state 86
  namespaces    go to state 109
  ns            go to state 88

state 602

 157) motion_modifier : DOT swallow_newlines CR LPAREN motion_arguements RPAREN _

  $default      reduce using rule 157 (motion_modifier)


state 603

 181) valid_terminations : MINUS DIGIT _

  $default      reduce using rule 181 (valid_terminations)


state 604

 158) motion_modifier : DOT swallow_newlines TERM LPAREN valid_terminations RPAREN _

  $default      reduce using rule 158 (motion_modifier)


state 605

 159) motion_modifier : DOT swallow_newlines OFFSET LPAREN var_or_indirect RPAREN _

  $default      reduce using rule 159 (motion_modifier)


state 606

 160) motion_modifier : DOT swallow_newlines TIME_SEGMENT LPAREN time COMMA _ time_seg_actions RPAREN

  IO_METHOD     shift, and go to state 60
  WORD          shift, and go to state 269
  INDIRECT      shift, and go to state 89
  CALL          shift, and go to state 57
  RUN           shift, and go to state 56
  SYSTEM        shift, and go to state 87

  namespaces    go to state 54
  function_call  go to state 55
  var_or_indirect  go to state 613
  var           go to state 106
  indirect_thing  go to state 62
  var_system    go to state 107
  time_seg_actions  go to state 614
  program_call  go to state 615
  io_method     go to state 616
  var_without_namespaces  go to state 85
  var_with_namespaces  go to state 86
  ns            go to state 88

state 607

 161) motion_modifier : DOT swallow_newlines SKIP LPAREN label optional_lpos_arg _ RPAREN

  RPAREN        shift, and go to state 617


state 608

 182) optional_lpos_arg : COMMA _ var

  WORD          shift, and go to state 108

  var           go to state 618
  var_without_namespaces  go to state 85
  var_with_namespaces  go to state 86
  namespaces    go to state 109
  ns            go to state 88

state 609

 163) motion_modifier : DOT swallow_newlines single_argument_motion_modifiers LPAREN int_or_var RPAREN _

  $default      reduce using rule 163 (motion_modifier)


state 610

 150) motion_statement : MOVE DOT swallow_newlines MID LPAREN var_or_indirect RPAREN DOT swallow_newlines TO LPAREN var_or_indirect RPAREN _ motion_modifiers

  DOT           shift, and go to state 526

  motion_modifiers  go to state 619
  motion_modifier  go to state 525

state 611

 193) speed : indirectable COMMA STRING _

  $default      reduce using rule 193 (speed)


state 612

 154) motion_arguements : valid_terminations COMMA valid_terminations _

  $default      reduce using rule 154 (motion_arguements)


state 613

  79) program_call : var_or_indirect _ EQUAL function_call LPAREN args RPAREN

  EQUAL         shift, and go to state 620


state 614

 160) motion_modifier : DOT swallow_newlines TIME_SEGMENT LPAREN time COMMA time_seg_actions _ RPAREN

  RPAREN        shift, and go to state 621


state 615

 189) time_seg_actions : program_call _

  $default      reduce using rule 189 (time_seg_actions)


state 616

 190) time_seg_actions : io_method _

  $default      reduce using rule 190 (time_seg_actions)


state 617

 161) motion_modifier : DOT swallow_newlines SKIP LPAREN label optional_lpos_arg RPAREN _

  $default      reduce using rule 161 (motion_modifier)


state 618

 182) optional_lpos_arg : COMMA var _

  $default      reduce using rule 182 (optional_lpos_arg)


state 619

 150) motion_statement : MOVE DOT swallow_newlines MID LPAREN var_or_indirect RPAREN DOT swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers _
 152) motion_modifiers : motion_modifiers _ motion_modifier

  DOT           shift, and go to state 526
  $default      reduce using rule 150 (motion_statement)

  motion_modifier  go to state 537

state 620

  79) program_call : var_or_indirect EQUAL _ function_call LPAREN args RPAREN

  WORD          shift, and go to state 154

  namespaces    go to state 155
  function_call  go to state 270
  ns            go to state 88

state 621

 160) motion_modifier : DOT swallow_newlines TIME_SEGMENT LPAREN time COMMA time_seg_actions RPAREN _

  $default      reduce using rule 160 (motion_modifier)

