state 3 contains 2 shift/reduce conflicts
state 51 contains 1 shift/reduce conflicts
state 59 contains 1 shift/reduce conflicts
state 61 contains 1 reduce/reduce conflicts
state 74 contains 2 shift/reduce conflicts
state 95 contains 2 shift/reduce conflicts
state 98 contains 1 shift/reduce conflicts
state 149 contains 1 reduce/reduce conflicts
state 173 contains 1 shift/reduce conflicts
state 177 contains 1 shift/reduce conflicts
state 188 contains 1 shift/reduce conflicts
state 267 contains 1 reduce/reduce conflicts
state 280 contains 1 shift/reduce conflicts
state 287 contains 1 shift/reduce conflicts
state 298 contains 1 shift/reduce conflicts
state 315 contains 14 shift/reduce conflicts
state 349 contains 1 shift/reduce conflicts
state 424 contains 1 shift/reduce conflicts
state 471 contains 1 shift/reduce conflicts

rule 136 (case_allowed_statement) never reduced
rule 137 (case_allowed_statement) never reduced
useless nonterminal case_allowed_statement

-------- Grammar --------

rule 1 program: statements
rule 2 program: 
rule 3 statements: statement terminator
rule 4 statements: statements statement terminator
rule 5 block: NEWLINE statements
rule 6 optional_newline: NEWLINE
rule 7 optional_newline: 
rule 8 statement: comment
rule 9 statement: message
rule 10 statement: definition
rule 11 statement: namespace
rule 12 statement: motion_statement
rule 13 statement: position_assignment
rule 14 statement: label_definition
rule 15 statement: address
rule 16 statement: conditional
rule 17 statement: inline_conditional
rule 18 statement: conditional_block
rule 19 statement: forloop
rule 20 statement: while_loop
rule 21 statement: use_statement
rule 22 statement: set_skip_statement
rule 23 statement: wait_statement
rule 24 statement: case_statement
rule 25 statement: fanuc_eval
rule 26 statement: timer_method
rule 27 statement: position_data
rule 28 statement: raise
rule 29 statement: tp_header_definition
rule 30 statement: lpos_or_jpos
rule 31 statement: empty_stmt
rule 32 statement: warning
rule 33 statement: var_system
rule 34 statement: PAUSE
rule 35 statement: ABORT
rule 36 statement: return_statement
rule 37 statement: collguard_statement
rule 38 statement: function
rule 39 statement: tp_application_definition
rule 40 statement: using_statement
rule 41 statement: import_statement
rule 42 statement: compile_statement
rule 43 lpos_or_jpos: LPOS LPAREN var_or_indirect RPAREN
rule 44 lpos_or_jpos: JPOS LPAREN var_or_indirect RPAREN
rule 45 empty_stmt: NEWLINE
rule 46 tp_header_definition: TP_HEADER EQUAL tp_header_value
rule 47 tp_header_value: STRING
rule 48 tp_header_value: TRUE_FALSE
rule 49 tp_header_value: ON_OFF
rule 50 tp_tool_methods: LBRACE sn tp_tool_attributes sn RBRACE
rule 51 tp_tool_methods: LBRACE sn RBRACE
rule 52 tp_tool_attributes: tp_tool_attribute
rule 53 tp_tool_attributes: tp_tool_attributes COMMA sn tp_tool_attribute
rule 54 tp_tool_attribute: WORD COLON hash_value
rule 55 tp_application_definition: TP_APPLICATION_TYPE EQUAL sn tp_tool_methods
rule 56 raise: RAISE var_or_indirect
rule 57 timer_method: TIMER_METHOD var_or_indirect
rule 58 fanuc_eval: EVAL STRING
rule 59 wait_statement: WAIT_FOR LPAREN indirectable COMMA STRING RPAREN
rule 60 wait_statement: WAIT_UNTIL LPAREN expression RPAREN
rule 61 wait_statement: WAIT_UNTIL LPAREN expression RPAREN DOT wait_modifier
rule 62 wait_statement: WAIT_UNTIL LPAREN expression RPAREN DOT wait_modifier DOT wait_modifier
rule 63 wait_modifier: timeout_modifier
rule 64 wait_modifier: after_modifier
rule 65 timeout_modifier: swallow_newlines TIMEOUT LPAREN label RPAREN
rule 66 after_modifier: swallow_newlines AFTER LPAREN indirectable COMMA STRING RPAREN
rule 67 label: LABEL
rule 68 group_statement: GROUP LPAREN integer RPAREN
rule 69 use_statement: FANUC_USE indirectable
rule 70 use_statement: FANUC_USE LPAREN indirectable RPAREN
rule 71 use_statement: FANUC_USE LPAREN indirectable COMMA group_statement RPAREN
rule 72 collguard_statement: COLL_GUARD optional_arg
rule 73 set_skip_statement: SET_SKIP_CONDITION expression
rule 74 function_call: WORD
rule 75 function_call: namespaces WORD
rule 76 program_call: function_call LPAREN args RPAREN
rule 77 program_call: RUN function_call LPAREN args RPAREN
rule 78 program_call: CALL var LPAREN args RPAREN
rule 79 program_call: var_or_indirect EQUAL function_call LPAREN args RPAREN
rule 80 args: arg
rule 81 args: args COMMA arg
rule 82 args: 
rule 83 arg: number
rule 84 arg: signed_number
rule 85 arg: var
rule 86 arg: string
rule 87 arg: address
rule 88 program_vars: program_var
rule 89 program_vars: program_vars COMMA program_var
rule 90 program_vars: 
rule 91 program_var: WORD
rule 92 return_statement: RETURN LPAREN expression RPAREN
rule 93 return_statement: RETURN
rule 94 string: STRING
rule 95 io_method: IO_METHOD var_or_indirect
rule 96 io_method: IO_METHOD LPAREN var_or_indirect RPAREN
rule 97 io_method: IO_METHOD LPAREN var_or_indirect COMMA number COMMA STRING RPAREN
rule 98 var_or_indirect: var
rule 99 var_or_indirect: indirect_thing
rule 100 var_or_indirect: var_system
rule 101 jump: JUMP label
rule 102 conditional: IF expression block elsif_conditions else_block END
rule 103 conditional: UNLESS expression block else_block END
rule 104 conditional_block: IF expression THEN block elsif_block else_block END
rule 105 elsif_conditions: elsif_condition
rule 106 elsif_conditions: elsif_conditions elsif_condition
rule 107 elsif_conditions: 
rule 108 elsif_condition: ELSIF expression block
rule 109 elsif_block: elsif_block_condition
rule 110 elsif_block: elsif_block elsif_block_condition
rule 111 elsif_block: 
rule 112 elsif_block_condition: ELSIF expression THEN block
rule 113 forloop: FOR var IN LPAREN int_or_var TO int_or_var RPAREN block END
rule 114 forloop: FOR var IN LPAREN int_or_var DOWNTO int_or_var RPAREN block END
rule 115 while_loop: WHILE expression block END
rule 116 int_or_var: integer
rule 117 int_or_var: var
rule 118 word_list: word_tuple
rule 119 word_list: word_list word_tuple
rule 120 word_tuple: COMMA WORD
rule 121 word_tuple: WORD
rule 122 using_statement: USING word_list
rule 123 compile_statement: COMPILE IMPORT word_list
rule 124 import_statement: IMPORT word_list
rule 125 namespace: NAMESPACE WORD block END
rule 126 function: FUNCTION WORD LPAREN program_vars RPAREN block END
rule 127 function: FUNCTION WORD LPAREN program_vars RPAREN COLON WORD block END
rule 128 case_statement: CASE var swallow_newlines case_conditions case_else END
rule 129 case_conditions: case_condition
rule 130 case_conditions: case_conditions case_condition
rule 131 case_condition: WHEN case_allowed_condition block
rule 132 case_allowed_condition: number
rule 133 case_allowed_condition: var
rule 134 case_else: ELSE block
rule 135 case_else: 
rule 136 case_allowed_statement: program_call
rule 137 case_allowed_statement: jump
rule 138 inline_conditional: inlineable
rule 139 inline_conditional: inlineable IF expression
rule 140 inline_conditional: inlineable UNLESS expression
rule 141 inlineable: jump
rule 142 inlineable: assignment
rule 143 inlineable: io_method
rule 144 inlineable: program_call
rule 145 else_block: ELSE block
rule 146 else_block: 
rule 147 motion_statement: MOVE DOT swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers
rule 148 motion_statement: MOVE DOT swallow_newlines MID LPAREN var_or_indirect RPAREN DOT swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers
rule 149 motion_modifiers: motion_modifier
rule 150 motion_modifiers: motion_modifiers motion_modifier
rule 151 motion_arguements: valid_terminations
rule 152 motion_arguements: valid_terminations COMMA valid_terminations
rule 153 motion_modifier: DOT swallow_newlines AT LPAREN speed RPAREN
rule 154 motion_modifier: DOT swallow_newlines ACC LPAREN int_or_var RPAREN
rule 155 motion_modifier: DOT swallow_newlines CR LPAREN motion_arguements RPAREN
rule 156 motion_modifier: DOT swallow_newlines TERM LPAREN valid_terminations RPAREN
rule 157 motion_modifier: DOT swallow_newlines OFFSET LPAREN var_or_indirect RPAREN
rule 158 motion_modifier: DOT swallow_newlines TIME_SEGMENT LPAREN time COMMA time_seg_actions RPAREN
rule 159 motion_modifier: DOT swallow_newlines SKIP LPAREN label optional_lpos_arg RPAREN
rule 160 motion_modifier: DOT swallow_newlines valid_motion_statements
rule 161 motion_modifier: DOT swallow_newlines single_argument_motion_modifiers LPAREN int_or_var RPAREN
rule 162 valid_motion_statements: COORD
rule 163 valid_motion_statements: MROT
rule 164 valid_motion_statements: PTH
rule 165 valid_motion_statements: INC
rule 166 valid_motion_statements: WJNT
rule 167 valid_motion_statements: BREAK
rule 168 valid_motion_statements: RTCP
rule 169 valid_motion_statements: FPLIN
rule 170 single_argument_motion_modifiers: CD
rule 171 single_argument_motion_modifiers: EV
rule 172 single_argument_motion_modifiers: INDEV
rule 173 single_argument_motion_modifiers: RT_LD
rule 174 single_argument_motion_modifiers: AP_LD
rule 175 single_argument_motion_modifiers: PSPD
rule 176 single_argument_motion_modifiers: CTV
rule 177 valid_terminations: integer
rule 178 valid_terminations: var
rule 179 valid_terminations: MINUS DIGIT
rule 180 optional_lpos_arg: COMMA var
rule 181 optional_lpos_arg: 
rule 182 indirectable: number
rule 183 indirectable: var
rule 184 optional_arg: number
rule 185 optional_arg: var
rule 186 optional_arg: 
rule 187 time_seg_actions: program_call
rule 188 time_seg_actions: io_method
rule 189 time: var
rule 190 time: number
rule 191 speed: indirectable COMMA STRING
rule 192 speed: STRING
rule 193 label_definition: label
rule 194 definition: WORD ASSIGN definable
rule 195 assignment: var_or_indirect EQUAL expression
rule 196 assignment: var_or_indirect PLUS EQUAL expression
rule 197 assignment: var_or_indirect MINUS EQUAL expression
rule 198 assignment: var_or_indirect STAR EQUAL expression
rule 199 assignment: var_or_indirect SLASH EQUAL expression
rule 200 position_assignment: DEFAULTPOS var_method_modifiers ARROW array
rule 201 position_assignment: var_or_indirect ARROW array
rule 202 position_assignment: LPAREN assignable_range RPAREN var_method_modifiers ARROW array
rule 203 position_assignment: assignable_range EQUAL assignable_range
rule 204 position_assignment: assignable_range EQUAL LPAREN assignable_range RPAREN pose_range_modifiers
rule 205 assignable_range: var RANGE var
rule 206 assignable_range: var
rule 207 var: var_without_namespaces
rule 208 var: var_with_namespaces
rule 209 var_without_namespaces: WORD
rule 210 var_without_namespaces: WORD var_method_modifiers
rule 211 var_with_namespaces: namespaces var_without_namespaces
rule 212 var_method_modifiers: var_method_modifier
rule 213 var_method_modifiers: var_method_modifiers var_method_modifier
rule 214 pose_range_modifiers: pose_range_modifier
rule 215 pose_range_modifiers: pose_range_modifiers pose_range_modifier
rule 216 pose_range_modifier: DOT swallow_newlines POSEREVERSE
rule 217 coord_system: SPHERE
rule 218 coord_system: POLAR
rule 219 coord_system: ORIGIN
rule 220 var_method_modifier: DOT swallow_newlines WORD
rule 221 var_method_modifier: DOT swallow_newlines group_statement
rule 222 var_method_modifier: DOT swallow_newlines POSEATTR
rule 223 var_method_modifier: DOT swallow_newlines OFFSET
rule 224 var_method_modifier: DOT swallow_newlines coord_system
rule 225 var_method_modifier: DOT swallow_newlines FIX
rule 226 var_system: SYSTEM WORD var_system_modifers
rule 227 var_system: SYSTEM WORD LBRACK integer RBRACK var_system_modifers
rule 228 var_system_modifers: var_system_modifer
rule 229 var_system_modifers: var_system_modifers var_system_modifer
rule 230 var_system_modifers: 
rule 231 var_system_modifer: DOT var_system
rule 232 namespaces: ns
rule 233 namespaces: namespaces ns
rule 234 ns: WORD COLON COLON
rule 235 expression: unary_expression
rule 236 expression: binary_expression
rule 237 unary_expression: factor
rule 238 unary_expression: address
rule 239 unary_expression: BANG factor
rule 240 binary_expression: expression operator expression
rule 241 operator: EEQUAL
rule 242 operator: NOTEQUAL
rule 243 operator: LT
rule 244 operator: GT
rule 245 operator: GTE
rule 246 operator: LTE
rule 247 operator: PLUS
rule 248 operator: MINUS
rule 249 operator: OR
rule 250 operator: STAR
rule 251 operator: SLASH
rule 252 operator: DIV
rule 253 operator: MOD
rule 254 operator: AND
rule 255 factor: number
rule 256 factor: signed_number
rule 257 factor: operation
rule 258 factor: var
rule 259 factor: signed_var
rule 260 factor: var_system
rule 261 factor: indirect_thing
rule 262 factor: paren_expr
rule 263 factor: booleans
rule 264 booleans: TRUE_FALSE
rule 265 booleans: ON_OFF
rule 266 paren_expr: LPAREN expression RPAREN
rule 267 indirect_thing: INDIRECT LPAREN STRING COMMA indirectable RPAREN
rule 268 indirect_thing: INDIRECT LPAREN STRING COMMA indirectable RPAREN var_method_modifiers
rule 269 signed_number: sign DIGIT
rule 270 signed_number: sign REAL
rule 271 signed_var: sign var
rule 272 sign: MINUS
rule 273 number: integer
rule 274 number: REAL
rule 275 integer: DIGIT
rule 276 definable: reg
rule 277 definable: number
rule 278 definable: signed_number
rule 279 definable: string
rule 280 definable: framereg
rule 281 definable: booleans
rule 282 definable_range: DIGIT RANGE DIGIT
rule 283 definable_range: DIGIT
rule 284 reg_types: SREG
rule 285 reg_types: UALM
rule 286 reg_types: TIMER
rule 287 reg_types: ARG
rule 288 reg_types: VREG
rule 289 reg_types: POSITION
rule 290 reg_types: NUMREG
rule 291 reg_types: POSREG
rule 292 reg_types: INPUT
rule 293 reg_types: OUTPUT
rule 294 reg: reg_types LBRACK definable_range RBRACK
rule 295 frametype: TOOLREG
rule 296 frametype: FRAMEREG
rule 297 framereg: frametype LBRACK DIGIT RBRACK
rule 298 operation: OPERATION LBRACK var_or_indirect RBRACK
rule 299 operation: OPERATION LBRACK var_or_indirect COMMA var_or_indirect RBRACK
rule 300 operation: OPERATION LBRACK signed_number RBRACK
rule 301 operation: OPERATION LBRACK number RBRACK
rule 302 address: ADDRESS var
rule 303 comment: COMMENT
rule 304 message: MESSAGE LPAREN STRING RPAREN
rule 305 warning: WARNING LPAREN STRING RPAREN
rule 306 terminator: NEWLINE
rule 307 terminator: comment optional_newline
rule 308 terminator: false
rule 309 terminator: 
rule 310 swallow_newlines: NEWLINE
rule 311 swallow_newlines: 
rule 312 position_data: POSITION_DATA sn hash sn END
rule 313 sn: swallow_newlines
rule 314 hash: LBRACE sn hash_attributes sn RBRACE
rule 315 hash: LBRACE sn RBRACE
rule 316 hash_attributes: hash_attribute
rule 317 hash_attributes: hash_attributes COMMA sn hash_attribute
rule 318 hash_attribute: STRING COLON hash_value
rule 319 hash_value: STRING
rule 320 hash_value: WORD
rule 321 hash_value: hash
rule 322 hash_value: array
rule 323 hash_value: optional_sign DIGIT
rule 324 hash_value: optional_sign REAL
rule 325 hash_value: TRUE_FALSE
rule 326 optional_sign: sign
rule 327 optional_sign: 
rule 328 array: LBRACK sn array_values sn RBRACK
rule 329 array_values: array_value
rule 330 array_values: array_values COMMA sn array_value
rule 331 array_value: hash_value

------- Symbols -------

**Nonterminals, with rules where they appear

  $start (132)
    on right: 
    on left : 
  program (133)
    on right: 
    on left : 1 2
  statements (134)
    on right: 1 4 5
    on left : 3 4
  statement (135)
    on right: 3 4
    on left : 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42
  terminator (136)
    on right: 3 4
    on left : 306 307 308 309
  block (137)
    on right: 102 103 104 108 112 113 114 115 125 126 127 131 134 145
    on left : 5
  optional_newline (138)
    on right: 307
    on left : 6 7
  comment (139)
    on right: 8 307
    on left : 303
  message (140)
    on right: 9
    on left : 304
  definition (141)
    on right: 10
    on left : 194
  namespace (142)
    on right: 11
    on left : 125
  motion_statement (143)
    on right: 12
    on left : 147 148
  position_assignment (144)
    on right: 13
    on left : 200 201 202 203 204
  label_definition (145)
    on right: 14
    on left : 193
  address (146)
    on right: 15 87 238
    on left : 302
  conditional (147)
    on right: 16
    on left : 102 103
  inline_conditional (148)
    on right: 17
    on left : 138 139 140
  conditional_block (149)
    on right: 18
    on left : 104
  forloop (150)
    on right: 19
    on left : 113 114
  while_loop (151)
    on right: 20
    on left : 115
  use_statement (152)
    on right: 21
    on left : 69 70 71
  set_skip_statement (153)
    on right: 22
    on left : 73
  wait_statement (154)
    on right: 23
    on left : 59 60 61 62
  case_statement (155)
    on right: 24
    on left : 128
  fanuc_eval (156)
    on right: 25
    on left : 58
  timer_method (157)
    on right: 26
    on left : 57
  position_data (158)
    on right: 27
    on left : 312
  raise (159)
    on right: 28
    on left : 56
  tp_header_definition (160)
    on right: 29
    on left : 46
  lpos_or_jpos (161)
    on right: 30
    on left : 43 44
  empty_stmt (162)
    on right: 31
    on left : 45
  warning (163)
    on right: 32
    on left : 305
  var_system (164)
    on right: 33 100 231 260
    on left : 226 227
  return_statement (165)
    on right: 36
    on left : 92 93
  collguard_statement (166)
    on right: 37
    on left : 72
  function (167)
    on right: 38
    on left : 126 127
  tp_application_definition (168)
    on right: 39
    on left : 55
  using_statement (169)
    on right: 40
    on left : 122
  import_statement (170)
    on right: 41
    on left : 124
  compile_statement (171)
    on right: 42
    on left : 123
  var_or_indirect (172)
    on right: 43 44 56 57 79 95 96 97 147 148 157 195 196 197 198 199 201 298 299
    on left : 98 99 100
  tp_header_value (173)
    on right: 46
    on left : 47 48 49
  tp_tool_methods (174)
    on right: 55
    on left : 50 51
  sn (175)
    on right: 50 51 53 55 312 314 315 317 328 330
    on left : 313
  tp_tool_attributes (176)
    on right: 50 53
    on left : 52 53
  tp_tool_attribute (177)
    on right: 52 53
    on left : 54
  hash_value (178)
    on right: 54 318 331
    on left : 319 320 321 322 323 324 325
  indirectable (179)
    on right: 59 66 69 70 71 191 267 268
    on left : 182 183
  expression (180)
    on right: 60 61 62 73 92 102 103 104 108 112 115 139 140 195 196 197 198 199 240 266
    on left : 235 236
  wait_modifier (181)
    on right: 61 62
    on left : 63 64
  timeout_modifier (182)
    on right: 63
    on left : 65
  after_modifier (183)
    on right: 64
    on left : 66
  swallow_newlines (184)
    on right: 65 66 128 147 148 153 154 155 156 157 158 159 160 161 216 220 221 222 223 224 225 313
    on left : 310 311
  label (185)
    on right: 65 101 159 193
    on left : 67
  group_statement (186)
    on right: 71 221
    on left : 68
  integer (187)
    on right: 68 116 177 227 273
    on left : 275
  optional_arg (188)
    on right: 72
    on left : 184 185 186
  function_call (189)
    on right: 76 77 79
    on left : 74 75
  namespaces (190)
    on right: 75 211 233
    on left : 232 233
  program_call (191)
    on right: 136 144 187
    on left : 76 77 78 79
  args (192)
    on right: 76 77 78 79 81
    on left : 80 81 82
  var (193)
    on right: 78 85 98 113 114 117 128 133 178 180 183 185 189 205 206 258 271 302
    on left : 207 208
  arg (194)
    on right: 80 81
    on left : 83 84 85 86 87
  number (195)
    on right: 83 97 132 182 184 190 255 277 301
    on left : 273 274
  signed_number (196)
    on right: 84 256 278 300
    on left : 269 270
  string (197)
    on right: 86 279
    on left : 94
  program_vars (198)
    on right: 89 126 127
    on left : 88 89 90
  program_var (199)
    on right: 88 89
    on left : 91
  io_method (200)
    on right: 143 188
    on left : 95 96 97
  indirect_thing (201)
    on right: 99 261
    on left : 267 268
  jump (202)
    on right: 137 141
    on left : 101
  elsif_conditions (203)
    on right: 102 106
    on left : 105 106 107
  else_block (204)
    on right: 102 103 104
    on left : 145 146
  elsif_block (205)
    on right: 104 110
    on left : 109 110 111
  elsif_condition (206)
    on right: 105 106
    on left : 108
  elsif_block_condition (207)
    on right: 109 110
    on left : 112
  int_or_var (208)
    on right: 113 114 154 161
    on left : 116 117
  word_list (209)
    on right: 119 122 123 124
    on left : 118 119
  word_tuple (210)
    on right: 118 119
    on left : 120 121
  case_conditions (211)
    on right: 128 130
    on left : 129 130
  case_else (212)
    on right: 128
    on left : 134 135
  case_condition (213)
    on right: 129 130
    on left : 131
  case_allowed_condition (214)
    on right: 131
    on left : 132 133
  case_allowed_statement (215)
    on right: 
    on left : 136 137
  inlineable (216)
    on right: 138 139 140
    on left : 141 142 143 144
  assignment (217)
    on right: 142
    on left : 195 196 197 198 199
  motion_modifiers (218)
    on right: 147 148 150
    on left : 149 150
  motion_modifier (219)
    on right: 149 150
    on left : 153 154 155 156 157 158 159 160 161
  motion_arguements (220)
    on right: 155
    on left : 151 152
  valid_terminations (221)
    on right: 151 152 156
    on left : 177 178 179
  speed (222)
    on right: 153
    on left : 191 192
  time (223)
    on right: 158
    on left : 189 190
  time_seg_actions (224)
    on right: 158
    on left : 187 188
  optional_lpos_arg (225)
    on right: 159
    on left : 180 181
  valid_motion_statements (226)
    on right: 160
    on left : 162 163 164 165 166 167 168 169
  single_argument_motion_modifiers (227)
    on right: 161
    on left : 170 171 172 173 174 175 176
  definable (228)
    on right: 194
    on left : 276 277 278 279 280 281
  var_method_modifiers (229)
    on right: 200 202 210 213 268
    on left : 212 213
  array (230)
    on right: 200 201 202 322
    on left : 328
  assignable_range (231)
    on right: 202 203 204
    on left : 205 206
  pose_range_modifiers (232)
    on right: 204 215
    on left : 214 215
  var_without_namespaces (233)
    on right: 207 211
    on left : 209 210
  var_with_namespaces (234)
    on right: 208
    on left : 211
  var_method_modifier (235)
    on right: 212 213
    on left : 220 221 222 223 224 225
  pose_range_modifier (236)
    on right: 214 215
    on left : 216
  coord_system (237)
    on right: 224
    on left : 217 218 219
  var_system_modifers (238)
    on right: 226 227 229
    on left : 228 229 230
  var_system_modifer (239)
    on right: 228 229
    on left : 231
  ns (240)
    on right: 232 233
    on left : 234
  unary_expression (241)
    on right: 235
    on left : 237 238 239
  binary_expression (242)
    on right: 236
    on left : 240
  factor (243)
    on right: 237 239
    on left : 255 256 257 258 259 260 261 262 263
  operator (244)
    on right: 240
    on left : 241 242 243 244 245 246 247 248 249 250 251 252 253 254
  operation (245)
    on right: 257
    on left : 298 299 300 301
  signed_var (246)
    on right: 259
    on left : 271
  paren_expr (247)
    on right: 262
    on left : 266
  booleans (248)
    on right: 263 281
    on left : 264 265
  sign (249)
    on right: 269 270 271 326
    on left : 272
  reg (250)
    on right: 276
    on left : 294
  framereg (251)
    on right: 280
    on left : 297
  definable_range (252)
    on right: 294
    on left : 282 283
  reg_types (253)
    on right: 294
    on left : 284 285 286 287 288 289 290 291 292 293
  frametype (254)
    on right: 297
    on left : 295 296
  hash (255)
    on right: 312 321
    on left : 314 315
  hash_attributes (256)
    on right: 314 317
    on left : 316 317
  hash_attribute (257)
    on right: 316 317
    on left : 318
  optional_sign (258)
    on right: 323 324
    on left : 326 327
  array_values (259)
    on right: 328 330
    on left : 329 330
  array_value (260)
    on right: 329 330
    on left : 331

**Terminals, with rules where they appear

  $end (0) 
  error (1) 
  ASSIGN (2) 194
  AT_SYM (3) 
  COMMENT (4) 303
  MESSAGE (5) 304
  WARNING (6) 305
  JUMP (7) 101
  IO_METHOD (8) 95 96 97
  INPUT (9) 292
  OUTPUT (10) 293
  NUMREG (11) 290
  POSREG (12) 291
  VREG (13) 288
  SREG (14) 284
  TIME_SEGMENT (15) 158
  ARG (16) 287
  UALM (17) 285
  TOOLREG (18) 295
  FRAMEREG (19) 296
  MOVE (20) 147 148
  DOT (21) 61 62 147 148 153 154 155 156 157 158 159 160 161 216 220 221 222 223 224 225 231
  TO (22) 113 147 148
  DOWNTO (23) 114
  MID (24) 148
  AT (25) 153
  ACC (26) 154
  TERM (27) 156
  OFFSET (28) 157 223
  SKIP (29) 159
  GROUP (30) 68
  COORD (31) 162
  MROT (32) 163
  PTH (33) 164
  WJNT (34) 166
  INC (35) 165
  BREAK (36) 167
  RTCP (37) 168
  FPLIN (38) 169
  AP_LD (39) 174
  RT_LD (40) 173
  CD (41) 170
  CR (42) 155
  INDEV (43) 172
  EV (44) 171
  PSPD (45) 175
  CTV (46) 176
  SEMICOLON (47) 
  NEWLINE (48) 5 6 45 306 310
  STRING (49) 47 58 59 66 94 97 191 192 267 268 304 305 318 319
  REAL (50) 270 274 324
  DIGIT (51) 179 269 275 282 283 297 323
  WORD (52) 54 74 75 91 120 121 125 126 127 194 209 210 220 226 227 234 320
  EQUAL (53) 46 55 79 195 196 197 198 199 203 204
  RANGE (54) 205 282
  EEQUAL (55) 241
  NOTEQUAL (56) 242
  GTE (57) 245
  LTE (58) 246
  LT (59) 243
  GT (60) 244
  BANG (61) 239
  PLUS (62) 196 247
  MINUS (63) 179 197 248 272
  STAR (64) 198 250
  SLASH (65) 199 251
  DIV (66) 252
  AND (67) 254
  OR (68) 249
  MOD (69) 253
  IF (70) 102 104 139
  THEN (71) 104 112
  ELSE (72) 134 145
  ELSIF (73) 108 112
  END (74) 102 103 104 113 114 115 125 126 127 128 312
  UNLESS (75) 103 140
  FOR (76) 113 114
  IN (77) 113 114
  WHILE (78) 115
  WAIT_FOR (79) 59
  WAIT_UNTIL (80) 60 61 62
  TIMEOUT (81) 65
  AFTER (82) 66
  FANUC_USE (83) 69 70 71
  COLL_GUARD (84) 72
  SET_SKIP_CONDITION (85) 73
  NAMESPACE (86) 125
  CASE (87) 128
  WHEN (88) 131
  INDIRECT (89) 267 268
  POSITION (90) 289
  EVAL (91) 58
  TIMER (92) 286
  TIMER_METHOD (93) 57
  RAISE (94) 56
  ABORT (95) 35
  RETURN (96) 92 93
  POSITION_DATA (97) 312
  TRUE_FALSE (98) 48 264 325
  ON_OFF (99) 49 265
  CALL (100) 78
  RUN (101) 77
  PAUSE (102) 34
  TP_HEADER (103) 46
  TP_APPLICATION_TYPE (104) 55
  LPAREN (105) 43 44 59 60 61 62 65 66 68 70 71 76 77 78 79 92 96 97 113 114 126 127 147 148 153 154 155 156 157 158 159 161 202 204 266 267 268 304 305
  RPAREN (106) 43 44 59 60 61 62 65 66 68 70 71 76 77 78 79 92 96 97 113 114 126 127 147 148 153 154 155 156 157 158 159 161 202 204 266 267 268 304 305
  COLON (107) 54 127 234 318
  COMMA (108) 53 59 66 71 81 89 97 120 152 158 180 191 267 268 299 317 330
  LBRACK (109) 227 294 297 298 299 300 301 328
  RBRACK (110) 227 294 297 298 299 300 301 328
  LBRACE (111) 50 51 314 315
  RBRACE (112) 50 51 314 315
  LABEL (113) 67
  SYSTEM (114) 226 227
  ADDRESS (115) 302
  LPOS (116) 43
  JPOS (117) 44
  false (118) 308
  FUNCTION (119) 126 127
  OPERATION (120) 298 299 300 301
  USING (121) 122
  IMPORT (122) 123 124
  COMPILE (123) 123
  ARROW (124) 200 201 202
  DEFAULTPOS (125) 200
  POSEATTR (126) 222
  POSEREVERSE (127) 216
  SPHERE (128) 217
  POLAR (129) 218
  ORIGIN (130) 219
  FIX (131) 225

--------- State ---------

state 0


  COMMENT       shift, and go to state 90
  MESSAGE       shift, and go to state 91
  WARNING       shift, and go to state 92
  JUMP          shift, and go to state 63
  IO_METHOD     shift, and go to state 60
  MOVE          shift, and go to state 79
  NEWLINE       shift, and go to state 41
  WORD          shift, and go to state 53
  IF            shift, and go to state 64
  UNLESS        shift, and go to state 65
  FOR           shift, and go to state 66
  WHILE         shift, and go to state 67
  WAIT_FOR      shift, and go to state 47
  WAIT_UNTIL    shift, and go to state 48
  FANUC_USE     shift, and go to state 50
  COLL_GUARD    shift, and go to state 51
  SET_SKIP_CONDITION  shift, and go to state 52
  NAMESPACE     shift, and go to state 71
  CASE          shift, and go to state 73
  INDIRECT      shift, and go to state 88
  EVAL          shift, and go to state 46
  TIMER_METHOD  shift, and go to state 45
  RAISE         shift, and go to state 44
  ABORT         shift, and go to state 31
  RETURN        shift, and go to state 59
  POSITION_DATA  shift, and go to state 93
  CALL          shift, and go to state 57
  RUN           shift, and go to state 56
  PAUSE         shift, and go to state 30
  TP_HEADER     shift, and go to state 42
  TP_APPLICATION_TYPE  shift, and go to state 43
  LPAREN        shift, and go to state 82
  LABEL         shift, and go to state 49
  SYSTEM        shift, and go to state 86
  ADDRESS       shift, and go to state 89
  LPOS          shift, and go to state 39
  JPOS          shift, and go to state 40
  FUNCTION      shift, and go to state 72
  USING         shift, and go to state 68
  IMPORT        shift, and go to state 70
  COMPILE       shift, and go to state 69
  DEFAULTPOS    shift, and go to state 81
  $default      reduce using rule 2 (program)

  program       go to state 1
  statements    go to state 2
  statement     go to state 3
  comment       go to state 4
  message       go to state 5
  definition    go to state 6
  namespace     go to state 7
  motion_statement  go to state 8
  position_assignment  go to state 9
  label_definition  go to state 10
  address       go to state 11
  conditional   go to state 12
  inline_conditional  go to state 13
  conditional_block  go to state 14
  forloop       go to state 15
  while_loop    go to state 16
  use_statement  go to state 17
  set_skip_statement  go to state 18
  wait_statement  go to state 19
  case_statement  go to state 20
  fanuc_eval    go to state 21
  timer_method  go to state 22
  position_data  go to state 23
  raise         go to state 24
  tp_header_definition  go to state 25
  lpos_or_jpos  go to state 26
  empty_stmt    go to state 27
  warning       go to state 28
  var_system    go to state 29
  return_statement  go to state 32
  collguard_statement  go to state 33
  function      go to state 34
  tp_application_definition  go to state 35
  using_statement  go to state 36
  import_statement  go to state 37
  compile_statement  go to state 38
  namespaces    go to state 54
  function_call  go to state 55
  var_or_indirect  go to state 58
  var           go to state 61
  indirect_thing  go to state 62
  inlineable    go to state 74
  jump          go to state 75
  assignment    go to state 76
  io_method     go to state 77
  program_call  go to state 78
  label         go to state 80
  assignable_range  go to state 83
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  ns            go to state 87

state 1


  $end          shift, and go to state 94


state 2

   1) program : statements _
   4) statements : statements _ statement terminator

  COMMENT       shift, and go to state 90
  MESSAGE       shift, and go to state 91
  WARNING       shift, and go to state 92
  JUMP          shift, and go to state 63
  IO_METHOD     shift, and go to state 60
  MOVE          shift, and go to state 79
  NEWLINE       shift, and go to state 41
  WORD          shift, and go to state 53
  IF            shift, and go to state 64
  UNLESS        shift, and go to state 65
  FOR           shift, and go to state 66
  WHILE         shift, and go to state 67
  WAIT_FOR      shift, and go to state 47
  WAIT_UNTIL    shift, and go to state 48
  FANUC_USE     shift, and go to state 50
  COLL_GUARD    shift, and go to state 51
  SET_SKIP_CONDITION  shift, and go to state 52
  NAMESPACE     shift, and go to state 71
  CASE          shift, and go to state 73
  INDIRECT      shift, and go to state 88
  EVAL          shift, and go to state 46
  TIMER_METHOD  shift, and go to state 45
  RAISE         shift, and go to state 44
  ABORT         shift, and go to state 31
  RETURN        shift, and go to state 59
  POSITION_DATA  shift, and go to state 93
  CALL          shift, and go to state 57
  RUN           shift, and go to state 56
  PAUSE         shift, and go to state 30
  TP_HEADER     shift, and go to state 42
  TP_APPLICATION_TYPE  shift, and go to state 43
  LPAREN        shift, and go to state 82
  LABEL         shift, and go to state 49
  SYSTEM        shift, and go to state 86
  ADDRESS       shift, and go to state 89
  LPOS          shift, and go to state 39
  JPOS          shift, and go to state 40
  FUNCTION      shift, and go to state 72
  USING         shift, and go to state 68
  IMPORT        shift, and go to state 70
  COMPILE       shift, and go to state 69
  DEFAULTPOS    shift, and go to state 81
  $default      reduce using rule 1 (program)

  statement     go to state 95
  comment       go to state 4
  message       go to state 5
  definition    go to state 6
  namespace     go to state 7
  motion_statement  go to state 8
  position_assignment  go to state 9
  label_definition  go to state 10
  address       go to state 11
  conditional   go to state 12
  inline_conditional  go to state 13
  conditional_block  go to state 14
  forloop       go to state 15
  while_loop    go to state 16
  use_statement  go to state 17
  set_skip_statement  go to state 18
  wait_statement  go to state 19
  case_statement  go to state 20
  fanuc_eval    go to state 21
  timer_method  go to state 22
  position_data  go to state 23
  raise         go to state 24
  tp_header_definition  go to state 25
  lpos_or_jpos  go to state 26
  empty_stmt    go to state 27
  warning       go to state 28
  var_system    go to state 29
  return_statement  go to state 32
  collguard_statement  go to state 33
  function      go to state 34
  tp_application_definition  go to state 35
  using_statement  go to state 36
  import_statement  go to state 37
  compile_statement  go to state 38
  namespaces    go to state 54
  function_call  go to state 55
  var_or_indirect  go to state 58
  var           go to state 61
  indirect_thing  go to state 62
  inlineable    go to state 74
  jump          go to state 75
  assignment    go to state 76
  io_method     go to state 77
  program_call  go to state 78
  label         go to state 80
  assignable_range  go to state 83
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  ns            go to state 87

state 3

   3) statements : statement _ terminator

  COMMENT       shift, and go to state 90
  COMMENT       [reduce using rule 309 (terminator)]
  NEWLINE       shift, and go to state 97
  NEWLINE       [reduce using rule 309 (terminator)]
  false         shift, and go to state 99
  $default      reduce using rule 309 (terminator)

  terminator    go to state 96
  comment       go to state 98

state 4

   8) statement : comment _

  $default      reduce using rule 8 (statement)


state 5

   9) statement : message _

  $default      reduce using rule 9 (statement)


state 6

  10) statement : definition _

  $default      reduce using rule 10 (statement)


state 7

  11) statement : namespace _

  $default      reduce using rule 11 (statement)


state 8

  12) statement : motion_statement _

  $default      reduce using rule 12 (statement)


state 9

  13) statement : position_assignment _

  $default      reduce using rule 13 (statement)


state 10

  14) statement : label_definition _

  $default      reduce using rule 14 (statement)


state 11

  15) statement : address _

  $default      reduce using rule 15 (statement)


state 12

  16) statement : conditional _

  $default      reduce using rule 16 (statement)


state 13

  17) statement : inline_conditional _

  $default      reduce using rule 17 (statement)


state 14

  18) statement : conditional_block _

  $default      reduce using rule 18 (statement)


state 15

  19) statement : forloop _

  $default      reduce using rule 19 (statement)


state 16

  20) statement : while_loop _

  $default      reduce using rule 20 (statement)


state 17

  21) statement : use_statement _

  $default      reduce using rule 21 (statement)


state 18

  22) statement : set_skip_statement _

  $default      reduce using rule 22 (statement)


state 19

  23) statement : wait_statement _

  $default      reduce using rule 23 (statement)


state 20

  24) statement : case_statement _

  $default      reduce using rule 24 (statement)


state 21

  25) statement : fanuc_eval _

  $default      reduce using rule 25 (statement)


state 22

  26) statement : timer_method _

  $default      reduce using rule 26 (statement)


state 23

  27) statement : position_data _

  $default      reduce using rule 27 (statement)


state 24

  28) statement : raise _

  $default      reduce using rule 28 (statement)


state 25

  29) statement : tp_header_definition _

  $default      reduce using rule 29 (statement)


state 26

  30) statement : lpos_or_jpos _

  $default      reduce using rule 30 (statement)


state 27

  31) statement : empty_stmt _

  $default      reduce using rule 31 (statement)


state 28

  32) statement : warning _

  $default      reduce using rule 32 (statement)


state 29

  33) statement : var_system _
 100) var_or_indirect : var_system _

  EQUAL         reduce using rule 100 (var_or_indirect)
  PLUS          reduce using rule 100 (var_or_indirect)
  MINUS         reduce using rule 100 (var_or_indirect)
  STAR          reduce using rule 100 (var_or_indirect)
  SLASH         reduce using rule 100 (var_or_indirect)
  ARROW         reduce using rule 100 (var_or_indirect)
  $default      reduce using rule 33 (statement)


state 30

  34) statement : PAUSE _

  $default      reduce using rule 34 (statement)


state 31

  35) statement : ABORT _

  $default      reduce using rule 35 (statement)


state 32

  36) statement : return_statement _

  $default      reduce using rule 36 (statement)


state 33

  37) statement : collguard_statement _

  $default      reduce using rule 37 (statement)


state 34

  38) statement : function _

  $default      reduce using rule 38 (statement)


state 35

  39) statement : tp_application_definition _

  $default      reduce using rule 39 (statement)


state 36

  40) statement : using_statement _

  $default      reduce using rule 40 (statement)


state 37

  41) statement : import_statement _

  $default      reduce using rule 41 (statement)


state 38

  42) statement : compile_statement _

  $default      reduce using rule 42 (statement)


state 39

  43) lpos_or_jpos : LPOS _ LPAREN var_or_indirect RPAREN

  LPAREN        shift, and go to state 100


state 40

  44) lpos_or_jpos : JPOS _ LPAREN var_or_indirect RPAREN

  LPAREN        shift, and go to state 101


state 41

  45) empty_stmt : NEWLINE _

  $default      reduce using rule 45 (empty_stmt)


state 42

  46) tp_header_definition : TP_HEADER _ EQUAL tp_header_value

  EQUAL         shift, and go to state 102


state 43

  55) tp_application_definition : TP_APPLICATION_TYPE _ EQUAL sn tp_tool_methods

  EQUAL         shift, and go to state 103


state 44

  56) raise : RAISE _ var_or_indirect

  WORD          shift, and go to state 107
  INDIRECT      shift, and go to state 88
  SYSTEM        shift, and go to state 86

  var_or_indirect  go to state 104
  var           go to state 105
  indirect_thing  go to state 62
  var_system    go to state 106
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87

state 45

  57) timer_method : TIMER_METHOD _ var_or_indirect

  WORD          shift, and go to state 107
  INDIRECT      shift, and go to state 88
  SYSTEM        shift, and go to state 86

  var_or_indirect  go to state 109
  var           go to state 105
  indirect_thing  go to state 62
  var_system    go to state 106
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87

state 46

  58) fanuc_eval : EVAL _ STRING

  STRING        shift, and go to state 110


state 47

  59) wait_statement : WAIT_FOR _ LPAREN indirectable COMMA STRING RPAREN

  LPAREN        shift, and go to state 111


state 48

  60) wait_statement : WAIT_UNTIL _ LPAREN expression RPAREN
  61) wait_statement : WAIT_UNTIL _ LPAREN expression RPAREN DOT wait_modifier
  62) wait_statement : WAIT_UNTIL _ LPAREN expression RPAREN DOT wait_modifier DOT wait_modifier

  LPAREN        shift, and go to state 112


state 49

  67) label : LABEL _

  $default      reduce using rule 67 (label)


state 50

  69) use_statement : FANUC_USE _ indirectable
  70) use_statement : FANUC_USE _ LPAREN indirectable RPAREN
  71) use_statement : FANUC_USE _ LPAREN indirectable COMMA group_statement RPAREN

  REAL          shift, and go to state 118
  DIGIT         shift, and go to state 119
  WORD          shift, and go to state 107
  LPAREN        shift, and go to state 114

  indirectable  go to state 113
  number        go to state 115
  var           go to state 116
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87
  integer       go to state 117

state 51

  72) collguard_statement : COLL_GUARD _ optional_arg

  REAL          shift, and go to state 118
  DIGIT         shift, and go to state 119
  WORD          shift, and go to state 107
  WORD          [reduce using rule 186 (optional_arg)]
  $default      reduce using rule 186 (optional_arg)

  optional_arg  go to state 120
  number        go to state 121
  var           go to state 122
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87
  integer       go to state 117

state 52

  73) set_skip_statement : SET_SKIP_CONDITION _ expression

  REAL          shift, and go to state 118
  DIGIT         shift, and go to state 119
  WORD          shift, and go to state 107
  BANG          shift, and go to state 128
  MINUS         shift, and go to state 142
  INDIRECT      shift, and go to state 88
  TRUE_FALSE    shift, and go to state 138
  ON_OFF        shift, and go to state 139
  LPAREN        shift, and go to state 140
  SYSTEM        shift, and go to state 86
  ADDRESS       shift, and go to state 89
  OPERATION     shift, and go to state 143

  expression    go to state 123
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87
  unary_expression  go to state 124
  binary_expression  go to state 125
  factor        go to state 126
  address       go to state 127
  number        go to state 129
  signed_number  go to state 130
  operation     go to state 131
  var           go to state 132
  signed_var    go to state 133
  var_system    go to state 134
  indirect_thing  go to state 135
  paren_expr    go to state 136
  booleans      go to state 137
  sign          go to state 141
  integer       go to state 117

state 53

  74) function_call : WORD _
 194) definition : WORD _ ASSIGN definable
 209) var_without_namespaces : WORD _
 210) var_without_namespaces : WORD _ var_method_modifiers
 234) ns : WORD _ COLON COLON

  ASSIGN        shift, and go to state 144
  DOT           shift, and go to state 147
  COLON         shift, and go to state 148
  LPAREN        reduce using rule 74 (function_call)
  $default      reduce using rule 209 (var_without_namespaces)

  var_method_modifiers  go to state 145
  var_method_modifier  go to state 146

state 54

  75) function_call : namespaces _ WORD
 211) var_with_namespaces : namespaces _ var_without_namespaces
 233) namespaces : namespaces _ ns

  WORD          shift, and go to state 149

  var_without_namespaces  go to state 150
  ns            go to state 151

state 55

  76) program_call : function_call _ LPAREN args RPAREN

  LPAREN        shift, and go to state 152


state 56

  77) program_call : RUN _ function_call LPAREN args RPAREN

  WORD          shift, and go to state 153

  namespaces    go to state 154
  function_call  go to state 155
  ns            go to state 87

state 57

  78) program_call : CALL _ var LPAREN args RPAREN

  WORD          shift, and go to state 107

  var           go to state 156
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87

state 58

  79) program_call : var_or_indirect _ EQUAL function_call LPAREN args RPAREN
 195) assignment : var_or_indirect _ EQUAL expression
 196) assignment : var_or_indirect _ PLUS EQUAL expression
 197) assignment : var_or_indirect _ MINUS EQUAL expression
 198) assignment : var_or_indirect _ STAR EQUAL expression
 199) assignment : var_or_indirect _ SLASH EQUAL expression
 201) position_assignment : var_or_indirect _ ARROW array

  EQUAL         shift, and go to state 157
  PLUS          shift, and go to state 158
  MINUS         shift, and go to state 159
  STAR          shift, and go to state 160
  SLASH         shift, and go to state 161
  ARROW         shift, and go to state 162


state 59

  92) return_statement : RETURN _ LPAREN expression RPAREN
  93) return_statement : RETURN _

  LPAREN        shift, and go to state 163
  LPAREN        [reduce using rule 93 (return_statement)]
  $default      reduce using rule 93 (return_statement)


state 60

  95) io_method : IO_METHOD _ var_or_indirect
  96) io_method : IO_METHOD _ LPAREN var_or_indirect RPAREN
  97) io_method : IO_METHOD _ LPAREN var_or_indirect COMMA number COMMA STRING RPAREN

  WORD          shift, and go to state 107
  INDIRECT      shift, and go to state 88
  LPAREN        shift, and go to state 165
  SYSTEM        shift, and go to state 86

  var_or_indirect  go to state 164
  var           go to state 105
  indirect_thing  go to state 62
  var_system    go to state 106
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87

state 61

  98) var_or_indirect : var _
 205) assignable_range : var _ RANGE var
 206) assignable_range : var _

  RANGE         shift, and go to state 166
  EQUAL         [reduce using rule 206 (assignable_range)]
  $default      reduce using rule 98 (var_or_indirect)


state 62

  99) var_or_indirect : indirect_thing _

  $default      reduce using rule 99 (var_or_indirect)


state 63

 101) jump : JUMP _ label

  LABEL         shift, and go to state 49

  label         go to state 167

state 64

 102) conditional : IF _ expression block elsif_conditions else_block END
 104) conditional_block : IF _ expression THEN block elsif_block else_block END

  REAL          shift, and go to state 118
  DIGIT         shift, and go to state 119
  WORD          shift, and go to state 107
  BANG          shift, and go to state 128
  MINUS         shift, and go to state 142
  INDIRECT      shift, and go to state 88
  TRUE_FALSE    shift, and go to state 138
  ON_OFF        shift, and go to state 139
  LPAREN        shift, and go to state 140
  SYSTEM        shift, and go to state 86
  ADDRESS       shift, and go to state 89
  OPERATION     shift, and go to state 143

  expression    go to state 168
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87
  unary_expression  go to state 124
  binary_expression  go to state 125
  factor        go to state 126
  address       go to state 127
  number        go to state 129
  signed_number  go to state 130
  operation     go to state 131
  var           go to state 132
  signed_var    go to state 133
  var_system    go to state 134
  indirect_thing  go to state 135
  paren_expr    go to state 136
  booleans      go to state 137
  sign          go to state 141
  integer       go to state 117

state 65

 103) conditional : UNLESS _ expression block else_block END

  REAL          shift, and go to state 118
  DIGIT         shift, and go to state 119
  WORD          shift, and go to state 107
  BANG          shift, and go to state 128
  MINUS         shift, and go to state 142
  INDIRECT      shift, and go to state 88
  TRUE_FALSE    shift, and go to state 138
  ON_OFF        shift, and go to state 139
  LPAREN        shift, and go to state 140
  SYSTEM        shift, and go to state 86
  ADDRESS       shift, and go to state 89
  OPERATION     shift, and go to state 143

  expression    go to state 169
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87
  unary_expression  go to state 124
  binary_expression  go to state 125
  factor        go to state 126
  address       go to state 127
  number        go to state 129
  signed_number  go to state 130
  operation     go to state 131
  var           go to state 132
  signed_var    go to state 133
  var_system    go to state 134
  indirect_thing  go to state 135
  paren_expr    go to state 136
  booleans      go to state 137
  sign          go to state 141
  integer       go to state 117

state 66

 113) forloop : FOR _ var IN LPAREN int_or_var TO int_or_var RPAREN block END
 114) forloop : FOR _ var IN LPAREN int_or_var DOWNTO int_or_var RPAREN block END

  WORD          shift, and go to state 107

  var           go to state 170
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87

state 67

 115) while_loop : WHILE _ expression block END

  REAL          shift, and go to state 118
  DIGIT         shift, and go to state 119
  WORD          shift, and go to state 107
  BANG          shift, and go to state 128
  MINUS         shift, and go to state 142
  INDIRECT      shift, and go to state 88
  TRUE_FALSE    shift, and go to state 138
  ON_OFF        shift, and go to state 139
  LPAREN        shift, and go to state 140
  SYSTEM        shift, and go to state 86
  ADDRESS       shift, and go to state 89
  OPERATION     shift, and go to state 143

  expression    go to state 171
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87
  unary_expression  go to state 124
  binary_expression  go to state 125
  factor        go to state 126
  address       go to state 127
  number        go to state 129
  signed_number  go to state 130
  operation     go to state 131
  var           go to state 132
  signed_var    go to state 133
  var_system    go to state 134
  indirect_thing  go to state 135
  paren_expr    go to state 136
  booleans      go to state 137
  sign          go to state 141
  integer       go to state 117

state 68

 122) using_statement : USING _ word_list

  WORD          shift, and go to state 175
  COMMA         shift, and go to state 174

  word_tuple    go to state 172
  word_list     go to state 173

state 69

 123) compile_statement : COMPILE _ IMPORT word_list

  IMPORT        shift, and go to state 176


state 70

 124) import_statement : IMPORT _ word_list

  WORD          shift, and go to state 175
  COMMA         shift, and go to state 174

  word_tuple    go to state 172
  word_list     go to state 177

state 71

 125) namespace : NAMESPACE _ WORD block END

  WORD          shift, and go to state 178


state 72

 126) function : FUNCTION _ WORD LPAREN program_vars RPAREN block END
 127) function : FUNCTION _ WORD LPAREN program_vars RPAREN COLON WORD block END

  WORD          shift, and go to state 179


state 73

 128) case_statement : CASE _ var swallow_newlines case_conditions case_else END

  WORD          shift, and go to state 107

  var           go to state 180
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87

state 74

 138) inline_conditional : inlineable _
 139) inline_conditional : inlineable _ IF expression
 140) inline_conditional : inlineable _ UNLESS expression

  IF            shift, and go to state 181
  IF            [reduce using rule 138 (inline_conditional)]
  UNLESS        shift, and go to state 182
  UNLESS        [reduce using rule 138 (inline_conditional)]
  $default      reduce using rule 138 (inline_conditional)


state 75

 141) inlineable : jump _

  $default      reduce using rule 141 (inlineable)


state 76

 142) inlineable : assignment _

  $default      reduce using rule 142 (inlineable)


state 77

 143) inlineable : io_method _

  $default      reduce using rule 143 (inlineable)


state 78

 144) inlineable : program_call _

  $default      reduce using rule 144 (inlineable)


state 79

 147) motion_statement : MOVE _ DOT swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers
 148) motion_statement : MOVE _ DOT swallow_newlines MID LPAREN var_or_indirect RPAREN DOT swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers

  DOT           shift, and go to state 183


state 80

 193) label_definition : label _

  $default      reduce using rule 193 (label_definition)


state 81

 200) position_assignment : DEFAULTPOS _ var_method_modifiers ARROW array

  DOT           shift, and go to state 147

  var_method_modifiers  go to state 184
  var_method_modifier  go to state 146

state 82

 202) position_assignment : LPAREN _ assignable_range RPAREN var_method_modifiers ARROW array

  WORD          shift, and go to state 107

  assignable_range  go to state 185
  var           go to state 186
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87

state 83

 203) position_assignment : assignable_range _ EQUAL assignable_range
 204) position_assignment : assignable_range _ EQUAL LPAREN assignable_range RPAREN pose_range_modifiers

  EQUAL         shift, and go to state 187


state 84

 207) var : var_without_namespaces _

  $default      reduce using rule 207 (var)


state 85

 208) var : var_with_namespaces _

  $default      reduce using rule 208 (var)


state 86

 226) var_system : SYSTEM _ WORD var_system_modifers
 227) var_system : SYSTEM _ WORD LBRACK integer RBRACK var_system_modifers

  WORD          shift, and go to state 188


state 87

 232) namespaces : ns _

  $default      reduce using rule 232 (namespaces)


state 88

 267) indirect_thing : INDIRECT _ LPAREN STRING COMMA indirectable RPAREN
 268) indirect_thing : INDIRECT _ LPAREN STRING COMMA indirectable RPAREN var_method_modifiers

  LPAREN        shift, and go to state 189


state 89

 302) address : ADDRESS _ var

  WORD          shift, and go to state 107

  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87
  var           go to state 190

state 90

 303) comment : COMMENT _

  $default      reduce using rule 303 (comment)


state 91

 304) message : MESSAGE _ LPAREN STRING RPAREN

  LPAREN        shift, and go to state 191


state 92

 305) warning : WARNING _ LPAREN STRING RPAREN

  LPAREN        shift, and go to state 192


state 93

 312) position_data : POSITION_DATA _ sn hash sn END

  NEWLINE       shift, and go to state 193
  $default      reduce using rule 311 (swallow_newlines)

  sn            go to state 194
  swallow_newlines  go to state 195

state 94


  $end          shift, and go to state 196


state 95

   4) statements : statements statement _ terminator

  COMMENT       shift, and go to state 90
  COMMENT       [reduce using rule 309 (terminator)]
  NEWLINE       shift, and go to state 97
  NEWLINE       [reduce using rule 309 (terminator)]
  false         shift, and go to state 99
  $default      reduce using rule 309 (terminator)

  terminator    go to state 197
  comment       go to state 98

state 96

   3) statements : statement terminator _

  $default      reduce using rule 3 (statements)


state 97

 306) terminator : NEWLINE _

  $default      reduce using rule 306 (terminator)


state 98

 307) terminator : comment _ optional_newline

  NEWLINE       shift, and go to state 198
  NEWLINE       [reduce using rule 7 (optional_newline)]
  $default      reduce using rule 7 (optional_newline)

  optional_newline  go to state 199

state 99

 308) terminator : false _

  $default      reduce using rule 308 (terminator)


state 100

  43) lpos_or_jpos : LPOS LPAREN _ var_or_indirect RPAREN

  WORD          shift, and go to state 107
  INDIRECT      shift, and go to state 88
  SYSTEM        shift, and go to state 86

  var_or_indirect  go to state 200
  var           go to state 105
  indirect_thing  go to state 62
  var_system    go to state 106
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87

state 101

  44) lpos_or_jpos : JPOS LPAREN _ var_or_indirect RPAREN

  WORD          shift, and go to state 107
  INDIRECT      shift, and go to state 88
  SYSTEM        shift, and go to state 86

  var_or_indirect  go to state 201
  var           go to state 105
  indirect_thing  go to state 62
  var_system    go to state 106
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87

state 102

  46) tp_header_definition : TP_HEADER EQUAL _ tp_header_value

  STRING        shift, and go to state 203
  TRUE_FALSE    shift, and go to state 204
  ON_OFF        shift, and go to state 205

  tp_header_value  go to state 202

state 103

  55) tp_application_definition : TP_APPLICATION_TYPE EQUAL _ sn tp_tool_methods

  NEWLINE       shift, and go to state 193
  $default      reduce using rule 311 (swallow_newlines)

  sn            go to state 206
  swallow_newlines  go to state 195

state 104

  56) raise : RAISE var_or_indirect _

  $default      reduce using rule 56 (raise)


state 105

  98) var_or_indirect : var _

  $default      reduce using rule 98 (var_or_indirect)


state 106

 100) var_or_indirect : var_system _

  $default      reduce using rule 100 (var_or_indirect)


state 107

 209) var_without_namespaces : WORD _
 210) var_without_namespaces : WORD _ var_method_modifiers
 234) ns : WORD _ COLON COLON

  DOT           shift, and go to state 147
  COLON         shift, and go to state 148
  $default      reduce using rule 209 (var_without_namespaces)

  var_method_modifiers  go to state 145
  var_method_modifier  go to state 146

state 108

 211) var_with_namespaces : namespaces _ var_without_namespaces
 233) namespaces : namespaces _ ns

  WORD          shift, and go to state 107

  var_without_namespaces  go to state 150
  ns            go to state 151

state 109

  57) timer_method : TIMER_METHOD var_or_indirect _

  $default      reduce using rule 57 (timer_method)


state 110

  58) fanuc_eval : EVAL STRING _

  $default      reduce using rule 58 (fanuc_eval)


state 111

  59) wait_statement : WAIT_FOR LPAREN _ indirectable COMMA STRING RPAREN

  REAL          shift, and go to state 118
  DIGIT         shift, and go to state 119
  WORD          shift, and go to state 107

  indirectable  go to state 207
  number        go to state 115
  var           go to state 116
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87
  integer       go to state 117

state 112

  60) wait_statement : WAIT_UNTIL LPAREN _ expression RPAREN
  61) wait_statement : WAIT_UNTIL LPAREN _ expression RPAREN DOT wait_modifier
  62) wait_statement : WAIT_UNTIL LPAREN _ expression RPAREN DOT wait_modifier DOT wait_modifier

  REAL          shift, and go to state 118
  DIGIT         shift, and go to state 119
  WORD          shift, and go to state 107
  BANG          shift, and go to state 128
  MINUS         shift, and go to state 142
  INDIRECT      shift, and go to state 88
  TRUE_FALSE    shift, and go to state 138
  ON_OFF        shift, and go to state 139
  LPAREN        shift, and go to state 140
  SYSTEM        shift, and go to state 86
  ADDRESS       shift, and go to state 89
  OPERATION     shift, and go to state 143

  expression    go to state 208
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87
  unary_expression  go to state 124
  binary_expression  go to state 125
  factor        go to state 126
  address       go to state 127
  number        go to state 129
  signed_number  go to state 130
  operation     go to state 131
  var           go to state 132
  signed_var    go to state 133
  var_system    go to state 134
  indirect_thing  go to state 135
  paren_expr    go to state 136
  booleans      go to state 137
  sign          go to state 141
  integer       go to state 117

state 113

  69) use_statement : FANUC_USE indirectable _

  $default      reduce using rule 69 (use_statement)


state 114

  70) use_statement : FANUC_USE LPAREN _ indirectable RPAREN
  71) use_statement : FANUC_USE LPAREN _ indirectable COMMA group_statement RPAREN

  REAL          shift, and go to state 118
  DIGIT         shift, and go to state 119
  WORD          shift, and go to state 107

  indirectable  go to state 209
  number        go to state 115
  var           go to state 116
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87
  integer       go to state 117

state 115

 182) indirectable : number _

  $default      reduce using rule 182 (indirectable)


state 116

 183) indirectable : var _

  $default      reduce using rule 183 (indirectable)


state 117

 273) number : integer _

  $default      reduce using rule 273 (number)


state 118

 274) number : REAL _

  $default      reduce using rule 274 (number)


state 119

 275) integer : DIGIT _

  $default      reduce using rule 275 (integer)


state 120

  72) collguard_statement : COLL_GUARD optional_arg _

  $default      reduce using rule 72 (collguard_statement)


state 121

 184) optional_arg : number _

  $default      reduce using rule 184 (optional_arg)


state 122

 185) optional_arg : var _

  $default      reduce using rule 185 (optional_arg)


state 123

  73) set_skip_statement : SET_SKIP_CONDITION expression _
 240) binary_expression : expression _ operator expression

  EEQUAL        shift, and go to state 211
  NOTEQUAL      shift, and go to state 212
  GTE           shift, and go to state 215
  LTE           shift, and go to state 216
  LT            shift, and go to state 213
  GT            shift, and go to state 214
  PLUS          shift, and go to state 217
  MINUS         shift, and go to state 218
  STAR          shift, and go to state 220
  SLASH         shift, and go to state 221
  DIV           shift, and go to state 222
  AND           shift, and go to state 224
  OR            shift, and go to state 219
  MOD           shift, and go to state 223
  $default      reduce using rule 73 (set_skip_statement)

  operator      go to state 210

state 124

 235) expression : unary_expression _

  $default      reduce using rule 235 (expression)


state 125

 236) expression : binary_expression _

  $default      reduce using rule 236 (expression)


state 126

 237) unary_expression : factor _

  $default      reduce using rule 237 (unary_expression)


state 127

 238) unary_expression : address _

  $default      reduce using rule 238 (unary_expression)


state 128

 239) unary_expression : BANG _ factor

  REAL          shift, and go to state 118
  DIGIT         shift, and go to state 119
  WORD          shift, and go to state 107
  MINUS         shift, and go to state 142
  INDIRECT      shift, and go to state 88
  TRUE_FALSE    shift, and go to state 138
  ON_OFF        shift, and go to state 139
  LPAREN        shift, and go to state 140
  SYSTEM        shift, and go to state 86
  OPERATION     shift, and go to state 143

  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87
  factor        go to state 225
  number        go to state 129
  signed_number  go to state 130
  operation     go to state 131
  var           go to state 132
  signed_var    go to state 133
  var_system    go to state 134
  indirect_thing  go to state 135
  paren_expr    go to state 136
  booleans      go to state 137
  sign          go to state 141
  integer       go to state 117

state 129

 255) factor : number _

  $default      reduce using rule 255 (factor)


state 130

 256) factor : signed_number _

  $default      reduce using rule 256 (factor)


state 131

 257) factor : operation _

  $default      reduce using rule 257 (factor)


state 132

 258) factor : var _

  $default      reduce using rule 258 (factor)


state 133

 259) factor : signed_var _

  $default      reduce using rule 259 (factor)


state 134

 260) factor : var_system _

  $default      reduce using rule 260 (factor)


state 135

 261) factor : indirect_thing _

  $default      reduce using rule 261 (factor)


state 136

 262) factor : paren_expr _

  $default      reduce using rule 262 (factor)


state 137

 263) factor : booleans _

  $default      reduce using rule 263 (factor)


state 138

 264) booleans : TRUE_FALSE _

  $default      reduce using rule 264 (booleans)


state 139

 265) booleans : ON_OFF _

  $default      reduce using rule 265 (booleans)


state 140

 266) paren_expr : LPAREN _ expression RPAREN

  REAL          shift, and go to state 118
  DIGIT         shift, and go to state 119
  WORD          shift, and go to state 107
  BANG          shift, and go to state 128
  MINUS         shift, and go to state 142
  INDIRECT      shift, and go to state 88
  TRUE_FALSE    shift, and go to state 138
  ON_OFF        shift, and go to state 139
  LPAREN        shift, and go to state 140
  SYSTEM        shift, and go to state 86
  ADDRESS       shift, and go to state 89
  OPERATION     shift, and go to state 143

  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87
  unary_expression  go to state 124
  binary_expression  go to state 125
  factor        go to state 126
  address       go to state 127
  expression    go to state 226
  number        go to state 129
  signed_number  go to state 130
  operation     go to state 131
  var           go to state 132
  signed_var    go to state 133
  var_system    go to state 134
  indirect_thing  go to state 135
  paren_expr    go to state 136
  booleans      go to state 137
  sign          go to state 141
  integer       go to state 117

state 141

 269) signed_number : sign _ DIGIT
 270) signed_number : sign _ REAL
 271) signed_var : sign _ var

  REAL          shift, and go to state 228
  DIGIT         shift, and go to state 227
  WORD          shift, and go to state 107

  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87
  var           go to state 229

state 142

 272) sign : MINUS _

  $default      reduce using rule 272 (sign)


state 143

 298) operation : OPERATION _ LBRACK var_or_indirect RBRACK
 299) operation : OPERATION _ LBRACK var_or_indirect COMMA var_or_indirect RBRACK
 300) operation : OPERATION _ LBRACK signed_number RBRACK
 301) operation : OPERATION _ LBRACK number RBRACK

  LBRACK        shift, and go to state 230


state 144

 194) definition : WORD ASSIGN _ definable

  INPUT         shift, and go to state 248
  OUTPUT        shift, and go to state 249
  NUMREG        shift, and go to state 246
  POSREG        shift, and go to state 247
  VREG          shift, and go to state 244
  SREG          shift, and go to state 240
  ARG           shift, and go to state 243
  UALM          shift, and go to state 241
  TOOLREG       shift, and go to state 251
  FRAMEREG      shift, and go to state 252
  STRING        shift, and go to state 231
  REAL          shift, and go to state 118
  DIGIT         shift, and go to state 119
  MINUS         shift, and go to state 142
  POSITION      shift, and go to state 245
  TIMER         shift, and go to state 242
  TRUE_FALSE    shift, and go to state 138
  ON_OFF        shift, and go to state 139

  definable     go to state 232
  sign          go to state 233
  integer       go to state 117
  reg           go to state 234
  number        go to state 235
  signed_number  go to state 236
  string        go to state 237
  framereg      go to state 238
  booleans      go to state 239
  reg_types     go to state 250
  frametype     go to state 253

state 145

 210) var_without_namespaces : WORD var_method_modifiers _
 213) var_method_modifiers : var_method_modifiers _ var_method_modifier

  DOT           shift, and go to state 147
  $default      reduce using rule 210 (var_without_namespaces)

  var_method_modifier  go to state 254

state 146

 212) var_method_modifiers : var_method_modifier _

  $default      reduce using rule 212 (var_method_modifiers)


state 147

 220) var_method_modifier : DOT _ swallow_newlines WORD
 221) var_method_modifier : DOT _ swallow_newlines group_statement
 222) var_method_modifier : DOT _ swallow_newlines POSEATTR
 223) var_method_modifier : DOT _ swallow_newlines OFFSET
 224) var_method_modifier : DOT _ swallow_newlines coord_system
 225) var_method_modifier : DOT _ swallow_newlines FIX

  NEWLINE       shift, and go to state 193
  $default      reduce using rule 311 (swallow_newlines)

  swallow_newlines  go to state 255

state 148

 234) ns : WORD COLON _ COLON

  COLON         shift, and go to state 256


state 149

  75) function_call : namespaces WORD _
 209) var_without_namespaces : WORD _
 210) var_without_namespaces : WORD _ var_method_modifiers
 234) ns : WORD _ COLON COLON

  DOT           shift, and go to state 147
  COLON         shift, and go to state 148
  LPAREN        reduce using rule 75 (function_call)
  LPAREN        [reduce using rule 209 (var_without_namespaces)]
  $default      reduce using rule 209 (var_without_namespaces)

  var_method_modifiers  go to state 145
  var_method_modifier  go to state 146

state 150

 211) var_with_namespaces : namespaces var_without_namespaces _

  $default      reduce using rule 211 (var_with_namespaces)


state 151

 233) namespaces : namespaces ns _

  $default      reduce using rule 233 (namespaces)


state 152

  76) program_call : function_call LPAREN _ args RPAREN

  STRING        shift, and go to state 231
  REAL          shift, and go to state 118
  DIGIT         shift, and go to state 119
  WORD          shift, and go to state 107
  MINUS         shift, and go to state 142
  ADDRESS       shift, and go to state 89
  $default      reduce using rule 82 (args)

  args          go to state 257
  arg           go to state 258
  number        go to state 259
  signed_number  go to state 260
  var           go to state 261
  string        go to state 262
  address       go to state 263
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87
  sign          go to state 233
  integer       go to state 117

state 153

  74) function_call : WORD _
 234) ns : WORD _ COLON COLON

  COLON         shift, and go to state 148
  $default      reduce using rule 74 (function_call)


state 154

  75) function_call : namespaces _ WORD
 233) namespaces : namespaces _ ns

  WORD          shift, and go to state 264

  ns            go to state 151

state 155

  77) program_call : RUN function_call _ LPAREN args RPAREN

  LPAREN        shift, and go to state 265


state 156

  78) program_call : CALL var _ LPAREN args RPAREN

  LPAREN        shift, and go to state 266


state 157

  79) program_call : var_or_indirect EQUAL _ function_call LPAREN args RPAREN
 195) assignment : var_or_indirect EQUAL _ expression

  REAL          shift, and go to state 118
  DIGIT         shift, and go to state 119
  WORD          shift, and go to state 267
  BANG          shift, and go to state 128
  MINUS         shift, and go to state 142
  INDIRECT      shift, and go to state 88
  TRUE_FALSE    shift, and go to state 138
  ON_OFF        shift, and go to state 139
  LPAREN        shift, and go to state 140
  SYSTEM        shift, and go to state 86
  ADDRESS       shift, and go to state 89
  OPERATION     shift, and go to state 143

  namespaces    go to state 54
  function_call  go to state 268
  expression    go to state 269
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  ns            go to state 87
  unary_expression  go to state 124
  binary_expression  go to state 125
  factor        go to state 126
  address       go to state 127
  number        go to state 129
  signed_number  go to state 130
  operation     go to state 131
  var           go to state 132
  signed_var    go to state 133
  var_system    go to state 134
  indirect_thing  go to state 135
  paren_expr    go to state 136
  booleans      go to state 137
  sign          go to state 141
  integer       go to state 117

state 158

 196) assignment : var_or_indirect PLUS _ EQUAL expression

  EQUAL         shift, and go to state 270


state 159

 197) assignment : var_or_indirect MINUS _ EQUAL expression

  EQUAL         shift, and go to state 271


state 160

 198) assignment : var_or_indirect STAR _ EQUAL expression

  EQUAL         shift, and go to state 272


state 161

 199) assignment : var_or_indirect SLASH _ EQUAL expression

  EQUAL         shift, and go to state 273


state 162

 201) position_assignment : var_or_indirect ARROW _ array

  LBRACK        shift, and go to state 275

  array         go to state 274

state 163

  92) return_statement : RETURN LPAREN _ expression RPAREN

  REAL          shift, and go to state 118
  DIGIT         shift, and go to state 119
  WORD          shift, and go to state 107
  BANG          shift, and go to state 128
  MINUS         shift, and go to state 142
  INDIRECT      shift, and go to state 88
  TRUE_FALSE    shift, and go to state 138
  ON_OFF        shift, and go to state 139
  LPAREN        shift, and go to state 140
  SYSTEM        shift, and go to state 86
  ADDRESS       shift, and go to state 89
  OPERATION     shift, and go to state 143

  expression    go to state 276
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87
  unary_expression  go to state 124
  binary_expression  go to state 125
  factor        go to state 126
  address       go to state 127
  number        go to state 129
  signed_number  go to state 130
  operation     go to state 131
  var           go to state 132
  signed_var    go to state 133
  var_system    go to state 134
  indirect_thing  go to state 135
  paren_expr    go to state 136
  booleans      go to state 137
  sign          go to state 141
  integer       go to state 117

state 164

  95) io_method : IO_METHOD var_or_indirect _

  $default      reduce using rule 95 (io_method)


state 165

  96) io_method : IO_METHOD LPAREN _ var_or_indirect RPAREN
  97) io_method : IO_METHOD LPAREN _ var_or_indirect COMMA number COMMA STRING RPAREN

  WORD          shift, and go to state 107
  INDIRECT      shift, and go to state 88
  SYSTEM        shift, and go to state 86

  var_or_indirect  go to state 277
  var           go to state 105
  indirect_thing  go to state 62
  var_system    go to state 106
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87

state 166

 205) assignable_range : var RANGE _ var

  WORD          shift, and go to state 107

  var           go to state 278
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87

state 167

 101) jump : JUMP label _

  $default      reduce using rule 101 (jump)


state 168

 102) conditional : IF expression _ block elsif_conditions else_block END
 104) conditional_block : IF expression _ THEN block elsif_block else_block END
 240) binary_expression : expression _ operator expression

  NEWLINE       shift, and go to state 279
  EEQUAL        shift, and go to state 211
  NOTEQUAL      shift, and go to state 212
  GTE           shift, and go to state 215
  LTE           shift, and go to state 216
  LT            shift, and go to state 213
  GT            shift, and go to state 214
  PLUS          shift, and go to state 217
  MINUS         shift, and go to state 218
  STAR          shift, and go to state 220
  SLASH         shift, and go to state 221
  DIV           shift, and go to state 222
  AND           shift, and go to state 224
  OR            shift, and go to state 219
  MOD           shift, and go to state 223
  THEN          shift, and go to state 281

  block         go to state 280
  operator      go to state 210

state 169

 103) conditional : UNLESS expression _ block else_block END
 240) binary_expression : expression _ operator expression

  NEWLINE       shift, and go to state 279
  EEQUAL        shift, and go to state 211
  NOTEQUAL      shift, and go to state 212
  GTE           shift, and go to state 215
  LTE           shift, and go to state 216
  LT            shift, and go to state 213
  GT            shift, and go to state 214
  PLUS          shift, and go to state 217
  MINUS         shift, and go to state 218
  STAR          shift, and go to state 220
  SLASH         shift, and go to state 221
  DIV           shift, and go to state 222
  AND           shift, and go to state 224
  OR            shift, and go to state 219
  MOD           shift, and go to state 223

  block         go to state 282
  operator      go to state 210

state 170

 113) forloop : FOR var _ IN LPAREN int_or_var TO int_or_var RPAREN block END
 114) forloop : FOR var _ IN LPAREN int_or_var DOWNTO int_or_var RPAREN block END

  IN            shift, and go to state 283


state 171

 115) while_loop : WHILE expression _ block END
 240) binary_expression : expression _ operator expression

  NEWLINE       shift, and go to state 279
  EEQUAL        shift, and go to state 211
  NOTEQUAL      shift, and go to state 212
  GTE           shift, and go to state 215
  LTE           shift, and go to state 216
  LT            shift, and go to state 213
  GT            shift, and go to state 214
  PLUS          shift, and go to state 217
  MINUS         shift, and go to state 218
  STAR          shift, and go to state 220
  SLASH         shift, and go to state 221
  DIV           shift, and go to state 222
  AND           shift, and go to state 224
  OR            shift, and go to state 219
  MOD           shift, and go to state 223

  block         go to state 284
  operator      go to state 210

state 172

 118) word_list : word_tuple _

  $default      reduce using rule 118 (word_list)


state 173

 119) word_list : word_list _ word_tuple
 122) using_statement : USING word_list _

  WORD          shift, and go to state 175
  WORD          [reduce using rule 122 (using_statement)]
  COMMA         shift, and go to state 174
  $default      reduce using rule 122 (using_statement)

  word_tuple    go to state 285

state 174

 120) word_tuple : COMMA _ WORD

  WORD          shift, and go to state 286


state 175

 121) word_tuple : WORD _

  $default      reduce using rule 121 (word_tuple)


state 176

 123) compile_statement : COMPILE IMPORT _ word_list

  WORD          shift, and go to state 175
  COMMA         shift, and go to state 174

  word_tuple    go to state 172
  word_list     go to state 287

state 177

 119) word_list : word_list _ word_tuple
 124) import_statement : IMPORT word_list _

  WORD          shift, and go to state 175
  WORD          [reduce using rule 124 (import_statement)]
  COMMA         shift, and go to state 174
  $default      reduce using rule 124 (import_statement)

  word_tuple    go to state 285

state 178

 125) namespace : NAMESPACE WORD _ block END

  NEWLINE       shift, and go to state 279

  block         go to state 288

state 179

 126) function : FUNCTION WORD _ LPAREN program_vars RPAREN block END
 127) function : FUNCTION WORD _ LPAREN program_vars RPAREN COLON WORD block END

  LPAREN        shift, and go to state 289


state 180

 128) case_statement : CASE var _ swallow_newlines case_conditions case_else END

  NEWLINE       shift, and go to state 193
  $default      reduce using rule 311 (swallow_newlines)

  swallow_newlines  go to state 290

state 181

 139) inline_conditional : inlineable IF _ expression

  REAL          shift, and go to state 118
  DIGIT         shift, and go to state 119
  WORD          shift, and go to state 107
  BANG          shift, and go to state 128
  MINUS         shift, and go to state 142
  INDIRECT      shift, and go to state 88
  TRUE_FALSE    shift, and go to state 138
  ON_OFF        shift, and go to state 139
  LPAREN        shift, and go to state 140
  SYSTEM        shift, and go to state 86
  ADDRESS       shift, and go to state 89
  OPERATION     shift, and go to state 143

  expression    go to state 291
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87
  unary_expression  go to state 124
  binary_expression  go to state 125
  factor        go to state 126
  address       go to state 127
  number        go to state 129
  signed_number  go to state 130
  operation     go to state 131
  var           go to state 132
  signed_var    go to state 133
  var_system    go to state 134
  indirect_thing  go to state 135
  paren_expr    go to state 136
  booleans      go to state 137
  sign          go to state 141
  integer       go to state 117

state 182

 140) inline_conditional : inlineable UNLESS _ expression

  REAL          shift, and go to state 118
  DIGIT         shift, and go to state 119
  WORD          shift, and go to state 107
  BANG          shift, and go to state 128
  MINUS         shift, and go to state 142
  INDIRECT      shift, and go to state 88
  TRUE_FALSE    shift, and go to state 138
  ON_OFF        shift, and go to state 139
  LPAREN        shift, and go to state 140
  SYSTEM        shift, and go to state 86
  ADDRESS       shift, and go to state 89
  OPERATION     shift, and go to state 143

  expression    go to state 292
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87
  unary_expression  go to state 124
  binary_expression  go to state 125
  factor        go to state 126
  address       go to state 127
  number        go to state 129
  signed_number  go to state 130
  operation     go to state 131
  var           go to state 132
  signed_var    go to state 133
  var_system    go to state 134
  indirect_thing  go to state 135
  paren_expr    go to state 136
  booleans      go to state 137
  sign          go to state 141
  integer       go to state 117

state 183

 147) motion_statement : MOVE DOT _ swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers
 148) motion_statement : MOVE DOT _ swallow_newlines MID LPAREN var_or_indirect RPAREN DOT swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers

  NEWLINE       shift, and go to state 193
  $default      reduce using rule 311 (swallow_newlines)

  swallow_newlines  go to state 293

state 184

 200) position_assignment : DEFAULTPOS var_method_modifiers _ ARROW array
 213) var_method_modifiers : var_method_modifiers _ var_method_modifier

  DOT           shift, and go to state 147
  ARROW         shift, and go to state 294

  var_method_modifier  go to state 254

state 185

 202) position_assignment : LPAREN assignable_range _ RPAREN var_method_modifiers ARROW array

  RPAREN        shift, and go to state 295


state 186

 205) assignable_range : var _ RANGE var
 206) assignable_range : var _

  RANGE         shift, and go to state 166
  $default      reduce using rule 206 (assignable_range)


state 187

 203) position_assignment : assignable_range EQUAL _ assignable_range
 204) position_assignment : assignable_range EQUAL _ LPAREN assignable_range RPAREN pose_range_modifiers

  WORD          shift, and go to state 107
  LPAREN        shift, and go to state 297

  assignable_range  go to state 296
  var           go to state 186
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87

state 188

 226) var_system : SYSTEM WORD _ var_system_modifers
 227) var_system : SYSTEM WORD _ LBRACK integer RBRACK var_system_modifers

  DOT           shift, and go to state 301
  DOT           [reduce using rule 230 (var_system_modifers)]
  LBRACK        shift, and go to state 299
  $default      reduce using rule 230 (var_system_modifers)

  var_system_modifers  go to state 298
  var_system_modifer  go to state 300

state 189

 267) indirect_thing : INDIRECT LPAREN _ STRING COMMA indirectable RPAREN
 268) indirect_thing : INDIRECT LPAREN _ STRING COMMA indirectable RPAREN var_method_modifiers

  STRING        shift, and go to state 302


state 190

 302) address : ADDRESS var _

  $default      reduce using rule 302 (address)


state 191

 304) message : MESSAGE LPAREN _ STRING RPAREN

  STRING        shift, and go to state 303


state 192

 305) warning : WARNING LPAREN _ STRING RPAREN

  STRING        shift, and go to state 304


state 193

 310) swallow_newlines : NEWLINE _

  $default      reduce using rule 310 (swallow_newlines)


state 194

 312) position_data : POSITION_DATA sn _ hash sn END

  LBRACE        shift, and go to state 306

  hash          go to state 305

state 195

 313) sn : swallow_newlines _

  $default      reduce using rule 313 (sn)


state 196


  $default      accept


state 197

   4) statements : statements statement terminator _

  $default      reduce using rule 4 (statements)


state 198

   6) optional_newline : NEWLINE _

  $default      reduce using rule 6 (optional_newline)


state 199

 307) terminator : comment optional_newline _

  $default      reduce using rule 307 (terminator)


state 200

  43) lpos_or_jpos : LPOS LPAREN var_or_indirect _ RPAREN

  RPAREN        shift, and go to state 307


state 201

  44) lpos_or_jpos : JPOS LPAREN var_or_indirect _ RPAREN

  RPAREN        shift, and go to state 308


state 202

  46) tp_header_definition : TP_HEADER EQUAL tp_header_value _

  $default      reduce using rule 46 (tp_header_definition)


state 203

  47) tp_header_value : STRING _

  $default      reduce using rule 47 (tp_header_value)


state 204

  48) tp_header_value : TRUE_FALSE _

  $default      reduce using rule 48 (tp_header_value)


state 205

  49) tp_header_value : ON_OFF _

  $default      reduce using rule 49 (tp_header_value)


state 206

  55) tp_application_definition : TP_APPLICATION_TYPE EQUAL sn _ tp_tool_methods

  LBRACE        shift, and go to state 309

  tp_tool_methods  go to state 310

state 207

  59) wait_statement : WAIT_FOR LPAREN indirectable _ COMMA STRING RPAREN

  COMMA         shift, and go to state 311


state 208

  60) wait_statement : WAIT_UNTIL LPAREN expression _ RPAREN
  61) wait_statement : WAIT_UNTIL LPAREN expression _ RPAREN DOT wait_modifier
  62) wait_statement : WAIT_UNTIL LPAREN expression _ RPAREN DOT wait_modifier DOT wait_modifier
 240) binary_expression : expression _ operator expression

  EEQUAL        shift, and go to state 211
  NOTEQUAL      shift, and go to state 212
  GTE           shift, and go to state 215
  LTE           shift, and go to state 216
  LT            shift, and go to state 213
  GT            shift, and go to state 214
  PLUS          shift, and go to state 217
  MINUS         shift, and go to state 218
  STAR          shift, and go to state 220
  SLASH         shift, and go to state 221
  DIV           shift, and go to state 222
  AND           shift, and go to state 224
  OR            shift, and go to state 219
  MOD           shift, and go to state 223
  RPAREN        shift, and go to state 312

  operator      go to state 210

state 209

  70) use_statement : FANUC_USE LPAREN indirectable _ RPAREN
  71) use_statement : FANUC_USE LPAREN indirectable _ COMMA group_statement RPAREN

  RPAREN        shift, and go to state 313
  COMMA         shift, and go to state 314


state 210

 240) binary_expression : expression operator _ expression

  REAL          shift, and go to state 118
  DIGIT         shift, and go to state 119
  WORD          shift, and go to state 107
  BANG          shift, and go to state 128
  MINUS         shift, and go to state 142
  INDIRECT      shift, and go to state 88
  TRUE_FALSE    shift, and go to state 138
  ON_OFF        shift, and go to state 139
  LPAREN        shift, and go to state 140
  SYSTEM        shift, and go to state 86
  ADDRESS       shift, and go to state 89
  OPERATION     shift, and go to state 143

  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87
  unary_expression  go to state 124
  binary_expression  go to state 125
  factor        go to state 126
  address       go to state 127
  expression    go to state 315
  number        go to state 129
  signed_number  go to state 130
  operation     go to state 131
  var           go to state 132
  signed_var    go to state 133
  var_system    go to state 134
  indirect_thing  go to state 135
  paren_expr    go to state 136
  booleans      go to state 137
  sign          go to state 141
  integer       go to state 117

state 211

 241) operator : EEQUAL _

  $default      reduce using rule 241 (operator)


state 212

 242) operator : NOTEQUAL _

  $default      reduce using rule 242 (operator)


state 213

 243) operator : LT _

  $default      reduce using rule 243 (operator)


state 214

 244) operator : GT _

  $default      reduce using rule 244 (operator)


state 215

 245) operator : GTE _

  $default      reduce using rule 245 (operator)


state 216

 246) operator : LTE _

  $default      reduce using rule 246 (operator)


state 217

 247) operator : PLUS _

  $default      reduce using rule 247 (operator)


state 218

 248) operator : MINUS _

  $default      reduce using rule 248 (operator)


state 219

 249) operator : OR _

  $default      reduce using rule 249 (operator)


state 220

 250) operator : STAR _

  $default      reduce using rule 250 (operator)


state 221

 251) operator : SLASH _

  $default      reduce using rule 251 (operator)


state 222

 252) operator : DIV _

  $default      reduce using rule 252 (operator)


state 223

 253) operator : MOD _

  $default      reduce using rule 253 (operator)


state 224

 254) operator : AND _

  $default      reduce using rule 254 (operator)


state 225

 239) unary_expression : BANG factor _

  $default      reduce using rule 239 (unary_expression)


state 226

 240) binary_expression : expression _ operator expression
 266) paren_expr : LPAREN expression _ RPAREN

  EEQUAL        shift, and go to state 211
  NOTEQUAL      shift, and go to state 212
  GTE           shift, and go to state 215
  LTE           shift, and go to state 216
  LT            shift, and go to state 213
  GT            shift, and go to state 214
  PLUS          shift, and go to state 217
  MINUS         shift, and go to state 218
  STAR          shift, and go to state 220
  SLASH         shift, and go to state 221
  DIV           shift, and go to state 222
  AND           shift, and go to state 224
  OR            shift, and go to state 219
  MOD           shift, and go to state 223
  RPAREN        shift, and go to state 316

  operator      go to state 210

state 227

 269) signed_number : sign DIGIT _

  $default      reduce using rule 269 (signed_number)


state 228

 270) signed_number : sign REAL _

  $default      reduce using rule 270 (signed_number)


state 229

 271) signed_var : sign var _

  $default      reduce using rule 271 (signed_var)


state 230

 298) operation : OPERATION LBRACK _ var_or_indirect RBRACK
 299) operation : OPERATION LBRACK _ var_or_indirect COMMA var_or_indirect RBRACK
 300) operation : OPERATION LBRACK _ signed_number RBRACK
 301) operation : OPERATION LBRACK _ number RBRACK

  REAL          shift, and go to state 118
  DIGIT         shift, and go to state 119
  WORD          shift, and go to state 107
  MINUS         shift, and go to state 142
  INDIRECT      shift, and go to state 88
  SYSTEM        shift, and go to state 86

  var           go to state 105
  indirect_thing  go to state 62
  var_system    go to state 106
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87
  sign          go to state 233
  integer       go to state 117
  var_or_indirect  go to state 317
  signed_number  go to state 318
  number        go to state 319

state 231

  94) string : STRING _

  $default      reduce using rule 94 (string)


state 232

 194) definition : WORD ASSIGN definable _

  $default      reduce using rule 194 (definition)


state 233

 269) signed_number : sign _ DIGIT
 270) signed_number : sign _ REAL

  REAL          shift, and go to state 228
  DIGIT         shift, and go to state 227


state 234

 276) definable : reg _

  $default      reduce using rule 276 (definable)


state 235

 277) definable : number _

  $default      reduce using rule 277 (definable)


state 236

 278) definable : signed_number _

  $default      reduce using rule 278 (definable)


state 237

 279) definable : string _

  $default      reduce using rule 279 (definable)


state 238

 280) definable : framereg _

  $default      reduce using rule 280 (definable)


state 239

 281) definable : booleans _

  $default      reduce using rule 281 (definable)


state 240

 284) reg_types : SREG _

  $default      reduce using rule 284 (reg_types)


state 241

 285) reg_types : UALM _

  $default      reduce using rule 285 (reg_types)


state 242

 286) reg_types : TIMER _

  $default      reduce using rule 286 (reg_types)


state 243

 287) reg_types : ARG _

  $default      reduce using rule 287 (reg_types)


state 244

 288) reg_types : VREG _

  $default      reduce using rule 288 (reg_types)


state 245

 289) reg_types : POSITION _

  $default      reduce using rule 289 (reg_types)


state 246

 290) reg_types : NUMREG _

  $default      reduce using rule 290 (reg_types)


state 247

 291) reg_types : POSREG _

  $default      reduce using rule 291 (reg_types)


state 248

 292) reg_types : INPUT _

  $default      reduce using rule 292 (reg_types)


state 249

 293) reg_types : OUTPUT _

  $default      reduce using rule 293 (reg_types)


state 250

 294) reg : reg_types _ LBRACK definable_range RBRACK

  LBRACK        shift, and go to state 320


state 251

 295) frametype : TOOLREG _

  $default      reduce using rule 295 (frametype)


state 252

 296) frametype : FRAMEREG _

  $default      reduce using rule 296 (frametype)


state 253

 297) framereg : frametype _ LBRACK DIGIT RBRACK

  LBRACK        shift, and go to state 321


state 254

 213) var_method_modifiers : var_method_modifiers var_method_modifier _

  $default      reduce using rule 213 (var_method_modifiers)


state 255

 220) var_method_modifier : DOT swallow_newlines _ WORD
 221) var_method_modifier : DOT swallow_newlines _ group_statement
 222) var_method_modifier : DOT swallow_newlines _ POSEATTR
 223) var_method_modifier : DOT swallow_newlines _ OFFSET
 224) var_method_modifier : DOT swallow_newlines _ coord_system
 225) var_method_modifier : DOT swallow_newlines _ FIX

  OFFSET        shift, and go to state 329
  GROUP         shift, and go to state 322
  WORD          shift, and go to state 326
  POSEATTR      shift, and go to state 328
  SPHERE        shift, and go to state 323
  POLAR         shift, and go to state 324
  ORIGIN        shift, and go to state 325
  FIX           shift, and go to state 331

  group_statement  go to state 327
  coord_system  go to state 330

state 256

 234) ns : WORD COLON COLON _

  $default      reduce using rule 234 (ns)


state 257

  76) program_call : function_call LPAREN args _ RPAREN
  81) args : args _ COMMA arg

  RPAREN        shift, and go to state 332
  COMMA         shift, and go to state 333


state 258

  80) args : arg _

  $default      reduce using rule 80 (args)


state 259

  83) arg : number _

  $default      reduce using rule 83 (arg)


state 260

  84) arg : signed_number _

  $default      reduce using rule 84 (arg)


state 261

  85) arg : var _

  $default      reduce using rule 85 (arg)


state 262

  86) arg : string _

  $default      reduce using rule 86 (arg)


state 263

  87) arg : address _

  $default      reduce using rule 87 (arg)


state 264

  75) function_call : namespaces WORD _
 234) ns : WORD _ COLON COLON

  COLON         shift, and go to state 148
  $default      reduce using rule 75 (function_call)


state 265

  77) program_call : RUN function_call LPAREN _ args RPAREN

  STRING        shift, and go to state 231
  REAL          shift, and go to state 118
  DIGIT         shift, and go to state 119
  WORD          shift, and go to state 107
  MINUS         shift, and go to state 142
  ADDRESS       shift, and go to state 89
  $default      reduce using rule 82 (args)

  args          go to state 334
  arg           go to state 258
  number        go to state 259
  signed_number  go to state 260
  var           go to state 261
  string        go to state 262
  address       go to state 263
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87
  sign          go to state 233
  integer       go to state 117

state 266

  78) program_call : CALL var LPAREN _ args RPAREN

  STRING        shift, and go to state 231
  REAL          shift, and go to state 118
  DIGIT         shift, and go to state 119
  WORD          shift, and go to state 107
  MINUS         shift, and go to state 142
  ADDRESS       shift, and go to state 89
  $default      reduce using rule 82 (args)

  args          go to state 335
  arg           go to state 258
  number        go to state 259
  signed_number  go to state 260
  var           go to state 261
  string        go to state 262
  address       go to state 263
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87
  sign          go to state 233
  integer       go to state 117

state 267

  74) function_call : WORD _
 209) var_without_namespaces : WORD _
 210) var_without_namespaces : WORD _ var_method_modifiers
 234) ns : WORD _ COLON COLON

  DOT           shift, and go to state 147
  COLON         shift, and go to state 148
  LPAREN        reduce using rule 74 (function_call)
  LPAREN        [reduce using rule 209 (var_without_namespaces)]
  $default      reduce using rule 209 (var_without_namespaces)

  var_method_modifiers  go to state 145
  var_method_modifier  go to state 146

state 268

  79) program_call : var_or_indirect EQUAL function_call _ LPAREN args RPAREN

  LPAREN        shift, and go to state 336


state 269

 195) assignment : var_or_indirect EQUAL expression _
 240) binary_expression : expression _ operator expression

  EEQUAL        shift, and go to state 211
  NOTEQUAL      shift, and go to state 212
  GTE           shift, and go to state 215
  LTE           shift, and go to state 216
  LT            shift, and go to state 213
  GT            shift, and go to state 214
  PLUS          shift, and go to state 217
  MINUS         shift, and go to state 218
  STAR          shift, and go to state 220
  SLASH         shift, and go to state 221
  DIV           shift, and go to state 222
  AND           shift, and go to state 224
  OR            shift, and go to state 219
  MOD           shift, and go to state 223
  $default      reduce using rule 195 (assignment)

  operator      go to state 210

state 270

 196) assignment : var_or_indirect PLUS EQUAL _ expression

  REAL          shift, and go to state 118
  DIGIT         shift, and go to state 119
  WORD          shift, and go to state 107
  BANG          shift, and go to state 128
  MINUS         shift, and go to state 142
  INDIRECT      shift, and go to state 88
  TRUE_FALSE    shift, and go to state 138
  ON_OFF        shift, and go to state 139
  LPAREN        shift, and go to state 140
  SYSTEM        shift, and go to state 86
  ADDRESS       shift, and go to state 89
  OPERATION     shift, and go to state 143

  expression    go to state 337
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87
  unary_expression  go to state 124
  binary_expression  go to state 125
  factor        go to state 126
  address       go to state 127
  number        go to state 129
  signed_number  go to state 130
  operation     go to state 131
  var           go to state 132
  signed_var    go to state 133
  var_system    go to state 134
  indirect_thing  go to state 135
  paren_expr    go to state 136
  booleans      go to state 137
  sign          go to state 141
  integer       go to state 117

state 271

 197) assignment : var_or_indirect MINUS EQUAL _ expression

  REAL          shift, and go to state 118
  DIGIT         shift, and go to state 119
  WORD          shift, and go to state 107
  BANG          shift, and go to state 128
  MINUS         shift, and go to state 142
  INDIRECT      shift, and go to state 88
  TRUE_FALSE    shift, and go to state 138
  ON_OFF        shift, and go to state 139
  LPAREN        shift, and go to state 140
  SYSTEM        shift, and go to state 86
  ADDRESS       shift, and go to state 89
  OPERATION     shift, and go to state 143

  expression    go to state 338
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87
  unary_expression  go to state 124
  binary_expression  go to state 125
  factor        go to state 126
  address       go to state 127
  number        go to state 129
  signed_number  go to state 130
  operation     go to state 131
  var           go to state 132
  signed_var    go to state 133
  var_system    go to state 134
  indirect_thing  go to state 135
  paren_expr    go to state 136
  booleans      go to state 137
  sign          go to state 141
  integer       go to state 117

state 272

 198) assignment : var_or_indirect STAR EQUAL _ expression

  REAL          shift, and go to state 118
  DIGIT         shift, and go to state 119
  WORD          shift, and go to state 107
  BANG          shift, and go to state 128
  MINUS         shift, and go to state 142
  INDIRECT      shift, and go to state 88
  TRUE_FALSE    shift, and go to state 138
  ON_OFF        shift, and go to state 139
  LPAREN        shift, and go to state 140
  SYSTEM        shift, and go to state 86
  ADDRESS       shift, and go to state 89
  OPERATION     shift, and go to state 143

  expression    go to state 339
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87
  unary_expression  go to state 124
  binary_expression  go to state 125
  factor        go to state 126
  address       go to state 127
  number        go to state 129
  signed_number  go to state 130
  operation     go to state 131
  var           go to state 132
  signed_var    go to state 133
  var_system    go to state 134
  indirect_thing  go to state 135
  paren_expr    go to state 136
  booleans      go to state 137
  sign          go to state 141
  integer       go to state 117

state 273

 199) assignment : var_or_indirect SLASH EQUAL _ expression

  REAL          shift, and go to state 118
  DIGIT         shift, and go to state 119
  WORD          shift, and go to state 107
  BANG          shift, and go to state 128
  MINUS         shift, and go to state 142
  INDIRECT      shift, and go to state 88
  TRUE_FALSE    shift, and go to state 138
  ON_OFF        shift, and go to state 139
  LPAREN        shift, and go to state 140
  SYSTEM        shift, and go to state 86
  ADDRESS       shift, and go to state 89
  OPERATION     shift, and go to state 143

  expression    go to state 340
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87
  unary_expression  go to state 124
  binary_expression  go to state 125
  factor        go to state 126
  address       go to state 127
  number        go to state 129
  signed_number  go to state 130
  operation     go to state 131
  var           go to state 132
  signed_var    go to state 133
  var_system    go to state 134
  indirect_thing  go to state 135
  paren_expr    go to state 136
  booleans      go to state 137
  sign          go to state 141
  integer       go to state 117

state 274

 201) position_assignment : var_or_indirect ARROW array _

  $default      reduce using rule 201 (position_assignment)


state 275

 328) array : LBRACK _ sn array_values sn RBRACK

  NEWLINE       shift, and go to state 193
  $default      reduce using rule 311 (swallow_newlines)

  swallow_newlines  go to state 195
  sn            go to state 341

state 276

  92) return_statement : RETURN LPAREN expression _ RPAREN
 240) binary_expression : expression _ operator expression

  EEQUAL        shift, and go to state 211
  NOTEQUAL      shift, and go to state 212
  GTE           shift, and go to state 215
  LTE           shift, and go to state 216
  LT            shift, and go to state 213
  GT            shift, and go to state 214
  PLUS          shift, and go to state 217
  MINUS         shift, and go to state 218
  STAR          shift, and go to state 220
  SLASH         shift, and go to state 221
  DIV           shift, and go to state 222
  AND           shift, and go to state 224
  OR            shift, and go to state 219
  MOD           shift, and go to state 223
  RPAREN        shift, and go to state 342

  operator      go to state 210

state 277

  96) io_method : IO_METHOD LPAREN var_or_indirect _ RPAREN
  97) io_method : IO_METHOD LPAREN var_or_indirect _ COMMA number COMMA STRING RPAREN

  RPAREN        shift, and go to state 343
  COMMA         shift, and go to state 344


state 278

 205) assignable_range : var RANGE var _

  $default      reduce using rule 205 (assignable_range)


state 279

   5) block : NEWLINE _ statements

  COMMENT       shift, and go to state 90
  MESSAGE       shift, and go to state 91
  WARNING       shift, and go to state 92
  JUMP          shift, and go to state 63
  IO_METHOD     shift, and go to state 60
  MOVE          shift, and go to state 79
  NEWLINE       shift, and go to state 41
  WORD          shift, and go to state 53
  IF            shift, and go to state 64
  UNLESS        shift, and go to state 65
  FOR           shift, and go to state 66
  WHILE         shift, and go to state 67
  WAIT_FOR      shift, and go to state 47
  WAIT_UNTIL    shift, and go to state 48
  FANUC_USE     shift, and go to state 50
  COLL_GUARD    shift, and go to state 51
  SET_SKIP_CONDITION  shift, and go to state 52
  NAMESPACE     shift, and go to state 71
  CASE          shift, and go to state 73
  INDIRECT      shift, and go to state 88
  EVAL          shift, and go to state 46
  TIMER_METHOD  shift, and go to state 45
  RAISE         shift, and go to state 44
  ABORT         shift, and go to state 31
  RETURN        shift, and go to state 59
  POSITION_DATA  shift, and go to state 93
  CALL          shift, and go to state 57
  RUN           shift, and go to state 56
  PAUSE         shift, and go to state 30
  TP_HEADER     shift, and go to state 42
  TP_APPLICATION_TYPE  shift, and go to state 43
  LPAREN        shift, and go to state 82
  LABEL         shift, and go to state 49
  SYSTEM        shift, and go to state 86
  ADDRESS       shift, and go to state 89
  LPOS          shift, and go to state 39
  JPOS          shift, and go to state 40
  FUNCTION      shift, and go to state 72
  USING         shift, and go to state 68
  IMPORT        shift, and go to state 70
  COMPILE       shift, and go to state 69
  DEFAULTPOS    shift, and go to state 81

  statement     go to state 3
  statements    go to state 345
  comment       go to state 4
  message       go to state 5
  definition    go to state 6
  namespace     go to state 7
  motion_statement  go to state 8
  position_assignment  go to state 9
  label_definition  go to state 10
  address       go to state 11
  conditional   go to state 12
  inline_conditional  go to state 13
  conditional_block  go to state 14
  forloop       go to state 15
  while_loop    go to state 16
  use_statement  go to state 17
  set_skip_statement  go to state 18
  wait_statement  go to state 19
  case_statement  go to state 20
  fanuc_eval    go to state 21
  timer_method  go to state 22
  position_data  go to state 23
  raise         go to state 24
  tp_header_definition  go to state 25
  lpos_or_jpos  go to state 26
  empty_stmt    go to state 27
  warning       go to state 28
  var_system    go to state 29
  return_statement  go to state 32
  collguard_statement  go to state 33
  function      go to state 34
  tp_application_definition  go to state 35
  using_statement  go to state 36
  import_statement  go to state 37
  compile_statement  go to state 38
  namespaces    go to state 54
  function_call  go to state 55
  var_or_indirect  go to state 58
  var           go to state 61
  indirect_thing  go to state 62
  inlineable    go to state 74
  jump          go to state 75
  assignment    go to state 76
  io_method     go to state 77
  program_call  go to state 78
  label         go to state 80
  assignable_range  go to state 83
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  ns            go to state 87

state 280

 102) conditional : IF expression block _ elsif_conditions else_block END

  ELSIF         shift, and go to state 348
  ELSIF         [reduce using rule 107 (elsif_conditions)]
  $default      reduce using rule 107 (elsif_conditions)

  elsif_conditions  go to state 346
  elsif_condition  go to state 347

state 281

 104) conditional_block : IF expression THEN _ block elsif_block else_block END

  NEWLINE       shift, and go to state 279

  block         go to state 349

state 282

 103) conditional : UNLESS expression block _ else_block END

  ELSE          shift, and go to state 351
  $default      reduce using rule 146 (else_block)

  else_block    go to state 350

state 283

 113) forloop : FOR var IN _ LPAREN int_or_var TO int_or_var RPAREN block END
 114) forloop : FOR var IN _ LPAREN int_or_var DOWNTO int_or_var RPAREN block END

  LPAREN        shift, and go to state 352


state 284

 115) while_loop : WHILE expression block _ END

  END           shift, and go to state 353


state 285

 119) word_list : word_list word_tuple _

  $default      reduce using rule 119 (word_list)


state 286

 120) word_tuple : COMMA WORD _

  $default      reduce using rule 120 (word_tuple)


state 287

 119) word_list : word_list _ word_tuple
 123) compile_statement : COMPILE IMPORT word_list _

  WORD          shift, and go to state 175
  WORD          [reduce using rule 123 (compile_statement)]
  COMMA         shift, and go to state 174
  $default      reduce using rule 123 (compile_statement)

  word_tuple    go to state 285

state 288

 125) namespace : NAMESPACE WORD block _ END

  END           shift, and go to state 354


state 289

 126) function : FUNCTION WORD LPAREN _ program_vars RPAREN block END
 127) function : FUNCTION WORD LPAREN _ program_vars RPAREN COLON WORD block END

  WORD          shift, and go to state 357
  $default      reduce using rule 90 (program_vars)

  program_var   go to state 355
  program_vars  go to state 356

state 290

 128) case_statement : CASE var swallow_newlines _ case_conditions case_else END

  WHEN          shift, and go to state 360

  case_conditions  go to state 358
  case_condition  go to state 359

state 291

 139) inline_conditional : inlineable IF expression _
 240) binary_expression : expression _ operator expression

  EEQUAL        shift, and go to state 211
  NOTEQUAL      shift, and go to state 212
  GTE           shift, and go to state 215
  LTE           shift, and go to state 216
  LT            shift, and go to state 213
  GT            shift, and go to state 214
  PLUS          shift, and go to state 217
  MINUS         shift, and go to state 218
  STAR          shift, and go to state 220
  SLASH         shift, and go to state 221
  DIV           shift, and go to state 222
  AND           shift, and go to state 224
  OR            shift, and go to state 219
  MOD           shift, and go to state 223
  $default      reduce using rule 139 (inline_conditional)

  operator      go to state 210

state 292

 140) inline_conditional : inlineable UNLESS expression _
 240) binary_expression : expression _ operator expression

  EEQUAL        shift, and go to state 211
  NOTEQUAL      shift, and go to state 212
  GTE           shift, and go to state 215
  LTE           shift, and go to state 216
  LT            shift, and go to state 213
  GT            shift, and go to state 214
  PLUS          shift, and go to state 217
  MINUS         shift, and go to state 218
  STAR          shift, and go to state 220
  SLASH         shift, and go to state 221
  DIV           shift, and go to state 222
  AND           shift, and go to state 224
  OR            shift, and go to state 219
  MOD           shift, and go to state 223
  $default      reduce using rule 140 (inline_conditional)

  operator      go to state 210

state 293

 147) motion_statement : MOVE DOT swallow_newlines _ TO LPAREN var_or_indirect RPAREN motion_modifiers
 148) motion_statement : MOVE DOT swallow_newlines _ MID LPAREN var_or_indirect RPAREN DOT swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers

  TO            shift, and go to state 361
  MID           shift, and go to state 362


state 294

 200) position_assignment : DEFAULTPOS var_method_modifiers ARROW _ array

  LBRACK        shift, and go to state 275

  array         go to state 363

state 295

 202) position_assignment : LPAREN assignable_range RPAREN _ var_method_modifiers ARROW array

  DOT           shift, and go to state 147

  var_method_modifiers  go to state 364
  var_method_modifier  go to state 146

state 296

 203) position_assignment : assignable_range EQUAL assignable_range _

  $default      reduce using rule 203 (position_assignment)


state 297

 204) position_assignment : assignable_range EQUAL LPAREN _ assignable_range RPAREN pose_range_modifiers

  WORD          shift, and go to state 107

  assignable_range  go to state 365
  var           go to state 186
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87

state 298

 226) var_system : SYSTEM WORD var_system_modifers _
 229) var_system_modifers : var_system_modifers _ var_system_modifer

  DOT           shift, and go to state 301
  DOT           [reduce using rule 226 (var_system)]
  $default      reduce using rule 226 (var_system)

  var_system_modifer  go to state 366

state 299

 227) var_system : SYSTEM WORD LBRACK _ integer RBRACK var_system_modifers

  DIGIT         shift, and go to state 119

  integer       go to state 367

state 300

 228) var_system_modifers : var_system_modifer _

  $default      reduce using rule 228 (var_system_modifers)


state 301

 231) var_system_modifer : DOT _ var_system

  SYSTEM        shift, and go to state 86

  var_system    go to state 368

state 302

 267) indirect_thing : INDIRECT LPAREN STRING _ COMMA indirectable RPAREN
 268) indirect_thing : INDIRECT LPAREN STRING _ COMMA indirectable RPAREN var_method_modifiers

  COMMA         shift, and go to state 369


state 303

 304) message : MESSAGE LPAREN STRING _ RPAREN

  RPAREN        shift, and go to state 370


state 304

 305) warning : WARNING LPAREN STRING _ RPAREN

  RPAREN        shift, and go to state 371


state 305

 312) position_data : POSITION_DATA sn hash _ sn END

  NEWLINE       shift, and go to state 193
  $default      reduce using rule 311 (swallow_newlines)

  sn            go to state 372
  swallow_newlines  go to state 195

state 306

 314) hash : LBRACE _ sn hash_attributes sn RBRACE
 315) hash : LBRACE _ sn RBRACE

  NEWLINE       shift, and go to state 193
  $default      reduce using rule 311 (swallow_newlines)

  swallow_newlines  go to state 195
  sn            go to state 373

state 307

  43) lpos_or_jpos : LPOS LPAREN var_or_indirect RPAREN _

  $default      reduce using rule 43 (lpos_or_jpos)


state 308

  44) lpos_or_jpos : JPOS LPAREN var_or_indirect RPAREN _

  $default      reduce using rule 44 (lpos_or_jpos)


state 309

  50) tp_tool_methods : LBRACE _ sn tp_tool_attributes sn RBRACE
  51) tp_tool_methods : LBRACE _ sn RBRACE

  NEWLINE       shift, and go to state 193
  $default      reduce using rule 311 (swallow_newlines)

  sn            go to state 374
  swallow_newlines  go to state 195

state 310

  55) tp_application_definition : TP_APPLICATION_TYPE EQUAL sn tp_tool_methods _

  $default      reduce using rule 55 (tp_application_definition)


state 311

  59) wait_statement : WAIT_FOR LPAREN indirectable COMMA _ STRING RPAREN

  STRING        shift, and go to state 375


state 312

  60) wait_statement : WAIT_UNTIL LPAREN expression RPAREN _
  61) wait_statement : WAIT_UNTIL LPAREN expression RPAREN _ DOT wait_modifier
  62) wait_statement : WAIT_UNTIL LPAREN expression RPAREN _ DOT wait_modifier DOT wait_modifier

  DOT           shift, and go to state 376
  $default      reduce using rule 60 (wait_statement)


state 313

  70) use_statement : FANUC_USE LPAREN indirectable RPAREN _

  $default      reduce using rule 70 (use_statement)


state 314

  71) use_statement : FANUC_USE LPAREN indirectable COMMA _ group_statement RPAREN

  GROUP         shift, and go to state 322

  group_statement  go to state 377

state 315

 240) binary_expression : expression _ operator expression
 240) binary_expression : expression operator expression _

  EEQUAL        shift, and go to state 211
  EEQUAL        [reduce using rule 240 (binary_expression)]
  NOTEQUAL      shift, and go to state 212
  NOTEQUAL      [reduce using rule 240 (binary_expression)]
  GTE           shift, and go to state 215
  GTE           [reduce using rule 240 (binary_expression)]
  LTE           shift, and go to state 216
  LTE           [reduce using rule 240 (binary_expression)]
  LT            shift, and go to state 213
  LT            [reduce using rule 240 (binary_expression)]
  GT            shift, and go to state 214
  GT            [reduce using rule 240 (binary_expression)]
  PLUS          shift, and go to state 217
  PLUS          [reduce using rule 240 (binary_expression)]
  MINUS         shift, and go to state 218
  MINUS         [reduce using rule 240 (binary_expression)]
  STAR          shift, and go to state 220
  STAR          [reduce using rule 240 (binary_expression)]
  SLASH         shift, and go to state 221
  SLASH         [reduce using rule 240 (binary_expression)]
  DIV           shift, and go to state 222
  DIV           [reduce using rule 240 (binary_expression)]
  AND           shift, and go to state 224
  AND           [reduce using rule 240 (binary_expression)]
  OR            shift, and go to state 219
  OR            [reduce using rule 240 (binary_expression)]
  MOD           shift, and go to state 223
  MOD           [reduce using rule 240 (binary_expression)]
  $default      reduce using rule 240 (binary_expression)

  operator      go to state 210

state 316

 266) paren_expr : LPAREN expression RPAREN _

  $default      reduce using rule 266 (paren_expr)


state 317

 298) operation : OPERATION LBRACK var_or_indirect _ RBRACK
 299) operation : OPERATION LBRACK var_or_indirect _ COMMA var_or_indirect RBRACK

  COMMA         shift, and go to state 379
  RBRACK        shift, and go to state 378


state 318

 300) operation : OPERATION LBRACK signed_number _ RBRACK

  RBRACK        shift, and go to state 380


state 319

 301) operation : OPERATION LBRACK number _ RBRACK

  RBRACK        shift, and go to state 381


state 320

 294) reg : reg_types LBRACK _ definable_range RBRACK

  DIGIT         shift, and go to state 382

  definable_range  go to state 383

state 321

 297) framereg : frametype LBRACK _ DIGIT RBRACK

  DIGIT         shift, and go to state 384


state 322

  68) group_statement : GROUP _ LPAREN integer RPAREN

  LPAREN        shift, and go to state 385


state 323

 217) coord_system : SPHERE _

  $default      reduce using rule 217 (coord_system)


state 324

 218) coord_system : POLAR _

  $default      reduce using rule 218 (coord_system)


state 325

 219) coord_system : ORIGIN _

  $default      reduce using rule 219 (coord_system)


state 326

 220) var_method_modifier : DOT swallow_newlines WORD _

  $default      reduce using rule 220 (var_method_modifier)


state 327

 221) var_method_modifier : DOT swallow_newlines group_statement _

  $default      reduce using rule 221 (var_method_modifier)


state 328

 222) var_method_modifier : DOT swallow_newlines POSEATTR _

  $default      reduce using rule 222 (var_method_modifier)


state 329

 223) var_method_modifier : DOT swallow_newlines OFFSET _

  $default      reduce using rule 223 (var_method_modifier)


state 330

 224) var_method_modifier : DOT swallow_newlines coord_system _

  $default      reduce using rule 224 (var_method_modifier)


state 331

 225) var_method_modifier : DOT swallow_newlines FIX _

  $default      reduce using rule 225 (var_method_modifier)


state 332

  76) program_call : function_call LPAREN args RPAREN _

  $default      reduce using rule 76 (program_call)


state 333

  81) args : args COMMA _ arg

  STRING        shift, and go to state 231
  REAL          shift, and go to state 118
  DIGIT         shift, and go to state 119
  WORD          shift, and go to state 107
  MINUS         shift, and go to state 142
  ADDRESS       shift, and go to state 89

  arg           go to state 386
  number        go to state 259
  signed_number  go to state 260
  var           go to state 261
  string        go to state 262
  address       go to state 263
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87
  sign          go to state 233
  integer       go to state 117

state 334

  77) program_call : RUN function_call LPAREN args _ RPAREN
  81) args : args _ COMMA arg

  RPAREN        shift, and go to state 387
  COMMA         shift, and go to state 333


state 335

  78) program_call : CALL var LPAREN args _ RPAREN
  81) args : args _ COMMA arg

  RPAREN        shift, and go to state 388
  COMMA         shift, and go to state 333


state 336

  79) program_call : var_or_indirect EQUAL function_call LPAREN _ args RPAREN

  STRING        shift, and go to state 231
  REAL          shift, and go to state 118
  DIGIT         shift, and go to state 119
  WORD          shift, and go to state 107
  MINUS         shift, and go to state 142
  ADDRESS       shift, and go to state 89
  $default      reduce using rule 82 (args)

  args          go to state 389
  arg           go to state 258
  number        go to state 259
  signed_number  go to state 260
  var           go to state 261
  string        go to state 262
  address       go to state 263
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87
  sign          go to state 233
  integer       go to state 117

state 337

 196) assignment : var_or_indirect PLUS EQUAL expression _
 240) binary_expression : expression _ operator expression

  EEQUAL        shift, and go to state 211
  NOTEQUAL      shift, and go to state 212
  GTE           shift, and go to state 215
  LTE           shift, and go to state 216
  LT            shift, and go to state 213
  GT            shift, and go to state 214
  PLUS          shift, and go to state 217
  MINUS         shift, and go to state 218
  STAR          shift, and go to state 220
  SLASH         shift, and go to state 221
  DIV           shift, and go to state 222
  AND           shift, and go to state 224
  OR            shift, and go to state 219
  MOD           shift, and go to state 223
  $default      reduce using rule 196 (assignment)

  operator      go to state 210

state 338

 197) assignment : var_or_indirect MINUS EQUAL expression _
 240) binary_expression : expression _ operator expression

  EEQUAL        shift, and go to state 211
  NOTEQUAL      shift, and go to state 212
  GTE           shift, and go to state 215
  LTE           shift, and go to state 216
  LT            shift, and go to state 213
  GT            shift, and go to state 214
  PLUS          shift, and go to state 217
  MINUS         shift, and go to state 218
  STAR          shift, and go to state 220
  SLASH         shift, and go to state 221
  DIV           shift, and go to state 222
  AND           shift, and go to state 224
  OR            shift, and go to state 219
  MOD           shift, and go to state 223
  $default      reduce using rule 197 (assignment)

  operator      go to state 210

state 339

 198) assignment : var_or_indirect STAR EQUAL expression _
 240) binary_expression : expression _ operator expression

  EEQUAL        shift, and go to state 211
  NOTEQUAL      shift, and go to state 212
  GTE           shift, and go to state 215
  LTE           shift, and go to state 216
  LT            shift, and go to state 213
  GT            shift, and go to state 214
  PLUS          shift, and go to state 217
  MINUS         shift, and go to state 218
  STAR          shift, and go to state 220
  SLASH         shift, and go to state 221
  DIV           shift, and go to state 222
  AND           shift, and go to state 224
  OR            shift, and go to state 219
  MOD           shift, and go to state 223
  $default      reduce using rule 198 (assignment)

  operator      go to state 210

state 340

 199) assignment : var_or_indirect SLASH EQUAL expression _
 240) binary_expression : expression _ operator expression

  EEQUAL        shift, and go to state 211
  NOTEQUAL      shift, and go to state 212
  GTE           shift, and go to state 215
  LTE           shift, and go to state 216
  LT            shift, and go to state 213
  GT            shift, and go to state 214
  PLUS          shift, and go to state 217
  MINUS         shift, and go to state 218
  STAR          shift, and go to state 220
  SLASH         shift, and go to state 221
  DIV           shift, and go to state 222
  AND           shift, and go to state 224
  OR            shift, and go to state 219
  MOD           shift, and go to state 223
  $default      reduce using rule 199 (assignment)

  operator      go to state 210

state 341

 328) array : LBRACK sn _ array_values sn RBRACK

  STRING        shift, and go to state 390
  WORD          shift, and go to state 391
  MINUS         shift, and go to state 142
  TRUE_FALSE    shift, and go to state 395
  LBRACK        shift, and go to state 275
  LBRACE        shift, and go to state 306
  $default      reduce using rule 327 (optional_sign)

  hash          go to state 392
  array         go to state 393
  optional_sign  go to state 394
  sign          go to state 396
  array_values  go to state 397
  array_value   go to state 398
  hash_value    go to state 399

state 342

  92) return_statement : RETURN LPAREN expression RPAREN _

  $default      reduce using rule 92 (return_statement)


state 343

  96) io_method : IO_METHOD LPAREN var_or_indirect RPAREN _

  $default      reduce using rule 96 (io_method)


state 344

  97) io_method : IO_METHOD LPAREN var_or_indirect COMMA _ number COMMA STRING RPAREN

  REAL          shift, and go to state 118
  DIGIT         shift, and go to state 119

  number        go to state 400
  integer       go to state 117

state 345

   4) statements : statements _ statement terminator
   5) block : NEWLINE statements _

  COMMENT       shift, and go to state 90
  MESSAGE       shift, and go to state 91
  WARNING       shift, and go to state 92
  JUMP          shift, and go to state 63
  IO_METHOD     shift, and go to state 60
  MOVE          shift, and go to state 79
  NEWLINE       shift, and go to state 41
  WORD          shift, and go to state 53
  IF            shift, and go to state 64
  UNLESS        shift, and go to state 65
  FOR           shift, and go to state 66
  WHILE         shift, and go to state 67
  WAIT_FOR      shift, and go to state 47
  WAIT_UNTIL    shift, and go to state 48
  FANUC_USE     shift, and go to state 50
  COLL_GUARD    shift, and go to state 51
  SET_SKIP_CONDITION  shift, and go to state 52
  NAMESPACE     shift, and go to state 71
  CASE          shift, and go to state 73
  INDIRECT      shift, and go to state 88
  EVAL          shift, and go to state 46
  TIMER_METHOD  shift, and go to state 45
  RAISE         shift, and go to state 44
  ABORT         shift, and go to state 31
  RETURN        shift, and go to state 59
  POSITION_DATA  shift, and go to state 93
  CALL          shift, and go to state 57
  RUN           shift, and go to state 56
  PAUSE         shift, and go to state 30
  TP_HEADER     shift, and go to state 42
  TP_APPLICATION_TYPE  shift, and go to state 43
  LPAREN        shift, and go to state 82
  LABEL         shift, and go to state 49
  SYSTEM        shift, and go to state 86
  ADDRESS       shift, and go to state 89
  LPOS          shift, and go to state 39
  JPOS          shift, and go to state 40
  FUNCTION      shift, and go to state 72
  USING         shift, and go to state 68
  IMPORT        shift, and go to state 70
  COMPILE       shift, and go to state 69
  DEFAULTPOS    shift, and go to state 81
  $default      reduce using rule 5 (block)

  statement     go to state 95
  comment       go to state 4
  message       go to state 5
  definition    go to state 6
  namespace     go to state 7
  motion_statement  go to state 8
  position_assignment  go to state 9
  label_definition  go to state 10
  address       go to state 11
  conditional   go to state 12
  inline_conditional  go to state 13
  conditional_block  go to state 14
  forloop       go to state 15
  while_loop    go to state 16
  use_statement  go to state 17
  set_skip_statement  go to state 18
  wait_statement  go to state 19
  case_statement  go to state 20
  fanuc_eval    go to state 21
  timer_method  go to state 22
  position_data  go to state 23
  raise         go to state 24
  tp_header_definition  go to state 25
  lpos_or_jpos  go to state 26
  empty_stmt    go to state 27
  warning       go to state 28
  var_system    go to state 29
  return_statement  go to state 32
  collguard_statement  go to state 33
  function      go to state 34
  tp_application_definition  go to state 35
  using_statement  go to state 36
  import_statement  go to state 37
  compile_statement  go to state 38
  namespaces    go to state 54
  function_call  go to state 55
  var_or_indirect  go to state 58
  var           go to state 61
  indirect_thing  go to state 62
  inlineable    go to state 74
  jump          go to state 75
  assignment    go to state 76
  io_method     go to state 77
  program_call  go to state 78
  label         go to state 80
  assignable_range  go to state 83
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  ns            go to state 87

state 346

 102) conditional : IF expression block elsif_conditions _ else_block END
 106) elsif_conditions : elsif_conditions _ elsif_condition

  ELSE          shift, and go to state 351
  ELSIF         shift, and go to state 348
  $default      reduce using rule 146 (else_block)

  else_block    go to state 401
  elsif_condition  go to state 402

state 347

 105) elsif_conditions : elsif_condition _

  $default      reduce using rule 105 (elsif_conditions)


state 348

 108) elsif_condition : ELSIF _ expression block

  REAL          shift, and go to state 118
  DIGIT         shift, and go to state 119
  WORD          shift, and go to state 107
  BANG          shift, and go to state 128
  MINUS         shift, and go to state 142
  INDIRECT      shift, and go to state 88
  TRUE_FALSE    shift, and go to state 138
  ON_OFF        shift, and go to state 139
  LPAREN        shift, and go to state 140
  SYSTEM        shift, and go to state 86
  ADDRESS       shift, and go to state 89
  OPERATION     shift, and go to state 143

  expression    go to state 403
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87
  unary_expression  go to state 124
  binary_expression  go to state 125
  factor        go to state 126
  address       go to state 127
  number        go to state 129
  signed_number  go to state 130
  operation     go to state 131
  var           go to state 132
  signed_var    go to state 133
  var_system    go to state 134
  indirect_thing  go to state 135
  paren_expr    go to state 136
  booleans      go to state 137
  sign          go to state 141
  integer       go to state 117

state 349

 104) conditional_block : IF expression THEN block _ elsif_block else_block END

  ELSIF         shift, and go to state 406
  ELSIF         [reduce using rule 111 (elsif_block)]
  $default      reduce using rule 111 (elsif_block)

  elsif_block   go to state 404
  elsif_block_condition  go to state 405

state 350

 103) conditional : UNLESS expression block else_block _ END

  END           shift, and go to state 407


state 351

 145) else_block : ELSE _ block

  NEWLINE       shift, and go to state 279

  block         go to state 408

state 352

 113) forloop : FOR var IN LPAREN _ int_or_var TO int_or_var RPAREN block END
 114) forloop : FOR var IN LPAREN _ int_or_var DOWNTO int_or_var RPAREN block END

  DIGIT         shift, and go to state 119
  WORD          shift, and go to state 107

  int_or_var    go to state 409
  integer       go to state 410
  var           go to state 411
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87

state 353

 115) while_loop : WHILE expression block END _

  $default      reduce using rule 115 (while_loop)


state 354

 125) namespace : NAMESPACE WORD block END _

  $default      reduce using rule 125 (namespace)


state 355

  88) program_vars : program_var _

  $default      reduce using rule 88 (program_vars)


state 356

  89) program_vars : program_vars _ COMMA program_var
 126) function : FUNCTION WORD LPAREN program_vars _ RPAREN block END
 127) function : FUNCTION WORD LPAREN program_vars _ RPAREN COLON WORD block END

  RPAREN        shift, and go to state 413
  COMMA         shift, and go to state 412


state 357

  91) program_var : WORD _

  $default      reduce using rule 91 (program_var)


state 358

 128) case_statement : CASE var swallow_newlines case_conditions _ case_else END
 130) case_conditions : case_conditions _ case_condition

  ELSE          shift, and go to state 416
  WHEN          shift, and go to state 360
  $default      reduce using rule 135 (case_else)

  case_else     go to state 414
  case_condition  go to state 415

state 359

 129) case_conditions : case_condition _

  $default      reduce using rule 129 (case_conditions)


state 360

 131) case_condition : WHEN _ case_allowed_condition block

  REAL          shift, and go to state 118
  DIGIT         shift, and go to state 119
  WORD          shift, and go to state 107

  case_allowed_condition  go to state 417
  number        go to state 418
  var           go to state 419
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87
  integer       go to state 117

state 361

 147) motion_statement : MOVE DOT swallow_newlines TO _ LPAREN var_or_indirect RPAREN motion_modifiers

  LPAREN        shift, and go to state 420


state 362

 148) motion_statement : MOVE DOT swallow_newlines MID _ LPAREN var_or_indirect RPAREN DOT swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers

  LPAREN        shift, and go to state 421


state 363

 200) position_assignment : DEFAULTPOS var_method_modifiers ARROW array _

  $default      reduce using rule 200 (position_assignment)


state 364

 202) position_assignment : LPAREN assignable_range RPAREN var_method_modifiers _ ARROW array
 213) var_method_modifiers : var_method_modifiers _ var_method_modifier

  DOT           shift, and go to state 147
  ARROW         shift, and go to state 422

  var_method_modifier  go to state 254

state 365

 204) position_assignment : assignable_range EQUAL LPAREN assignable_range _ RPAREN pose_range_modifiers

  RPAREN        shift, and go to state 423


state 366

 229) var_system_modifers : var_system_modifers var_system_modifer _

  $default      reduce using rule 229 (var_system_modifers)


state 367

 227) var_system : SYSTEM WORD LBRACK integer _ RBRACK var_system_modifers

  RBRACK        shift, and go to state 424


state 368

 231) var_system_modifer : DOT var_system _

  $default      reduce using rule 231 (var_system_modifer)


state 369

 267) indirect_thing : INDIRECT LPAREN STRING COMMA _ indirectable RPAREN
 268) indirect_thing : INDIRECT LPAREN STRING COMMA _ indirectable RPAREN var_method_modifiers

  REAL          shift, and go to state 118
  DIGIT         shift, and go to state 119
  WORD          shift, and go to state 107

  number        go to state 115
  var           go to state 116
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87
  indirectable  go to state 425
  integer       go to state 117

state 370

 304) message : MESSAGE LPAREN STRING RPAREN _

  $default      reduce using rule 304 (message)


state 371

 305) warning : WARNING LPAREN STRING RPAREN _

  $default      reduce using rule 305 (warning)


state 372

 312) position_data : POSITION_DATA sn hash sn _ END

  END           shift, and go to state 426


state 373

 314) hash : LBRACE sn _ hash_attributes sn RBRACE
 315) hash : LBRACE sn _ RBRACE

  STRING        shift, and go to state 430
  RBRACE        shift, and go to state 428

  hash_attributes  go to state 427
  hash_attribute  go to state 429

state 374

  50) tp_tool_methods : LBRACE sn _ tp_tool_attributes sn RBRACE
  51) tp_tool_methods : LBRACE sn _ RBRACE

  WORD          shift, and go to state 434
  RBRACE        shift, and go to state 432

  tp_tool_attributes  go to state 431
  tp_tool_attribute  go to state 433

state 375

  59) wait_statement : WAIT_FOR LPAREN indirectable COMMA STRING _ RPAREN

  RPAREN        shift, and go to state 435


state 376

  61) wait_statement : WAIT_UNTIL LPAREN expression RPAREN DOT _ wait_modifier
  62) wait_statement : WAIT_UNTIL LPAREN expression RPAREN DOT _ wait_modifier DOT wait_modifier

  NEWLINE       shift, and go to state 193
  $default      reduce using rule 311 (swallow_newlines)

  wait_modifier  go to state 436
  timeout_modifier  go to state 437
  after_modifier  go to state 438
  swallow_newlines  go to state 439

state 377

  71) use_statement : FANUC_USE LPAREN indirectable COMMA group_statement _ RPAREN

  RPAREN        shift, and go to state 440


state 378

 298) operation : OPERATION LBRACK var_or_indirect RBRACK _

  $default      reduce using rule 298 (operation)


state 379

 299) operation : OPERATION LBRACK var_or_indirect COMMA _ var_or_indirect RBRACK

  WORD          shift, and go to state 107
  INDIRECT      shift, and go to state 88
  SYSTEM        shift, and go to state 86

  var           go to state 105
  indirect_thing  go to state 62
  var_system    go to state 106
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87
  var_or_indirect  go to state 441

state 380

 300) operation : OPERATION LBRACK signed_number RBRACK _

  $default      reduce using rule 300 (operation)


state 381

 301) operation : OPERATION LBRACK number RBRACK _

  $default      reduce using rule 301 (operation)


state 382

 282) definable_range : DIGIT _ RANGE DIGIT
 283) definable_range : DIGIT _

  RANGE         shift, and go to state 442
  $default      reduce using rule 283 (definable_range)


state 383

 294) reg : reg_types LBRACK definable_range _ RBRACK

  RBRACK        shift, and go to state 443


state 384

 297) framereg : frametype LBRACK DIGIT _ RBRACK

  RBRACK        shift, and go to state 444


state 385

  68) group_statement : GROUP LPAREN _ integer RPAREN

  DIGIT         shift, and go to state 119

  integer       go to state 445

state 386

  81) args : args COMMA arg _

  $default      reduce using rule 81 (args)


state 387

  77) program_call : RUN function_call LPAREN args RPAREN _

  $default      reduce using rule 77 (program_call)


state 388

  78) program_call : CALL var LPAREN args RPAREN _

  $default      reduce using rule 78 (program_call)


state 389

  79) program_call : var_or_indirect EQUAL function_call LPAREN args _ RPAREN
  81) args : args _ COMMA arg

  RPAREN        shift, and go to state 446
  COMMA         shift, and go to state 333


state 390

 319) hash_value : STRING _

  $default      reduce using rule 319 (hash_value)


state 391

 320) hash_value : WORD _

  $default      reduce using rule 320 (hash_value)


state 392

 321) hash_value : hash _

  $default      reduce using rule 321 (hash_value)


state 393

 322) hash_value : array _

  $default      reduce using rule 322 (hash_value)


state 394

 323) hash_value : optional_sign _ DIGIT
 324) hash_value : optional_sign _ REAL

  REAL          shift, and go to state 448
  DIGIT         shift, and go to state 447


state 395

 325) hash_value : TRUE_FALSE _

  $default      reduce using rule 325 (hash_value)


state 396

 326) optional_sign : sign _

  $default      reduce using rule 326 (optional_sign)


state 397

 328) array : LBRACK sn array_values _ sn RBRACK
 330) array_values : array_values _ COMMA sn array_value

  NEWLINE       shift, and go to state 193
  COMMA         shift, and go to state 450
  $default      reduce using rule 311 (swallow_newlines)

  swallow_newlines  go to state 195
  sn            go to state 449

state 398

 329) array_values : array_value _

  $default      reduce using rule 329 (array_values)


state 399

 331) array_value : hash_value _

  $default      reduce using rule 331 (array_value)


state 400

  97) io_method : IO_METHOD LPAREN var_or_indirect COMMA number _ COMMA STRING RPAREN

  COMMA         shift, and go to state 451


state 401

 102) conditional : IF expression block elsif_conditions else_block _ END

  END           shift, and go to state 452


state 402

 106) elsif_conditions : elsif_conditions elsif_condition _

  $default      reduce using rule 106 (elsif_conditions)


state 403

 108) elsif_condition : ELSIF expression _ block
 240) binary_expression : expression _ operator expression

  NEWLINE       shift, and go to state 279
  EEQUAL        shift, and go to state 211
  NOTEQUAL      shift, and go to state 212
  GTE           shift, and go to state 215
  LTE           shift, and go to state 216
  LT            shift, and go to state 213
  GT            shift, and go to state 214
  PLUS          shift, and go to state 217
  MINUS         shift, and go to state 218
  STAR          shift, and go to state 220
  SLASH         shift, and go to state 221
  DIV           shift, and go to state 222
  AND           shift, and go to state 224
  OR            shift, and go to state 219
  MOD           shift, and go to state 223

  block         go to state 453
  operator      go to state 210

state 404

 104) conditional_block : IF expression THEN block elsif_block _ else_block END
 110) elsif_block : elsif_block _ elsif_block_condition

  ELSE          shift, and go to state 351
  ELSIF         shift, and go to state 406
  $default      reduce using rule 146 (else_block)

  else_block    go to state 454
  elsif_block_condition  go to state 455

state 405

 109) elsif_block : elsif_block_condition _

  $default      reduce using rule 109 (elsif_block)


state 406

 112) elsif_block_condition : ELSIF _ expression THEN block

  REAL          shift, and go to state 118
  DIGIT         shift, and go to state 119
  WORD          shift, and go to state 107
  BANG          shift, and go to state 128
  MINUS         shift, and go to state 142
  INDIRECT      shift, and go to state 88
  TRUE_FALSE    shift, and go to state 138
  ON_OFF        shift, and go to state 139
  LPAREN        shift, and go to state 140
  SYSTEM        shift, and go to state 86
  ADDRESS       shift, and go to state 89
  OPERATION     shift, and go to state 143

  expression    go to state 456
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87
  unary_expression  go to state 124
  binary_expression  go to state 125
  factor        go to state 126
  address       go to state 127
  number        go to state 129
  signed_number  go to state 130
  operation     go to state 131
  var           go to state 132
  signed_var    go to state 133
  var_system    go to state 134
  indirect_thing  go to state 135
  paren_expr    go to state 136
  booleans      go to state 137
  sign          go to state 141
  integer       go to state 117

state 407

 103) conditional : UNLESS expression block else_block END _

  $default      reduce using rule 103 (conditional)


state 408

 145) else_block : ELSE block _

  $default      reduce using rule 145 (else_block)


state 409

 113) forloop : FOR var IN LPAREN int_or_var _ TO int_or_var RPAREN block END
 114) forloop : FOR var IN LPAREN int_or_var _ DOWNTO int_or_var RPAREN block END

  TO            shift, and go to state 457
  DOWNTO        shift, and go to state 458


state 410

 116) int_or_var : integer _

  $default      reduce using rule 116 (int_or_var)


state 411

 117) int_or_var : var _

  $default      reduce using rule 117 (int_or_var)


state 412

  89) program_vars : program_vars COMMA _ program_var

  WORD          shift, and go to state 357

  program_var   go to state 459

state 413

 126) function : FUNCTION WORD LPAREN program_vars RPAREN _ block END
 127) function : FUNCTION WORD LPAREN program_vars RPAREN _ COLON WORD block END

  NEWLINE       shift, and go to state 279
  COLON         shift, and go to state 461

  block         go to state 460

state 414

 128) case_statement : CASE var swallow_newlines case_conditions case_else _ END

  END           shift, and go to state 462


state 415

 130) case_conditions : case_conditions case_condition _

  $default      reduce using rule 130 (case_conditions)


state 416

 134) case_else : ELSE _ block

  NEWLINE       shift, and go to state 279

  block         go to state 463

state 417

 131) case_condition : WHEN case_allowed_condition _ block

  NEWLINE       shift, and go to state 279

  block         go to state 464

state 418

 132) case_allowed_condition : number _

  $default      reduce using rule 132 (case_allowed_condition)


state 419

 133) case_allowed_condition : var _

  $default      reduce using rule 133 (case_allowed_condition)


state 420

 147) motion_statement : MOVE DOT swallow_newlines TO LPAREN _ var_or_indirect RPAREN motion_modifiers

  WORD          shift, and go to state 107
  INDIRECT      shift, and go to state 88
  SYSTEM        shift, and go to state 86

  var           go to state 105
  indirect_thing  go to state 62
  var_system    go to state 106
  var_or_indirect  go to state 465
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87

state 421

 148) motion_statement : MOVE DOT swallow_newlines MID LPAREN _ var_or_indirect RPAREN DOT swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers

  WORD          shift, and go to state 107
  INDIRECT      shift, and go to state 88
  SYSTEM        shift, and go to state 86

  var           go to state 105
  indirect_thing  go to state 62
  var_system    go to state 106
  var_or_indirect  go to state 466
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87

state 422

 202) position_assignment : LPAREN assignable_range RPAREN var_method_modifiers ARROW _ array

  LBRACK        shift, and go to state 275

  array         go to state 467

state 423

 204) position_assignment : assignable_range EQUAL LPAREN assignable_range RPAREN _ pose_range_modifiers

  DOT           shift, and go to state 470

  pose_range_modifiers  go to state 468
  pose_range_modifier  go to state 469

state 424

 227) var_system : SYSTEM WORD LBRACK integer RBRACK _ var_system_modifers

  DOT           shift, and go to state 301
  DOT           [reduce using rule 230 (var_system_modifers)]
  $default      reduce using rule 230 (var_system_modifers)

  var_system_modifers  go to state 471
  var_system_modifer  go to state 300

state 425

 267) indirect_thing : INDIRECT LPAREN STRING COMMA indirectable _ RPAREN
 268) indirect_thing : INDIRECT LPAREN STRING COMMA indirectable _ RPAREN var_method_modifiers

  RPAREN        shift, and go to state 472


state 426

 312) position_data : POSITION_DATA sn hash sn END _

  $default      reduce using rule 312 (position_data)


state 427

 314) hash : LBRACE sn hash_attributes _ sn RBRACE
 317) hash_attributes : hash_attributes _ COMMA sn hash_attribute

  NEWLINE       shift, and go to state 193
  COMMA         shift, and go to state 474
  $default      reduce using rule 311 (swallow_newlines)

  swallow_newlines  go to state 195
  sn            go to state 473

state 428

 315) hash : LBRACE sn RBRACE _

  $default      reduce using rule 315 (hash)


state 429

 316) hash_attributes : hash_attribute _

  $default      reduce using rule 316 (hash_attributes)


state 430

 318) hash_attribute : STRING _ COLON hash_value

  COLON         shift, and go to state 475


state 431

  50) tp_tool_methods : LBRACE sn tp_tool_attributes _ sn RBRACE
  53) tp_tool_attributes : tp_tool_attributes _ COMMA sn tp_tool_attribute

  NEWLINE       shift, and go to state 193
  COMMA         shift, and go to state 477
  $default      reduce using rule 311 (swallow_newlines)

  sn            go to state 476
  swallow_newlines  go to state 195

state 432

  51) tp_tool_methods : LBRACE sn RBRACE _

  $default      reduce using rule 51 (tp_tool_methods)


state 433

  52) tp_tool_attributes : tp_tool_attribute _

  $default      reduce using rule 52 (tp_tool_attributes)


state 434

  54) tp_tool_attribute : WORD _ COLON hash_value

  COLON         shift, and go to state 478


state 435

  59) wait_statement : WAIT_FOR LPAREN indirectable COMMA STRING RPAREN _

  $default      reduce using rule 59 (wait_statement)


state 436

  61) wait_statement : WAIT_UNTIL LPAREN expression RPAREN DOT wait_modifier _
  62) wait_statement : WAIT_UNTIL LPAREN expression RPAREN DOT wait_modifier _ DOT wait_modifier

  DOT           shift, and go to state 479
  $default      reduce using rule 61 (wait_statement)


state 437

  63) wait_modifier : timeout_modifier _

  $default      reduce using rule 63 (wait_modifier)


state 438

  64) wait_modifier : after_modifier _

  $default      reduce using rule 64 (wait_modifier)


state 439

  65) timeout_modifier : swallow_newlines _ TIMEOUT LPAREN label RPAREN
  66) after_modifier : swallow_newlines _ AFTER LPAREN indirectable COMMA STRING RPAREN

  TIMEOUT       shift, and go to state 480
  AFTER         shift, and go to state 481


state 440

  71) use_statement : FANUC_USE LPAREN indirectable COMMA group_statement RPAREN _

  $default      reduce using rule 71 (use_statement)


state 441

 299) operation : OPERATION LBRACK var_or_indirect COMMA var_or_indirect _ RBRACK

  RBRACK        shift, and go to state 482


state 442

 282) definable_range : DIGIT RANGE _ DIGIT

  DIGIT         shift, and go to state 483


state 443

 294) reg : reg_types LBRACK definable_range RBRACK _

  $default      reduce using rule 294 (reg)


state 444

 297) framereg : frametype LBRACK DIGIT RBRACK _

  $default      reduce using rule 297 (framereg)


state 445

  68) group_statement : GROUP LPAREN integer _ RPAREN

  RPAREN        shift, and go to state 484


state 446

  79) program_call : var_or_indirect EQUAL function_call LPAREN args RPAREN _

  $default      reduce using rule 79 (program_call)


state 447

 323) hash_value : optional_sign DIGIT _

  $default      reduce using rule 323 (hash_value)


state 448

 324) hash_value : optional_sign REAL _

  $default      reduce using rule 324 (hash_value)


state 449

 328) array : LBRACK sn array_values sn _ RBRACK

  RBRACK        shift, and go to state 485


state 450

 330) array_values : array_values COMMA _ sn array_value

  NEWLINE       shift, and go to state 193
  $default      reduce using rule 311 (swallow_newlines)

  swallow_newlines  go to state 195
  sn            go to state 486

state 451

  97) io_method : IO_METHOD LPAREN var_or_indirect COMMA number COMMA _ STRING RPAREN

  STRING        shift, and go to state 487


state 452

 102) conditional : IF expression block elsif_conditions else_block END _

  $default      reduce using rule 102 (conditional)


state 453

 108) elsif_condition : ELSIF expression block _

  $default      reduce using rule 108 (elsif_condition)


state 454

 104) conditional_block : IF expression THEN block elsif_block else_block _ END

  END           shift, and go to state 488


state 455

 110) elsif_block : elsif_block elsif_block_condition _

  $default      reduce using rule 110 (elsif_block)


state 456

 112) elsif_block_condition : ELSIF expression _ THEN block
 240) binary_expression : expression _ operator expression

  EEQUAL        shift, and go to state 211
  NOTEQUAL      shift, and go to state 212
  GTE           shift, and go to state 215
  LTE           shift, and go to state 216
  LT            shift, and go to state 213
  GT            shift, and go to state 214
  PLUS          shift, and go to state 217
  MINUS         shift, and go to state 218
  STAR          shift, and go to state 220
  SLASH         shift, and go to state 221
  DIV           shift, and go to state 222
  AND           shift, and go to state 224
  OR            shift, and go to state 219
  MOD           shift, and go to state 223
  THEN          shift, and go to state 489

  operator      go to state 210

state 457

 113) forloop : FOR var IN LPAREN int_or_var TO _ int_or_var RPAREN block END

  DIGIT         shift, and go to state 119
  WORD          shift, and go to state 107

  int_or_var    go to state 490
  integer       go to state 410
  var           go to state 411
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87

state 458

 114) forloop : FOR var IN LPAREN int_or_var DOWNTO _ int_or_var RPAREN block END

  DIGIT         shift, and go to state 119
  WORD          shift, and go to state 107

  int_or_var    go to state 491
  integer       go to state 410
  var           go to state 411
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87

state 459

  89) program_vars : program_vars COMMA program_var _

  $default      reduce using rule 89 (program_vars)


state 460

 126) function : FUNCTION WORD LPAREN program_vars RPAREN block _ END

  END           shift, and go to state 492


state 461

 127) function : FUNCTION WORD LPAREN program_vars RPAREN COLON _ WORD block END

  WORD          shift, and go to state 493


state 462

 128) case_statement : CASE var swallow_newlines case_conditions case_else END _

  $default      reduce using rule 128 (case_statement)


state 463

 134) case_else : ELSE block _

  $default      reduce using rule 134 (case_else)


state 464

 131) case_condition : WHEN case_allowed_condition block _

  $default      reduce using rule 131 (case_condition)


state 465

 147) motion_statement : MOVE DOT swallow_newlines TO LPAREN var_or_indirect _ RPAREN motion_modifiers

  RPAREN        shift, and go to state 494


state 466

 148) motion_statement : MOVE DOT swallow_newlines MID LPAREN var_or_indirect _ RPAREN DOT swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers

  RPAREN        shift, and go to state 495


state 467

 202) position_assignment : LPAREN assignable_range RPAREN var_method_modifiers ARROW array _

  $default      reduce using rule 202 (position_assignment)


state 468

 204) position_assignment : assignable_range EQUAL LPAREN assignable_range RPAREN pose_range_modifiers _
 215) pose_range_modifiers : pose_range_modifiers _ pose_range_modifier

  DOT           shift, and go to state 470
  $default      reduce using rule 204 (position_assignment)

  pose_range_modifier  go to state 496

state 469

 214) pose_range_modifiers : pose_range_modifier _

  $default      reduce using rule 214 (pose_range_modifiers)


state 470

 216) pose_range_modifier : DOT _ swallow_newlines POSEREVERSE

  NEWLINE       shift, and go to state 193
  $default      reduce using rule 311 (swallow_newlines)

  swallow_newlines  go to state 497

state 471

 227) var_system : SYSTEM WORD LBRACK integer RBRACK var_system_modifers _
 229) var_system_modifers : var_system_modifers _ var_system_modifer

  DOT           shift, and go to state 301
  DOT           [reduce using rule 227 (var_system)]
  $default      reduce using rule 227 (var_system)

  var_system_modifer  go to state 366

state 472

 267) indirect_thing : INDIRECT LPAREN STRING COMMA indirectable RPAREN _
 268) indirect_thing : INDIRECT LPAREN STRING COMMA indirectable RPAREN _ var_method_modifiers

  DOT           shift, and go to state 147
  $default      reduce using rule 267 (indirect_thing)

  var_method_modifier  go to state 146
  var_method_modifiers  go to state 498

state 473

 314) hash : LBRACE sn hash_attributes sn _ RBRACE

  RBRACE        shift, and go to state 499


state 474

 317) hash_attributes : hash_attributes COMMA _ sn hash_attribute

  NEWLINE       shift, and go to state 193
  $default      reduce using rule 311 (swallow_newlines)

  swallow_newlines  go to state 195
  sn            go to state 500

state 475

 318) hash_attribute : STRING COLON _ hash_value

  STRING        shift, and go to state 390
  WORD          shift, and go to state 391
  MINUS         shift, and go to state 142
  TRUE_FALSE    shift, and go to state 395
  LBRACK        shift, and go to state 275
  LBRACE        shift, and go to state 306
  $default      reduce using rule 327 (optional_sign)

  hash_value    go to state 501
  hash          go to state 392
  array         go to state 393
  optional_sign  go to state 394
  sign          go to state 396

state 476

  50) tp_tool_methods : LBRACE sn tp_tool_attributes sn _ RBRACE

  RBRACE        shift, and go to state 502


state 477

  53) tp_tool_attributes : tp_tool_attributes COMMA _ sn tp_tool_attribute

  NEWLINE       shift, and go to state 193
  $default      reduce using rule 311 (swallow_newlines)

  sn            go to state 503
  swallow_newlines  go to state 195

state 478

  54) tp_tool_attribute : WORD COLON _ hash_value

  STRING        shift, and go to state 390
  WORD          shift, and go to state 391
  MINUS         shift, and go to state 142
  TRUE_FALSE    shift, and go to state 395
  LBRACK        shift, and go to state 275
  LBRACE        shift, and go to state 306
  $default      reduce using rule 327 (optional_sign)

  hash_value    go to state 504
  hash          go to state 392
  array         go to state 393
  optional_sign  go to state 394
  sign          go to state 396

state 479

  62) wait_statement : WAIT_UNTIL LPAREN expression RPAREN DOT wait_modifier DOT _ wait_modifier

  NEWLINE       shift, and go to state 193
  $default      reduce using rule 311 (swallow_newlines)

  wait_modifier  go to state 505
  timeout_modifier  go to state 437
  after_modifier  go to state 438
  swallow_newlines  go to state 439

state 480

  65) timeout_modifier : swallow_newlines TIMEOUT _ LPAREN label RPAREN

  LPAREN        shift, and go to state 506


state 481

  66) after_modifier : swallow_newlines AFTER _ LPAREN indirectable COMMA STRING RPAREN

  LPAREN        shift, and go to state 507


state 482

 299) operation : OPERATION LBRACK var_or_indirect COMMA var_or_indirect RBRACK _

  $default      reduce using rule 299 (operation)


state 483

 282) definable_range : DIGIT RANGE DIGIT _

  $default      reduce using rule 282 (definable_range)


state 484

  68) group_statement : GROUP LPAREN integer RPAREN _

  $default      reduce using rule 68 (group_statement)


state 485

 328) array : LBRACK sn array_values sn RBRACK _

  $default      reduce using rule 328 (array)


state 486

 330) array_values : array_values COMMA sn _ array_value

  STRING        shift, and go to state 390
  WORD          shift, and go to state 391
  MINUS         shift, and go to state 142
  TRUE_FALSE    shift, and go to state 395
  LBRACK        shift, and go to state 275
  LBRACE        shift, and go to state 306
  $default      reduce using rule 327 (optional_sign)

  hash          go to state 392
  array         go to state 393
  optional_sign  go to state 394
  sign          go to state 396
  array_value   go to state 508
  hash_value    go to state 399

state 487

  97) io_method : IO_METHOD LPAREN var_or_indirect COMMA number COMMA STRING _ RPAREN

  RPAREN        shift, and go to state 509


state 488

 104) conditional_block : IF expression THEN block elsif_block else_block END _

  $default      reduce using rule 104 (conditional_block)


state 489

 112) elsif_block_condition : ELSIF expression THEN _ block

  NEWLINE       shift, and go to state 279

  block         go to state 510

state 490

 113) forloop : FOR var IN LPAREN int_or_var TO int_or_var _ RPAREN block END

  RPAREN        shift, and go to state 511


state 491

 114) forloop : FOR var IN LPAREN int_or_var DOWNTO int_or_var _ RPAREN block END

  RPAREN        shift, and go to state 512


state 492

 126) function : FUNCTION WORD LPAREN program_vars RPAREN block END _

  $default      reduce using rule 126 (function)


state 493

 127) function : FUNCTION WORD LPAREN program_vars RPAREN COLON WORD _ block END

  NEWLINE       shift, and go to state 279

  block         go to state 513

state 494

 147) motion_statement : MOVE DOT swallow_newlines TO LPAREN var_or_indirect RPAREN _ motion_modifiers

  DOT           shift, and go to state 516

  motion_modifiers  go to state 514
  motion_modifier  go to state 515

state 495

 148) motion_statement : MOVE DOT swallow_newlines MID LPAREN var_or_indirect RPAREN _ DOT swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers

  DOT           shift, and go to state 517


state 496

 215) pose_range_modifiers : pose_range_modifiers pose_range_modifier _

  $default      reduce using rule 215 (pose_range_modifiers)


state 497

 216) pose_range_modifier : DOT swallow_newlines _ POSEREVERSE

  POSEREVERSE   shift, and go to state 518


state 498

 213) var_method_modifiers : var_method_modifiers _ var_method_modifier
 268) indirect_thing : INDIRECT LPAREN STRING COMMA indirectable RPAREN var_method_modifiers _

  DOT           shift, and go to state 147
  $default      reduce using rule 268 (indirect_thing)

  var_method_modifier  go to state 254

state 499

 314) hash : LBRACE sn hash_attributes sn RBRACE _

  $default      reduce using rule 314 (hash)


state 500

 317) hash_attributes : hash_attributes COMMA sn _ hash_attribute

  STRING        shift, and go to state 430

  hash_attribute  go to state 519

state 501

 318) hash_attribute : STRING COLON hash_value _

  $default      reduce using rule 318 (hash_attribute)


state 502

  50) tp_tool_methods : LBRACE sn tp_tool_attributes sn RBRACE _

  $default      reduce using rule 50 (tp_tool_methods)


state 503

  53) tp_tool_attributes : tp_tool_attributes COMMA sn _ tp_tool_attribute

  WORD          shift, and go to state 434

  tp_tool_attribute  go to state 520

state 504

  54) tp_tool_attribute : WORD COLON hash_value _

  $default      reduce using rule 54 (tp_tool_attribute)


state 505

  62) wait_statement : WAIT_UNTIL LPAREN expression RPAREN DOT wait_modifier DOT wait_modifier _

  $default      reduce using rule 62 (wait_statement)


state 506

  65) timeout_modifier : swallow_newlines TIMEOUT LPAREN _ label RPAREN

  LABEL         shift, and go to state 49

  label         go to state 521

state 507

  66) after_modifier : swallow_newlines AFTER LPAREN _ indirectable COMMA STRING RPAREN

  REAL          shift, and go to state 118
  DIGIT         shift, and go to state 119
  WORD          shift, and go to state 107

  indirectable  go to state 522
  number        go to state 115
  var           go to state 116
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87
  integer       go to state 117

state 508

 330) array_values : array_values COMMA sn array_value _

  $default      reduce using rule 330 (array_values)


state 509

  97) io_method : IO_METHOD LPAREN var_or_indirect COMMA number COMMA STRING RPAREN _

  $default      reduce using rule 97 (io_method)


state 510

 112) elsif_block_condition : ELSIF expression THEN block _

  $default      reduce using rule 112 (elsif_block_condition)


state 511

 113) forloop : FOR var IN LPAREN int_or_var TO int_or_var RPAREN _ block END

  NEWLINE       shift, and go to state 279

  block         go to state 523

state 512

 114) forloop : FOR var IN LPAREN int_or_var DOWNTO int_or_var RPAREN _ block END

  NEWLINE       shift, and go to state 279

  block         go to state 524

state 513

 127) function : FUNCTION WORD LPAREN program_vars RPAREN COLON WORD block _ END

  END           shift, and go to state 525


state 514

 147) motion_statement : MOVE DOT swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers _
 150) motion_modifiers : motion_modifiers _ motion_modifier

  DOT           shift, and go to state 516
  $default      reduce using rule 147 (motion_statement)

  motion_modifier  go to state 526

state 515

 149) motion_modifiers : motion_modifier _

  $default      reduce using rule 149 (motion_modifiers)


state 516

 153) motion_modifier : DOT _ swallow_newlines AT LPAREN speed RPAREN
 154) motion_modifier : DOT _ swallow_newlines ACC LPAREN int_or_var RPAREN
 155) motion_modifier : DOT _ swallow_newlines CR LPAREN motion_arguements RPAREN
 156) motion_modifier : DOT _ swallow_newlines TERM LPAREN valid_terminations RPAREN
 157) motion_modifier : DOT _ swallow_newlines OFFSET LPAREN var_or_indirect RPAREN
 158) motion_modifier : DOT _ swallow_newlines TIME_SEGMENT LPAREN time COMMA time_seg_actions RPAREN
 159) motion_modifier : DOT _ swallow_newlines SKIP LPAREN label optional_lpos_arg RPAREN
 160) motion_modifier : DOT _ swallow_newlines valid_motion_statements
 161) motion_modifier : DOT _ swallow_newlines single_argument_motion_modifiers LPAREN int_or_var RPAREN

  NEWLINE       shift, and go to state 193
  $default      reduce using rule 311 (swallow_newlines)

  swallow_newlines  go to state 527

state 517

 148) motion_statement : MOVE DOT swallow_newlines MID LPAREN var_or_indirect RPAREN DOT _ swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers

  NEWLINE       shift, and go to state 193
  $default      reduce using rule 311 (swallow_newlines)

  swallow_newlines  go to state 528

state 518

 216) pose_range_modifier : DOT swallow_newlines POSEREVERSE _

  $default      reduce using rule 216 (pose_range_modifier)


state 519

 317) hash_attributes : hash_attributes COMMA sn hash_attribute _

  $default      reduce using rule 317 (hash_attributes)


state 520

  53) tp_tool_attributes : tp_tool_attributes COMMA sn tp_tool_attribute _

  $default      reduce using rule 53 (tp_tool_attributes)


state 521

  65) timeout_modifier : swallow_newlines TIMEOUT LPAREN label _ RPAREN

  RPAREN        shift, and go to state 529


state 522

  66) after_modifier : swallow_newlines AFTER LPAREN indirectable _ COMMA STRING RPAREN

  COMMA         shift, and go to state 530


state 523

 113) forloop : FOR var IN LPAREN int_or_var TO int_or_var RPAREN block _ END

  END           shift, and go to state 531


state 524

 114) forloop : FOR var IN LPAREN int_or_var DOWNTO int_or_var RPAREN block _ END

  END           shift, and go to state 532


state 525

 127) function : FUNCTION WORD LPAREN program_vars RPAREN COLON WORD block END _

  $default      reduce using rule 127 (function)


state 526

 150) motion_modifiers : motion_modifiers motion_modifier _

  $default      reduce using rule 150 (motion_modifiers)


state 527

 153) motion_modifier : DOT swallow_newlines _ AT LPAREN speed RPAREN
 154) motion_modifier : DOT swallow_newlines _ ACC LPAREN int_or_var RPAREN
 155) motion_modifier : DOT swallow_newlines _ CR LPAREN motion_arguements RPAREN
 156) motion_modifier : DOT swallow_newlines _ TERM LPAREN valid_terminations RPAREN
 157) motion_modifier : DOT swallow_newlines _ OFFSET LPAREN var_or_indirect RPAREN
 158) motion_modifier : DOT swallow_newlines _ TIME_SEGMENT LPAREN time COMMA time_seg_actions RPAREN
 159) motion_modifier : DOT swallow_newlines _ SKIP LPAREN label optional_lpos_arg RPAREN
 160) motion_modifier : DOT swallow_newlines _ valid_motion_statements
 161) motion_modifier : DOT swallow_newlines _ single_argument_motion_modifiers LPAREN int_or_var RPAREN

  TIME_SEGMENT  shift, and go to state 538
  AT            shift, and go to state 533
  ACC           shift, and go to state 534
  TERM          shift, and go to state 536
  OFFSET        shift, and go to state 537
  SKIP          shift, and go to state 539
  COORD         shift, and go to state 542
  MROT          shift, and go to state 543
  PTH           shift, and go to state 544
  WJNT          shift, and go to state 546
  INC           shift, and go to state 545
  BREAK         shift, and go to state 547
  RTCP          shift, and go to state 548
  FPLIN         shift, and go to state 549
  AP_LD         shift, and go to state 554
  RT_LD         shift, and go to state 553
  CD            shift, and go to state 550
  CR            shift, and go to state 535
  INDEV         shift, and go to state 552
  EV            shift, and go to state 551
  PSPD          shift, and go to state 555
  CTV           shift, and go to state 556

  valid_motion_statements  go to state 540
  single_argument_motion_modifiers  go to state 541

state 528

 148) motion_statement : MOVE DOT swallow_newlines MID LPAREN var_or_indirect RPAREN DOT swallow_newlines _ TO LPAREN var_or_indirect RPAREN motion_modifiers

  TO            shift, and go to state 557


state 529

  65) timeout_modifier : swallow_newlines TIMEOUT LPAREN label RPAREN _

  $default      reduce using rule 65 (timeout_modifier)


state 530

  66) after_modifier : swallow_newlines AFTER LPAREN indirectable COMMA _ STRING RPAREN

  STRING        shift, and go to state 558


state 531

 113) forloop : FOR var IN LPAREN int_or_var TO int_or_var RPAREN block END _

  $default      reduce using rule 113 (forloop)


state 532

 114) forloop : FOR var IN LPAREN int_or_var DOWNTO int_or_var RPAREN block END _

  $default      reduce using rule 114 (forloop)


state 533

 153) motion_modifier : DOT swallow_newlines AT _ LPAREN speed RPAREN

  LPAREN        shift, and go to state 559


state 534

 154) motion_modifier : DOT swallow_newlines ACC _ LPAREN int_or_var RPAREN

  LPAREN        shift, and go to state 560


state 535

 155) motion_modifier : DOT swallow_newlines CR _ LPAREN motion_arguements RPAREN

  LPAREN        shift, and go to state 561


state 536

 156) motion_modifier : DOT swallow_newlines TERM _ LPAREN valid_terminations RPAREN

  LPAREN        shift, and go to state 562


state 537

 157) motion_modifier : DOT swallow_newlines OFFSET _ LPAREN var_or_indirect RPAREN

  LPAREN        shift, and go to state 563


state 538

 158) motion_modifier : DOT swallow_newlines TIME_SEGMENT _ LPAREN time COMMA time_seg_actions RPAREN

  LPAREN        shift, and go to state 564


state 539

 159) motion_modifier : DOT swallow_newlines SKIP _ LPAREN label optional_lpos_arg RPAREN

  LPAREN        shift, and go to state 565


state 540

 160) motion_modifier : DOT swallow_newlines valid_motion_statements _

  $default      reduce using rule 160 (motion_modifier)


state 541

 161) motion_modifier : DOT swallow_newlines single_argument_motion_modifiers _ LPAREN int_or_var RPAREN

  LPAREN        shift, and go to state 566


state 542

 162) valid_motion_statements : COORD _

  $default      reduce using rule 162 (valid_motion_statements)


state 543

 163) valid_motion_statements : MROT _

  $default      reduce using rule 163 (valid_motion_statements)


state 544

 164) valid_motion_statements : PTH _

  $default      reduce using rule 164 (valid_motion_statements)


state 545

 165) valid_motion_statements : INC _

  $default      reduce using rule 165 (valid_motion_statements)


state 546

 166) valid_motion_statements : WJNT _

  $default      reduce using rule 166 (valid_motion_statements)


state 547

 167) valid_motion_statements : BREAK _

  $default      reduce using rule 167 (valid_motion_statements)


state 548

 168) valid_motion_statements : RTCP _

  $default      reduce using rule 168 (valid_motion_statements)


state 549

 169) valid_motion_statements : FPLIN _

  $default      reduce using rule 169 (valid_motion_statements)


state 550

 170) single_argument_motion_modifiers : CD _

  $default      reduce using rule 170 (single_argument_motion_modifiers)


state 551

 171) single_argument_motion_modifiers : EV _

  $default      reduce using rule 171 (single_argument_motion_modifiers)


state 552

 172) single_argument_motion_modifiers : INDEV _

  $default      reduce using rule 172 (single_argument_motion_modifiers)


state 553

 173) single_argument_motion_modifiers : RT_LD _

  $default      reduce using rule 173 (single_argument_motion_modifiers)


state 554

 174) single_argument_motion_modifiers : AP_LD _

  $default      reduce using rule 174 (single_argument_motion_modifiers)


state 555

 175) single_argument_motion_modifiers : PSPD _

  $default      reduce using rule 175 (single_argument_motion_modifiers)


state 556

 176) single_argument_motion_modifiers : CTV _

  $default      reduce using rule 176 (single_argument_motion_modifiers)


state 557

 148) motion_statement : MOVE DOT swallow_newlines MID LPAREN var_or_indirect RPAREN DOT swallow_newlines TO _ LPAREN var_or_indirect RPAREN motion_modifiers

  LPAREN        shift, and go to state 567


state 558

  66) after_modifier : swallow_newlines AFTER LPAREN indirectable COMMA STRING _ RPAREN

  RPAREN        shift, and go to state 568


state 559

 153) motion_modifier : DOT swallow_newlines AT LPAREN _ speed RPAREN

  STRING        shift, and go to state 571
  REAL          shift, and go to state 118
  DIGIT         shift, and go to state 119
  WORD          shift, and go to state 107

  speed         go to state 569
  number        go to state 115
  var           go to state 116
  indirectable  go to state 570
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87
  integer       go to state 117

state 560

 154) motion_modifier : DOT swallow_newlines ACC LPAREN _ int_or_var RPAREN

  DIGIT         shift, and go to state 119
  WORD          shift, and go to state 107

  integer       go to state 410
  var           go to state 411
  int_or_var    go to state 572
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87

state 561

 155) motion_modifier : DOT swallow_newlines CR LPAREN _ motion_arguements RPAREN

  DIGIT         shift, and go to state 119
  WORD          shift, and go to state 107
  MINUS         shift, and go to state 577

  valid_terminations  go to state 573
  motion_arguements  go to state 574
  integer       go to state 575
  var           go to state 576
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87

state 562

 156) motion_modifier : DOT swallow_newlines TERM LPAREN _ valid_terminations RPAREN

  DIGIT         shift, and go to state 119
  WORD          shift, and go to state 107
  MINUS         shift, and go to state 577

  valid_terminations  go to state 578
  integer       go to state 575
  var           go to state 576
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87

state 563

 157) motion_modifier : DOT swallow_newlines OFFSET LPAREN _ var_or_indirect RPAREN

  WORD          shift, and go to state 107
  INDIRECT      shift, and go to state 88
  SYSTEM        shift, and go to state 86

  var           go to state 105
  indirect_thing  go to state 62
  var_system    go to state 106
  var_or_indirect  go to state 579
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87

state 564

 158) motion_modifier : DOT swallow_newlines TIME_SEGMENT LPAREN _ time COMMA time_seg_actions RPAREN

  REAL          shift, and go to state 118
  DIGIT         shift, and go to state 119
  WORD          shift, and go to state 107

  time          go to state 580
  var           go to state 581
  number        go to state 582
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87
  integer       go to state 117

state 565

 159) motion_modifier : DOT swallow_newlines SKIP LPAREN _ label optional_lpos_arg RPAREN

  LABEL         shift, and go to state 49

  label         go to state 583

state 566

 161) motion_modifier : DOT swallow_newlines single_argument_motion_modifiers LPAREN _ int_or_var RPAREN

  DIGIT         shift, and go to state 119
  WORD          shift, and go to state 107

  integer       go to state 410
  var           go to state 411
  int_or_var    go to state 584
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87

state 567

 148) motion_statement : MOVE DOT swallow_newlines MID LPAREN var_or_indirect RPAREN DOT swallow_newlines TO LPAREN _ var_or_indirect RPAREN motion_modifiers

  WORD          shift, and go to state 107
  INDIRECT      shift, and go to state 88
  SYSTEM        shift, and go to state 86

  var           go to state 105
  indirect_thing  go to state 62
  var_system    go to state 106
  var_or_indirect  go to state 585
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87

state 568

  66) after_modifier : swallow_newlines AFTER LPAREN indirectable COMMA STRING RPAREN _

  $default      reduce using rule 66 (after_modifier)


state 569

 153) motion_modifier : DOT swallow_newlines AT LPAREN speed _ RPAREN

  RPAREN        shift, and go to state 586


state 570

 191) speed : indirectable _ COMMA STRING

  COMMA         shift, and go to state 587


state 571

 192) speed : STRING _

  $default      reduce using rule 192 (speed)


state 572

 154) motion_modifier : DOT swallow_newlines ACC LPAREN int_or_var _ RPAREN

  RPAREN        shift, and go to state 588


state 573

 151) motion_arguements : valid_terminations _
 152) motion_arguements : valid_terminations _ COMMA valid_terminations

  COMMA         shift, and go to state 589
  $default      reduce using rule 151 (motion_arguements)


state 574

 155) motion_modifier : DOT swallow_newlines CR LPAREN motion_arguements _ RPAREN

  RPAREN        shift, and go to state 590


state 575

 177) valid_terminations : integer _

  $default      reduce using rule 177 (valid_terminations)


state 576

 178) valid_terminations : var _

  $default      reduce using rule 178 (valid_terminations)


state 577

 179) valid_terminations : MINUS _ DIGIT

  DIGIT         shift, and go to state 591


state 578

 156) motion_modifier : DOT swallow_newlines TERM LPAREN valid_terminations _ RPAREN

  RPAREN        shift, and go to state 592


state 579

 157) motion_modifier : DOT swallow_newlines OFFSET LPAREN var_or_indirect _ RPAREN

  RPAREN        shift, and go to state 593


state 580

 158) motion_modifier : DOT swallow_newlines TIME_SEGMENT LPAREN time _ COMMA time_seg_actions RPAREN

  COMMA         shift, and go to state 594


state 581

 189) time : var _

  $default      reduce using rule 189 (time)


state 582

 190) time : number _

  $default      reduce using rule 190 (time)


state 583

 159) motion_modifier : DOT swallow_newlines SKIP LPAREN label _ optional_lpos_arg RPAREN

  COMMA         shift, and go to state 596
  $default      reduce using rule 181 (optional_lpos_arg)

  optional_lpos_arg  go to state 595

state 584

 161) motion_modifier : DOT swallow_newlines single_argument_motion_modifiers LPAREN int_or_var _ RPAREN

  RPAREN        shift, and go to state 597


state 585

 148) motion_statement : MOVE DOT swallow_newlines MID LPAREN var_or_indirect RPAREN DOT swallow_newlines TO LPAREN var_or_indirect _ RPAREN motion_modifiers

  RPAREN        shift, and go to state 598


state 586

 153) motion_modifier : DOT swallow_newlines AT LPAREN speed RPAREN _

  $default      reduce using rule 153 (motion_modifier)


state 587

 191) speed : indirectable COMMA _ STRING

  STRING        shift, and go to state 599


state 588

 154) motion_modifier : DOT swallow_newlines ACC LPAREN int_or_var RPAREN _

  $default      reduce using rule 154 (motion_modifier)


state 589

 152) motion_arguements : valid_terminations COMMA _ valid_terminations

  DIGIT         shift, and go to state 119
  WORD          shift, and go to state 107
  MINUS         shift, and go to state 577

  valid_terminations  go to state 600
  integer       go to state 575
  var           go to state 576
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87

state 590

 155) motion_modifier : DOT swallow_newlines CR LPAREN motion_arguements RPAREN _

  $default      reduce using rule 155 (motion_modifier)


state 591

 179) valid_terminations : MINUS DIGIT _

  $default      reduce using rule 179 (valid_terminations)


state 592

 156) motion_modifier : DOT swallow_newlines TERM LPAREN valid_terminations RPAREN _

  $default      reduce using rule 156 (motion_modifier)


state 593

 157) motion_modifier : DOT swallow_newlines OFFSET LPAREN var_or_indirect RPAREN _

  $default      reduce using rule 157 (motion_modifier)


state 594

 158) motion_modifier : DOT swallow_newlines TIME_SEGMENT LPAREN time COMMA _ time_seg_actions RPAREN

  IO_METHOD     shift, and go to state 60
  WORD          shift, and go to state 267
  INDIRECT      shift, and go to state 88
  CALL          shift, and go to state 57
  RUN           shift, and go to state 56
  SYSTEM        shift, and go to state 86

  namespaces    go to state 54
  function_call  go to state 55
  var_or_indirect  go to state 601
  var           go to state 105
  indirect_thing  go to state 62
  var_system    go to state 106
  time_seg_actions  go to state 602
  program_call  go to state 603
  io_method     go to state 604
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  ns            go to state 87

state 595

 159) motion_modifier : DOT swallow_newlines SKIP LPAREN label optional_lpos_arg _ RPAREN

  RPAREN        shift, and go to state 605


state 596

 180) optional_lpos_arg : COMMA _ var

  WORD          shift, and go to state 107

  var           go to state 606
  var_without_namespaces  go to state 84
  var_with_namespaces  go to state 85
  namespaces    go to state 108
  ns            go to state 87

state 597

 161) motion_modifier : DOT swallow_newlines single_argument_motion_modifiers LPAREN int_or_var RPAREN _

  $default      reduce using rule 161 (motion_modifier)


state 598

 148) motion_statement : MOVE DOT swallow_newlines MID LPAREN var_or_indirect RPAREN DOT swallow_newlines TO LPAREN var_or_indirect RPAREN _ motion_modifiers

  DOT           shift, and go to state 516

  motion_modifiers  go to state 607
  motion_modifier  go to state 515

state 599

 191) speed : indirectable COMMA STRING _

  $default      reduce using rule 191 (speed)


state 600

 152) motion_arguements : valid_terminations COMMA valid_terminations _

  $default      reduce using rule 152 (motion_arguements)


state 601

  79) program_call : var_or_indirect _ EQUAL function_call LPAREN args RPAREN

  EQUAL         shift, and go to state 608


state 602

 158) motion_modifier : DOT swallow_newlines TIME_SEGMENT LPAREN time COMMA time_seg_actions _ RPAREN

  RPAREN        shift, and go to state 609


state 603

 187) time_seg_actions : program_call _

  $default      reduce using rule 187 (time_seg_actions)


state 604

 188) time_seg_actions : io_method _

  $default      reduce using rule 188 (time_seg_actions)


state 605

 159) motion_modifier : DOT swallow_newlines SKIP LPAREN label optional_lpos_arg RPAREN _

  $default      reduce using rule 159 (motion_modifier)


state 606

 180) optional_lpos_arg : COMMA var _

  $default      reduce using rule 180 (optional_lpos_arg)


state 607

 148) motion_statement : MOVE DOT swallow_newlines MID LPAREN var_or_indirect RPAREN DOT swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers _
 150) motion_modifiers : motion_modifiers _ motion_modifier

  DOT           shift, and go to state 516
  $default      reduce using rule 148 (motion_statement)

  motion_modifier  go to state 526

state 608

  79) program_call : var_or_indirect EQUAL _ function_call LPAREN args RPAREN

  WORD          shift, and go to state 153

  namespaces    go to state 154
  function_call  go to state 268
  ns            go to state 87

state 609

 158) motion_modifier : DOT swallow_newlines TIME_SEGMENT LPAREN time COMMA time_seg_actions RPAREN _

  $default      reduce using rule 158 (motion_modifier)

